2020-05-19 21:02:39 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:02:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:02:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:02:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:02:39 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-19 21:02:39 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:05:05 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:05:05 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:05:05 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:05:05 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:05:05 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-19 21:05:05 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:14:14 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:14:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:14:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:14:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:14:14 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.15.Final
2020-05-19 21:14:14 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:21:49 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:21:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:21:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:21:49 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:21:49 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:21:49 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:29:30 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:29:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:29:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:29:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:29:30 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:29:30 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:29:30 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:29:31 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:29:32 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:29:32 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:29:32 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:29:32 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:29:32 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:29:32 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5674e1f2
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43f82e78
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f40e5db
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2654635
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6179e425
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49c6c24f
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1817f1eb
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f9678e1
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:29:32 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807bdeb
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd80673
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@674bd420
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5e1fa5b1
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1d131e1b
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f152006
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3724af13
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a43ce46
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@616fe72b
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e8dcdaa
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@681a8b4e
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cbe877d
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-19 21:29:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-19 21:29:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:29:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:29:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:29:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:29:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:29:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:29:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:29:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:29:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:29:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:29:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:29:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:29:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:29:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:29:33 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:29:33 INFO  pooling:115 - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-19 21:29:33 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:29:33 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:29:33 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:29:33 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 1 (min=1)
2020-05-19 21:29:35 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:29:35 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:29:35 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:29:35 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2020-05-19 21:29:35 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:29:35 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:29:35 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:29:35 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4642b71d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1450078a]
2020-05-19 21:29:35 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:29:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:29:35 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:29:35 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table Movie
2020-05-19 21:29:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:29:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:29:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:29:35 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:29:35 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:29:35 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:29:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:29:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:29:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:29:35 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:29:35 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:29:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:29:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:29:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:29:35 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:29:35 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:29:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:29:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:29:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:29:35 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:29:35 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:29:35 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:29:35 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:29:35 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:29:35 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:29:35 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:29:35 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:29:35 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:29:35 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:29:35 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:29:35 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:29:35 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:29:35 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:29:35 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:29:35 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:29:35 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:29:35 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:29:35 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:29:35 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:29:35 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:29:35 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:29:35 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:29:35 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:29:35 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:29:35 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:29:35 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:29:35 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:29:35 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:29:35 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:29:35 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:29:35 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:29:35 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:29:35 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:29:35 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:29:35 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:29:35 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:29:35 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:29:35 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:29:35 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:29:35 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d178d55, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=1, java.class.version=55.0}
2020-05-19 21:29:35 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:29:35 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:29:35 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4642b71d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5e5073ab]
2020-05-19 21:29:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:29:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:29:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:29:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:29:35 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:29:35 DEBUG AbstractEntityPersister:3823 -  Version select: select id from Movie where id =?
2020-05-19 21:29:35 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from Movie movie_ where movie_.id=?
2020-05-19 21:29:35 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:29:35 DEBUG AbstractEntityPersister:394 -  Update 0: update Movie set description=?, tittle=? where id=?
2020-05-19 21:29:35 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Movie where id=?
2020-05-19 21:29:35 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into Movie (description, tittle) values (?, ?)
2020-05-19 21:29:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cb2918c]
2020-05-19 21:29:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:29:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:29:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:29:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:29:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:29:35 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:29:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25673087]
2020-05-19 21:29:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:29:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:29:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:29:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:29:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:29:35 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:29:35 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:29:35 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:29:35 DEBUG SQL:127 - drop table if exists Movie
2020-05-19 21:29:35 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4fb392c4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:29:35 DEBUG SQL:127 - create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM
2020-05-19 21:29:35 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2121d1f9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:29:35 WARN  ExceptionHandlerLoggedImpl:27 - GenerationTarget encountered exception accepting command : Error executing DDL "create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:423)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:314)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:156)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.dev.cinema.util.HibernateUtil.initSessionFactory(HibernateUtil.java:14)
	at com.dev.cinema.util.HibernateUtil.<clinit>(HibernateUtil.java:7)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:315)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:172)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:169)
	at com.dev.cinema.lib.Injector.getClasses(Injector.java:143)
	at com.dev.cinema.lib.Injector.<init>(Injector.java:22)
	at com.dev.cinema.lib.Injector.getInstance(Injector.java:32)
	at com.dev.cinema.Main.<clinit>(Main.java:8)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type=MyISAM' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 22 more
2020-05-19 21:29:35 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:29:35 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:29:35 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:29:35 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:29:35 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:29:35 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:29:35 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@436bd4df
2020-05-19 21:29:35 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 6fd785cb-8fb1-4f9e-a358-3425e7c68794 (<unnamed>)
2020-05-19 21:29:35 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:30:14 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:30:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:30:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:30:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:30:14 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:30:14 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:30:14 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:30:14 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:30:15 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:30:15 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:30:15 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:30:15 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:30:15 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:30:15 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5674e1f2
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43f82e78
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f40e5db
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2654635
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6179e425
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49c6c24f
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1817f1eb
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f9678e1
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807bdeb
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd80673
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@674bd420
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5e1fa5b1
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1d131e1b
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f152006
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3724af13
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a43ce46
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@616fe72b
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e8dcdaa
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@681a8b4e
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cbe877d
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-19 21:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-19 21:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:30:15 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:30:15 INFO  pooling:115 - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-19 21:30:15 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:30:15 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:30:15 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:30:15 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 1 (min=1)
2020-05-19 21:30:15 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:30:15 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:30:15 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:30:15 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2020-05-19 21:30:15 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:30:15 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:30:15 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:30:15 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@757529a4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@779de014]
2020-05-19 21:30:15 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:30:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:30:15 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:30:15 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table Movie
2020-05-19 21:30:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:30:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:30:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:30:15 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:30:15 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:30:15 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:30:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:30:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:30:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:30:15 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:30:15 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:30:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:30:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:30:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:30:15 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:30:15 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:30:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:30:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:30:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:30:15 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:30:15 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:30:15 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:30:15 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:30:15 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:30:15 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:30:15 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:30:15 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:30:15 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:30:15 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:30:15 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:30:15 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:30:15 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:30:15 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:30:15 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:30:15 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:30:15 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:30:15 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:30:15 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:30:15 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:30:15 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:30:15 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:30:15 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:30:15 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:30:15 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:30:15 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:30:15 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:30:15 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:30:15 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:30:15 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:30:15 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:30:15 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:30:15 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:30:15 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:30:15 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:30:15 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:30:15 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:30:15 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:30:15 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:30:15 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:30:15 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7a8136b3, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=1, java.class.version=55.0}
2020-05-19 21:30:15 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:30:15 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:30:15 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@757529a4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7123be6c]
2020-05-19 21:30:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:30:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:30:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:30:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:30:16 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:30:16 DEBUG AbstractEntityPersister:3823 -  Version select: select id from Movie where id =?
2020-05-19 21:30:16 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from Movie movie_ where movie_.id=?
2020-05-19 21:30:16 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:30:16 DEBUG AbstractEntityPersister:394 -  Update 0: update Movie set description=?, tittle=? where id=?
2020-05-19 21:30:16 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Movie where id=?
2020-05-19 21:30:16 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into Movie (description, tittle) values (?, ?)
2020-05-19 21:30:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bd51d3e]
2020-05-19 21:30:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:30:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:30:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:30:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:30:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:30:16 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:30:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d7109be]
2020-05-19 21:30:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:30:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:30:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:30:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:30:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:30:16 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:30:16 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:30:16 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:30:16 DEBUG SQL:127 - drop table if exists Movie
2020-05-19 21:30:16 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1a8df0b3] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:30:16 DEBUG SQL:127 - create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM
2020-05-19 21:30:16 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@f9f3928] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:30:16 WARN  ExceptionHandlerLoggedImpl:27 - GenerationTarget encountered exception accepting command : Error executing DDL "create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:423)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:314)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:156)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.dev.cinema.util.HibernateUtil.initSessionFactory(HibernateUtil.java:14)
	at com.dev.cinema.util.HibernateUtil.<clinit>(HibernateUtil.java:7)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:315)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:172)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:169)
	at com.dev.cinema.lib.Injector.getClasses(Injector.java:143)
	at com.dev.cinema.lib.Injector.<init>(Injector.java:22)
	at com.dev.cinema.lib.Injector.getInstance(Injector.java:32)
	at com.dev.cinema.Main.<clinit>(Main.java:8)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type=MyISAM' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 22 more
2020-05-19 21:30:16 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:30:16 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:30:16 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:30:16 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:30:16 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:30:16 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:30:16 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7301eebe
2020-05-19 21:30:16 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: bfe40759-d472-41ce-88d8-fb49e136c473 (<unnamed>)
2020-05-19 21:30:16 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:32:42 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:32:42 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:32:42 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:32:42 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:32:42 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:32:42 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:32:42 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:32:42 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:32:43 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:32:43 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:32:43 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:32:43 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:32:43 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:32:43 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5674e1f2
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43f82e78
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f40e5db
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2654635
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6179e425
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49c6c24f
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1817f1eb
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f9678e1
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807bdeb
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd80673
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@674bd420
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5e1fa5b1
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1d131e1b
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f152006
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3724af13
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a43ce46
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@616fe72b
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e8dcdaa
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@681a8b4e
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cbe877d
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-19 21:32:43 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-19 21:32:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:32:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:32:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:32:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:32:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:32:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:32:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:32:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:32:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:32:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:32:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:32:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:32:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:32:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:32:43 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:32:43 INFO  pooling:115 - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-19 21:32:43 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:32:43 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:32:43 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:32:43 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 1 (min=1)
2020-05-19 21:32:43 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:32:43 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:32:43 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:32:43 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2020-05-19 21:32:43 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:32:43 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:32:43 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:32:43 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2873d672] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3bc735b3]
2020-05-19 21:32:43 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:32:43 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:32:43 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:32:43 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-19 21:32:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:32:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:32:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:32:43 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:32:43 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:32:43 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:32:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:32:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:32:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:32:43 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:32:43 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:32:43 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:32:43 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:32:43 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:32:43 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:32:43 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:32:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:32:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:32:43 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:32:43 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:32:44 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:32:44 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:32:44 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:32:44 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:32:44 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:32:44 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:32:44 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:32:44 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:32:44 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:32:44 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:32:44 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:32:44 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:32:44 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:32:44 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:32:44 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:32:44 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:32:44 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:32:44 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:32:44 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:32:44 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:32:44 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:32:44 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:32:44 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:32:44 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:32:44 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:32:44 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:32:44 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:32:44 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:32:44 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:32:44 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:32:44 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:32:44 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:32:44 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:32:44 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:32:44 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:32:44 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:32:44 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:32:44 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:32:44 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:32:44 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7a93b263, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=1, java.class.version=55.0}
2020-05-19 21:32:44 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:32:44 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:32:44 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2873d672] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@128c502c]
2020-05-19 21:32:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:32:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:32:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:32:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:32:44 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:32:44 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-19 21:32:44 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from movie movie_ where movie_.id=?
2020-05-19 21:32:44 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:32:44 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-19 21:32:44 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-19 21:32:44 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-19 21:32:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58740366]
2020-05-19 21:32:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:32:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:32:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:32:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:32:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:32:44 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:32:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@feb98ef]
2020-05-19 21:32:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:32:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:32:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:32:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:32:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:32:44 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:32:44 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:32:44 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:32:44 DEBUG SQL:127 - drop table if exists movie
2020-05-19 21:32:44 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@310aee0b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:32:44 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM
2020-05-19 21:32:44 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@107bfcb2] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:32:44 WARN  ExceptionHandlerLoggedImpl:27 - GenerationTarget encountered exception accepting command : Error executing DDL "create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:423)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:314)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:156)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.dev.cinema.util.HibernateUtil.initSessionFactory(HibernateUtil.java:14)
	at com.dev.cinema.util.HibernateUtil.<clinit>(HibernateUtil.java:7)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:315)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:172)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:169)
	at com.dev.cinema.lib.Injector.getClasses(Injector.java:143)
	at com.dev.cinema.lib.Injector.<init>(Injector.java:22)
	at com.dev.cinema.lib.Injector.getInstance(Injector.java:32)
	at com.dev.cinema.Main.<clinit>(Main.java:8)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type=MyISAM' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 22 more
2020-05-19 21:32:44 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:32:44 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:32:44 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:32:44 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:32:44 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:32:44 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:32:44 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e236278
2020-05-19 21:32:44 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 0cbab14a-1ae5-4bb2-9fdf-785e82ac694e (<unnamed>)
2020-05-19 21:32:44 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:33:53 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:33:53 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:33:53 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:33:53 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:33:53 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:33:53 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:33:53 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:33:53 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:33:54 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:33:54 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:33:54 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:33:54 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:33:54 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:33:54 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5674e1f2
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43f82e78
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f40e5db
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2654635
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6179e425
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49c6c24f
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1817f1eb
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f9678e1
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807bdeb
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd80673
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@674bd420
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5e1fa5b1
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1d131e1b
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f152006
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3724af13
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a43ce46
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@616fe72b
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e8dcdaa
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@681a8b4e
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cbe877d
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-19 21:33:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-19 21:33:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:33:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:33:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:33:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:33:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:33:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:33:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:33:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:33:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:33:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:33:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:33:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:33:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:33:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:33:54 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:33:54 INFO  pooling:115 - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-19 21:33:54 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:33:54 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:33:54 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:33:54 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 1 (min=1)
2020-05-19 21:33:54 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:33:54 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:33:54 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:33:54 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2020-05-19 21:33:54 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:33:54 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:33:54 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:33:54 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@757529a4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@779de014]
2020-05-19 21:33:54 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:33:54 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:33:54 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:33:54 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-19 21:33:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:33:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:33:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:33:54 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:33:54 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:33:54 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:33:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:33:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:33:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:33:54 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:33:54 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:33:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:33:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:33:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:33:54 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:33:54 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:33:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:33:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:33:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:33:54 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:33:54 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:33:54 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:33:54 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:33:54 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:33:54 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:33:54 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:33:54 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:33:54 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:33:54 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:33:54 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:33:54 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:33:54 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:33:54 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:33:54 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:33:54 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:33:54 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:33:54 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:33:54 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:33:54 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:33:54 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:33:54 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:33:54 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:33:54 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:33:54 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:33:54 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:33:54 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:33:54 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:33:54 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:33:54 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:33:54 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:33:54 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:33:54 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:33:54 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:33:54 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:33:54 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:33:54 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:33:54 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:33:54 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:33:55 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:33:55 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1de6932a, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=1, java.class.version=55.0}
2020-05-19 21:33:55 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:33:55 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:33:55 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@757529a4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1de9d54]
2020-05-19 21:33:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:33:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:33:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:33:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:33:55 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:33:55 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-19 21:33:55 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from movie movie_ where movie_.id=?
2020-05-19 21:33:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:33:55 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-19 21:33:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-19 21:33:55 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-19 21:33:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33425811]
2020-05-19 21:33:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:33:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:33:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:33:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:33:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:33:55 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:33:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e0ec41f]
2020-05-19 21:33:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:33:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:33:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:33:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:33:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:33:55 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:33:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:33:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:33:55 DEBUG SQL:127 - drop table if exists movie
2020-05-19 21:33:55 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7c112f5f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:33:55 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM
2020-05-19 21:33:55 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@404eca05] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:33:55 WARN  ExceptionHandlerLoggedImpl:27 - GenerationTarget encountered exception accepting command : Error executing DDL "create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:423)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:314)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:156)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.dev.cinema.util.HibernateUtil.initSessionFactory(HibernateUtil.java:14)
	at com.dev.cinema.util.HibernateUtil.<clinit>(HibernateUtil.java:7)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:315)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:172)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:169)
	at com.dev.cinema.lib.Injector.getClasses(Injector.java:143)
	at com.dev.cinema.lib.Injector.<init>(Injector.java:22)
	at com.dev.cinema.lib.Injector.getInstance(Injector.java:32)
	at com.dev.cinema.Main.<clinit>(Main.java:8)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type=MyISAM' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 22 more
2020-05-19 21:33:55 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:33:55 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:33:55 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:33:55 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:33:55 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:33:55 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:33:55 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@76b47204
2020-05-19 21:33:55 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 3219a89d-34a8-431f-8da1-d2e64af038c4 (<unnamed>)
2020-05-19 21:33:55 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:33:55 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-19 21:33:55 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-19 21:33:55 DEBUG TransactionImpl:81 - begin
2020-05-19 21:33:55 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-19 21:33:55 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-19 21:33:55 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
java.sql.SQLSyntaxErrorException: Table 'cinema.movie' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1340)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3106)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3699)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:335)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:292)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:198)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:128)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:193)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:178)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:108)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:619)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:612)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:607)
	at com.dev.cinema.dao.impl.MovieDaoImpl.add(MovieDaoImpl.java:20)
	at com.dev.cinema.service.impl.MovieServiceImpl.add(MovieServiceImpl.java:18)
	at com.dev.cinema.Main.main(Main.java:14)
2020-05-19 21:33:55 WARN  SqlExceptionHelper:137 - SQL Error: 1146, SQLState: 42S02
2020-05-19 21:33:55 ERROR SqlExceptionHelper:142 - Table 'cinema.movie' doesn't exist
2020-05-19 21:33:55 DEBUG TransactionImpl:139 - rolling back
2020-05-19 21:36:24 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:36:24 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:36:24 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:36:24 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:36:24 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:36:24 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:36:24 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:36:24 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:36:24 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:36:24 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:36:24 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:36:24 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:36:24 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:36:24 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5674e1f2
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43f82e78
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f40e5db
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2654635
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6179e425
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49c6c24f
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1817f1eb
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f9678e1
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807bdeb
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd80673
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@674bd420
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5e1fa5b1
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1d131e1b
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f152006
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3724af13
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a43ce46
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@616fe72b
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e8dcdaa
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@681a8b4e
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cbe877d
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-19 21:36:24 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-19 21:36:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:36:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:36:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:36:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:36:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:36:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:36:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:36:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:36:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:36:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:36:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:36:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:36:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:36:24 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:36:24 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:36:24 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-19 21:36:24 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:36:24 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:36:24 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:36:24 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 1 (min=1)
2020-05-19 21:36:25 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:36:25 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:36:25 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:36:25 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2020-05-19 21:36:25 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:36:25 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:36:25 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:36:25 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6eafb10e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@26a94fa5]
2020-05-19 21:36:25 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:36:25 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:36:25 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:36:25 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-19 21:36:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:36:25 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:36:25 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:36:25 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:36:25 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:36:25 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:36:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:36:25 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:36:25 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:36:25 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:36:25 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:36:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:36:25 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:36:25 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:36:25 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:36:25 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:36:25 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:36:25 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:36:25 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:36:25 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:36:25 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:36:25 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:36:25 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:36:25 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:36:25 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:36:25 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:36:25 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:36:25 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:36:25 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:36:25 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:36:25 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:36:25 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:36:25 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:36:25 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:36:25 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:36:25 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:36:25 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:36:25 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:36:25 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:36:25 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:36:25 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:36:25 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:36:25 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:36:25 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:36:25 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:36:25 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:36:25 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:36:25 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:36:25 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:36:25 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:36:25 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:36:25 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:36:25 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:36:25 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:36:25 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:36:25 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:36:25 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:36:25 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:36:25 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:36:25 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4d96250, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=1, java.class.version=55.0}
2020-05-19 21:36:25 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:36:25 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:36:25 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6eafb10e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@226eba67]
2020-05-19 21:36:25 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:36:25 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:36:25 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:36:25 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:36:25 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:36:25 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-19 21:36:25 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from movie movie_ where movie_.id=?
2020-05-19 21:36:25 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:36:25 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-19 21:36:25 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-19 21:36:25 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-19 21:36:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d805aa1]
2020-05-19 21:36:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:36:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:36:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:36:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:36:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:36:25 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:36:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d7a9786]
2020-05-19 21:36:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:36:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:36:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:36:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:36:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:36:25 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:36:25 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:36:25 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:36:25 DEBUG SQL:127 - drop table if exists movie
2020-05-19 21:36:25 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@120d3fd] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:36:25 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM
2020-05-19 21:36:25 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@15efda6c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:36:25 WARN  ExceptionHandlerLoggedImpl:27 - GenerationTarget encountered exception accepting command : Error executing DDL "create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:423)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:314)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:156)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.dev.cinema.util.HibernateUtil.initSessionFactory(HibernateUtil.java:14)
	at com.dev.cinema.util.HibernateUtil.<clinit>(HibernateUtil.java:7)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:315)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:172)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:169)
	at com.dev.cinema.lib.Injector.getClasses(Injector.java:143)
	at com.dev.cinema.lib.Injector.<init>(Injector.java:22)
	at com.dev.cinema.lib.Injector.getInstance(Injector.java:32)
	at com.dev.cinema.Main.<clinit>(Main.java:8)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type=MyISAM' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 22 more
2020-05-19 21:36:25 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:36:25 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:36:25 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:36:25 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:36:25 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:36:25 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:36:25 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@41a374be
2020-05-19 21:36:25 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 3306a240-7deb-43a5-bf9b-b2f49f8943b5 (<unnamed>)
2020-05-19 21:36:25 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:36:25 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-19 21:36:25 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-19 21:36:25 DEBUG TransactionImpl:81 - begin
2020-05-19 21:36:25 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-19 21:36:25 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-19 21:36:25 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
java.sql.SQLSyntaxErrorException: Table 'cinema.movie' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1340)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3106)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3699)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:335)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:292)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:198)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:128)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:193)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:178)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:108)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:619)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:612)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:607)
	at com.dev.cinema.dao.impl.MovieDaoImpl.add(MovieDaoImpl.java:20)
	at com.dev.cinema.service.impl.MovieServiceImpl.add(MovieServiceImpl.java:18)
	at com.dev.cinema.Main.main(Main.java:14)
2020-05-19 21:36:25 WARN  SqlExceptionHelper:137 - SQL Error: 1146, SQLState: 42S02
2020-05-19 21:36:25 ERROR SqlExceptionHelper:142 - Table 'cinema.movie' doesn't exist
2020-05-19 21:36:25 DEBUG TransactionImpl:139 - rolling back
2020-05-19 21:37:00 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:37:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:37:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:37:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:37:00 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:37:00 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:37:00 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:37:00 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:37:00 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:37:00 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:37:00 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:37:00 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:37:00 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:37:00 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@53bd8fca
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@53bd8fca
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@53bd8fca
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d64e326
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@32193bea
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@ebaa6cb
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@57abad67
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@57abad67
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@57abad67
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2dca0d64
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2dca0d64
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2dca0d64
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1cdc4c27
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1cdc4c27
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1cdc4c27
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@628c4ac0
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@628c4ac0
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@628c4ac0
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@62e20a76
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@62e20a76
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@62e20a76
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@75cd8043
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@75cd8043
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@75cd8043
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@305a0c5f
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@305a0c5f
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@305a0c5f
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@74960bfa
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@74960bfa
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7f36662c
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7f36662c
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@301ec38b
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@301ec38b
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4a194c39
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5669c5fb
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@112f364d
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@112f364d
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@542e560f
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@542e560f
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5aac4250
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5aac4250
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@67c2e933
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@67c2e933
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6ebf0f36
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6ebf0f36
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f6722d3
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f6722d3
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@31000e60
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@31000e60
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@48d5f34e
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@48d5f34e
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@674bd420
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@674bd420
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@d3957fe
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@d3957fe
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@6b00f608
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6b00f608
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@43b6123e
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@43b6123e
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@43b6123e
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61e94def
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@7cbc3762
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7cbc3762
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7cbc3762
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@8692d67
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@44e3a2b2
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@44e3a2b2
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@42f8285e
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@42f8285e
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@340da44c
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@340da44c
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@77a7cf58
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@77a7cf58
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@293a5f75
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@293a5f75
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd29a59
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@61c9c3fd
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@61c9c3fd
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@61c9c3fd
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7e8dcdaa
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7e8dcdaa
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7e8dcdaa
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4218500f
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@c2db68f
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@7f6f61c8
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f6f61c8
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@7f6f61c8
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@333dd51e
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@333dd51e
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@333dd51e
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@710b18a6
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@25e2ab5a
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3ecd267f
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3ecd267f
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c9bfddc
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@3569fc08
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3569fc08
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@5ddea849
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ddea849
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58fb7731
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@349c1daf
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@6b7906b3
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@485e36bc
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@485e36bc
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@17cdf2d0
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1755e85b
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@736d6a5c
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2371aaca
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5b529706
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@63fdab07
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7b5a12ae
2020-05-19 21:37:00 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5553d0f5
2020-05-19 21:37:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:37:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:37:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:37:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:37:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:37:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:37:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:37:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:37:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:37:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:37:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:37:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:37:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:37:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:37:00 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:37:00 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-19 21:37:00 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:37:00 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:37:00 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:37:00 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 1 (min=1)
2020-05-19 21:37:01 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:37:01 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:37:01 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:37:01 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2020-05-19 21:37:01 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:37:01 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:37:01 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:37:01 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@108bdbd8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6345e7b9]
2020-05-19 21:37:01 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:37:01 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:37:01 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:37:01 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-19 21:37:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:37:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:37:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:37:01 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:37:01 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:37:01 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:37:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:37:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:37:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:37:01 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:37:01 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:37:01 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:37:01 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:37:01 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:37:01 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:37:01 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:37:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:37:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:37:01 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:37:01 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:37:01 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:37:01 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:37:01 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:37:01 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:37:01 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:37:01 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:37:01 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:37:01 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:37:01 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:37:01 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:37:01 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:37:01 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:37:01 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:37:01 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:37:01 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:37:01 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:37:01 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:37:01 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:37:01 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:37:01 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:37:01 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:37:01 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:37:01 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:37:01 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:37:01 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:37:01 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:37:01 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:37:01 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:37:01 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:37:01 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:37:01 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:37:01 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:37:01 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:37:01 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:37:01 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:37:01 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:37:01 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:37:01 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:37:01 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:37:01 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/vladyslav/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/193.6911.18/lib/idea_rt.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2ec3633f, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=1, java.class.version=55.0}
2020-05-19 21:37:01 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:37:01 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:37:01 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@108bdbd8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@d0865a3]
2020-05-19 21:37:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:37:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:37:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:37:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:37:01 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:37:01 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-19 21:37:01 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from movie movie_ where movie_.id=?
2020-05-19 21:37:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:37:01 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-19 21:37:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-19 21:37:01 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-19 21:37:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76a805b7]
2020-05-19 21:37:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:37:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:37:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:37:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:37:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:37:01 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:37:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d9bc14]
2020-05-19 21:37:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:37:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:37:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:37:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:37:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:37:01 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:37:01 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:37:01 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:37:01 DEBUG SQL:127 - drop table if exists movie
2020-05-19 21:37:01 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@68f6e55d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:37:01 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM
2020-05-19 21:37:01 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@28a9494b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:37:01 WARN  ExceptionHandlerLoggedImpl:27 - GenerationTarget encountered exception accepting command : Error executing DDL "create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:423)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:314)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:156)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.dev.cinema.util.HibernateUtil.initSessionFactory(HibernateUtil.java:14)
	at com.dev.cinema.util.HibernateUtil.<clinit>(HibernateUtil.java:7)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:315)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:172)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:169)
	at com.dev.cinema.lib.Injector.getClasses(Injector.java:143)
	at com.dev.cinema.lib.Injector.<init>(Injector.java:22)
	at com.dev.cinema.lib.Injector.getInstance(Injector.java:32)
	at com.dev.cinema.Main.<clinit>(Main.java:8)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type=MyISAM' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 22 more
2020-05-19 21:37:01 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:37:01 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:37:01 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:37:01 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:37:01 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:37:01 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:37:01 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@682abca7
2020-05-19 21:37:01 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 83217666-d8b7-419a-8d69-69f99bc13c15 (<unnamed>)
2020-05-19 21:37:01 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:37:09 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-19 21:37:14 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-19 21:37:14 DEBUG TransactionImpl:81 - begin
2020-05-19 21:37:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-19 21:37:16 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-19 21:37:16 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
java.sql.SQLSyntaxErrorException: Table 'cinema.movie' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1340)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3106)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3699)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:335)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:292)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:198)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:128)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:193)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:178)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:108)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:619)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:612)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:607)
	at com.dev.cinema.dao.impl.MovieDaoImpl.add(MovieDaoImpl.java:20)
	at com.dev.cinema.service.impl.MovieServiceImpl.add(MovieServiceImpl.java:18)
	at com.dev.cinema.Main.main(Main.java:14)
2020-05-19 21:37:16 WARN  SqlExceptionHelper:137 - SQL Error: 1146, SQLState: 42S02
2020-05-19 21:37:16 ERROR SqlExceptionHelper:142 - Table 'cinema.movie' doesn't exist
2020-05-19 21:37:23 DEBUG TransactionImpl:139 - rolling back
2020-05-19 21:37:48 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:37:48 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:37:48 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:37:48 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:37:49 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:37:49 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:37:49 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:37:49 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:37:49 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:37:49 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:37:49 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:37:49 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:37:49 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:37:49 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@53bd8fca
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@53bd8fca
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@53bd8fca
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d64e326
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@32193bea
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@ebaa6cb
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@57abad67
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@57abad67
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@57abad67
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2dca0d64
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2dca0d64
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2dca0d64
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1cdc4c27
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1cdc4c27
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1cdc4c27
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@628c4ac0
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@628c4ac0
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@628c4ac0
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@62e20a76
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@62e20a76
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@62e20a76
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@75cd8043
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@75cd8043
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@75cd8043
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@305a0c5f
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@305a0c5f
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@305a0c5f
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@74960bfa
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@74960bfa
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7f36662c
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7f36662c
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@301ec38b
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@301ec38b
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4a194c39
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5669c5fb
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@112f364d
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@112f364d
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@542e560f
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@542e560f
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5aac4250
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5aac4250
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@67c2e933
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@67c2e933
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6ebf0f36
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6ebf0f36
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f6722d3
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f6722d3
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@31000e60
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@31000e60
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@48d5f34e
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@48d5f34e
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@674bd420
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@674bd420
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@d3957fe
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@d3957fe
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@6b00f608
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6b00f608
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@43b6123e
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@43b6123e
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@43b6123e
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61e94def
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@7cbc3762
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7cbc3762
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7cbc3762
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@8692d67
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@44e3a2b2
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@44e3a2b2
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@42f8285e
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@42f8285e
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@340da44c
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@340da44c
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@77a7cf58
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@77a7cf58
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@293a5f75
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@293a5f75
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd29a59
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@61c9c3fd
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@61c9c3fd
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@61c9c3fd
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7e8dcdaa
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7e8dcdaa
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7e8dcdaa
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4218500f
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@c2db68f
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@7f6f61c8
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7f6f61c8
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@7f6f61c8
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@333dd51e
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@333dd51e
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@333dd51e
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@710b18a6
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@25e2ab5a
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3ecd267f
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3ecd267f
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c9bfddc
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@3569fc08
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3569fc08
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@5ddea849
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5ddea849
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58fb7731
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@349c1daf
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@6b7906b3
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@485e36bc
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@485e36bc
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@17cdf2d0
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1755e85b
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@736d6a5c
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2371aaca
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5b529706
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@63fdab07
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7b5a12ae
2020-05-19 21:37:49 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5553d0f5
2020-05-19 21:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:37:49 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:37:49 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:37:49 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-19 21:37:49 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:37:49 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:37:49 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:37:49 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 1 (min=1)
2020-05-19 21:37:50 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:37:50 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:37:50 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:37:50 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2020-05-19 21:37:50 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:37:50 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:37:50 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:37:50 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f8b4bd0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4e904fd5]
2020-05-19 21:37:50 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:37:50 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:37:50 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:37:50 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-19 21:37:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:37:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:37:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:37:50 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:37:50 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:37:50 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:37:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:37:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:37:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:37:50 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:37:50 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:37:50 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:37:50 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:37:50 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:37:50 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:37:50 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:37:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:37:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:37:50 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:37:50 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:37:50 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:37:50 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:37:50 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:37:50 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:37:50 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:37:50 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:37:50 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:37:50 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:37:50 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:37:50 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:37:50 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:37:50 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:37:50 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:37:50 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:37:50 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:37:50 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:37:50 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:37:50 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:37:50 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:37:50 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:37:50 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:37:50 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:37:50 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:37:50 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:37:50 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:37:50 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:37:50 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:37:50 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:37:50 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:37:50 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:37:50 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:37:50 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:37:50 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:37:50 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:37:50 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:37:50 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:37:50 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:37:50 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:37:50 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:37:50 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/vladyslav/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/193.6911.18/lib/idea_rt.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@13275d8, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=1, java.class.version=55.0}
2020-05-19 21:37:50 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:37:50 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:37:50 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f8b4bd0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7eae3764]
2020-05-19 21:37:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:37:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:37:50 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:37:50 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:37:50 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:37:50 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-19 21:37:50 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from movie movie_ where movie_.id=?
2020-05-19 21:37:50 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:37:50 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-19 21:37:50 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-19 21:37:50 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-19 21:37:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@167381c7]
2020-05-19 21:37:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:37:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:37:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:37:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:37:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:37:50 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:37:50 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1084f78c]
2020-05-19 21:37:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:37:50 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:37:50 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:37:50 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:37:50 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:37:50 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:37:50 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:37:50 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:37:50 DEBUG SQL:127 - drop table if exists movie
2020-05-19 21:37:50 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1835dc92] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:37:50 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM
2020-05-19 21:37:50 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1163a27] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:37:50 WARN  ExceptionHandlerLoggedImpl:27 - GenerationTarget encountered exception accepting command : Error executing DDL "create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:423)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:314)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:156)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.dev.cinema.util.HibernateUtil.initSessionFactory(HibernateUtil.java:14)
	at com.dev.cinema.util.HibernateUtil.<clinit>(HibernateUtil.java:7)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:315)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:172)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:169)
	at com.dev.cinema.lib.Injector.getClasses(Injector.java:143)
	at com.dev.cinema.lib.Injector.<init>(Injector.java:22)
	at com.dev.cinema.lib.Injector.getInstance(Injector.java:32)
	at com.dev.cinema.Main.<clinit>(Main.java:8)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type=MyISAM' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 22 more
2020-05-19 21:37:50 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:37:50 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:37:50 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:37:50 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:37:50 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:37:50 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:37:50 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@76f881d9
2020-05-19 21:37:50 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 727e3baa-b3e1-4495-9637-96865761c730 (<unnamed>)
2020-05-19 21:37:50 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:37:52 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-19 21:38:21 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-19 21:38:21 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-19 21:38:21 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
java.sql.SQLSyntaxErrorException: Table 'cinema.movie' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1340)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3106)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3699)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:335)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:292)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:198)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:128)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:193)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:178)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:108)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:619)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:612)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:607)
	at com.dev.cinema.dao.impl.MovieDaoImpl.add(MovieDaoImpl.java:19)
	at com.dev.cinema.service.impl.MovieServiceImpl.add(MovieServiceImpl.java:18)
	at com.dev.cinema.Main.main(Main.java:14)
2020-05-19 21:38:22 WARN  SqlExceptionHelper:137 - SQL Error: 1146, SQLState: 42S02
2020-05-19 21:38:22 ERROR SqlExceptionHelper:142 - Table 'cinema.movie' doesn't exist
2020-05-19 21:39:38 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-19 21:39:38 DEBUG TransactionImpl:81 - begin
2020-05-19 21:39:38 DEBUG TransactionImpl:98 - committing
2020-05-19 21:39:38 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-19 21:39:38 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-19 21:39:38 ERROR AssertionFailure:31 - HHH000099: an assertion failure occurred (this may indicate a bug in Hibernate, but is more likely due to unsafe use of the session): org.hibernate.AssertionFailure: null id in com.dev.cinema.model.Movie entry (don't flush the Session after an exception occurs)
2020-05-19 21:39:40 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:39:40 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:39:40 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:39:40 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:39:40 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:39:40 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:39:40 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:39:41 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:39:41 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:39:41 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:39:41 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:39:41 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:39:41 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:39:41 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5674e1f2
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43f82e78
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f40e5db
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2654635
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6179e425
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49c6c24f
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1817f1eb
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f9678e1
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807bdeb
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd80673
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@674bd420
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5e1fa5b1
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1d131e1b
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f152006
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3724af13
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a43ce46
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@616fe72b
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e8dcdaa
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@681a8b4e
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cbe877d
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-19 21:39:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-19 21:39:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:39:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:39:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:39:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:39:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:39:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:39:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:39:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:39:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:39:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:39:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:39:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:39:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:39:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:39:41 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:39:41 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-19 21:39:41 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:39:41 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:39:41 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:39:41 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 1 (min=1)
2020-05-19 21:39:41 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:39:41 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:39:41 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:39:41 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2020-05-19 21:39:41 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:39:41 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:39:41 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:39:41 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c41d037] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2234078]
2020-05-19 21:39:41 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:39:41 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:39:41 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:39:41 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-19 21:39:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:39:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:39:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:39:41 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:39:41 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:39:41 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:39:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:39:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:39:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:39:41 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:39:41 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:39:41 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:39:41 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:39:41 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:39:41 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:39:41 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:39:41 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:39:41 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:39:41 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:39:41 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:39:41 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:39:41 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:39:41 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:39:41 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:39:41 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:39:41 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:39:41 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:39:41 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:39:41 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:39:41 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:39:41 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:39:41 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:39:41 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:39:41 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:39:41 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:39:41 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:39:41 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:39:41 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:39:41 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:39:41 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:39:41 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:39:41 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:39:41 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:39:41 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:39:41 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:39:41 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:39:41 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:39:41 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:39:41 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:39:41 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:39:41 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:39:41 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:39:41 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:39:41 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:39:41 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:39:41 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:39:41 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:39:41 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:39:41 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:39:41 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1706a5c9, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=1, java.class.version=55.0}
2020-05-19 21:39:41 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:39:41 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:39:41 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c41d037] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@47ad69f7]
2020-05-19 21:39:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:39:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:39:41 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:39:41 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:39:42 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:39:42 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-19 21:39:42 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from movie movie_ where movie_.id=?
2020-05-19 21:39:42 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:39:42 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-19 21:39:42 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-19 21:39:42 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-19 21:39:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e4e1ef5]
2020-05-19 21:39:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:39:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:39:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:39:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:39:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:39:42 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:39:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8d8f754]
2020-05-19 21:39:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:39:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:39:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:39:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:39:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:39:42 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:39:42 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:39:42 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:39:42 DEBUG SQL:127 - drop table if exists movie
2020-05-19 21:39:42 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4fd05028] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:39:42 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM
2020-05-19 21:39:42 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@61a91c9b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:39:42 WARN  ExceptionHandlerLoggedImpl:27 - GenerationTarget encountered exception accepting command : Error executing DDL "create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:423)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:314)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:156)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.dev.cinema.util.HibernateUtil.initSessionFactory(HibernateUtil.java:14)
	at com.dev.cinema.util.HibernateUtil.<clinit>(HibernateUtil.java:7)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:315)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:172)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:169)
	at com.dev.cinema.lib.Injector.getClasses(Injector.java:143)
	at com.dev.cinema.lib.Injector.<init>(Injector.java:22)
	at com.dev.cinema.lib.Injector.getInstance(Injector.java:32)
	at com.dev.cinema.Main.<clinit>(Main.java:8)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type=MyISAM' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 22 more
2020-05-19 21:39:42 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:39:42 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:39:42 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:39:42 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:39:42 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:39:42 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:39:42 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6a12c7a8
2020-05-19 21:39:42 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 075be13c-92b4-4ff8-b080-64b95f9b8787 (<unnamed>)
2020-05-19 21:39:42 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:39:42 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-19 21:39:42 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-19 21:39:42 DEBUG TransactionImpl:81 - begin
2020-05-19 21:39:42 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-19 21:39:42 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-19 21:39:42 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
java.sql.SQLSyntaxErrorException: Table 'cinema.movie' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1340)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3106)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3699)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:335)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:292)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:198)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:128)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:193)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:178)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:108)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:619)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:612)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:607)
	at com.dev.cinema.dao.impl.MovieDaoImpl.add(MovieDaoImpl.java:20)
	at com.dev.cinema.service.impl.MovieServiceImpl.add(MovieServiceImpl.java:18)
	at com.dev.cinema.Main.main(Main.java:14)
2020-05-19 21:39:42 WARN  SqlExceptionHelper:137 - SQL Error: 1146, SQLState: 42S02
2020-05-19 21:39:42 ERROR SqlExceptionHelper:142 - Table 'cinema.movie' doesn't exist
2020-05-19 21:39:42 DEBUG TransactionImpl:139 - rolling back
2020-05-19 21:40:18 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:40:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:40:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:40:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:40:18 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:40:18 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:40:18 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:40:18 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:40:19 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:40:19 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:40:19 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:40:19 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:40:19 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:40:19 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5674e1f2
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43f82e78
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f40e5db
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2654635
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6179e425
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49c6c24f
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1817f1eb
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f9678e1
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807bdeb
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd80673
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@674bd420
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5e1fa5b1
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1d131e1b
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f152006
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3724af13
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a43ce46
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@616fe72b
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e8dcdaa
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@681a8b4e
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cbe877d
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-19 21:40:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-19 21:40:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:40:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:40:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:40:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:40:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:40:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:40:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:40:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:40:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:40:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:40:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:40:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:40:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:40:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:40:19 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:40:19 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-19 21:40:19 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:40:19 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:40:19 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:40:19 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 1 (min=1)
2020-05-19 21:40:19 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:40:19 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:40:19 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:40:19 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2020-05-19 21:40:19 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:40:19 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:40:19 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:40:19 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@577f9109] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4303b7f0]
2020-05-19 21:40:19 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:40:19 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:40:19 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:40:19 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table Movie
2020-05-19 21:40:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:40:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:40:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:40:19 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:40:19 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:40:19 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:40:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:40:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:40:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:40:19 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:40:19 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:40:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:40:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:40:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:40:19 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:40:19 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:40:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:40:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:40:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:40:19 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:40:19 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:40:19 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:40:19 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:40:19 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:40:19 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:40:19 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:40:19 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:40:19 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:40:19 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:40:19 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:40:19 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:40:19 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:40:19 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:40:19 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:40:19 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:40:19 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:40:19 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:40:19 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:40:19 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:40:19 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:40:19 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:40:19 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:40:19 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:40:19 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:40:19 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:40:19 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:40:19 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:40:19 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:40:19 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:40:19 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:40:19 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:40:19 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:40:19 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:40:19 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:40:19 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:40:19 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:40:19 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:40:19 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:40:19 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:40:19 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@35178483, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=1, java.class.version=55.0}
2020-05-19 21:40:19 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:40:19 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:40:19 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@577f9109] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@45667d98]
2020-05-19 21:40:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:40:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:40:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:40:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:40:19 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:40:19 DEBUG AbstractEntityPersister:3823 -  Version select: select id from Movie where id =?
2020-05-19 21:40:19 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from Movie movie_ where movie_.id=?
2020-05-19 21:40:19 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:40:19 DEBUG AbstractEntityPersister:394 -  Update 0: update Movie set description=?, tittle=? where id=?
2020-05-19 21:40:19 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Movie where id=?
2020-05-19 21:40:19 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into Movie (description, tittle) values (?, ?)
2020-05-19 21:40:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47be0f9b]
2020-05-19 21:40:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:40:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:40:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:40:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:40:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:40:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:40:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7654f833]
2020-05-19 21:40:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:40:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:40:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:40:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:40:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:40:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:40:19 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:40:19 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:40:20 DEBUG SQL:127 - drop table if exists Movie
2020-05-19 21:40:20 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@36327cec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:40:20 DEBUG SQL:127 - create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM
2020-05-19 21:40:20 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7bac686b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:40:20 WARN  ExceptionHandlerLoggedImpl:27 - GenerationTarget encountered exception accepting command : Error executing DDL "create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:423)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:314)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:156)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.dev.cinema.util.HibernateUtil.initSessionFactory(HibernateUtil.java:14)
	at com.dev.cinema.util.HibernateUtil.<clinit>(HibernateUtil.java:7)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:315)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:172)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:169)
	at com.dev.cinema.lib.Injector.getClasses(Injector.java:143)
	at com.dev.cinema.lib.Injector.<init>(Injector.java:22)
	at com.dev.cinema.lib.Injector.getInstance(Injector.java:32)
	at com.dev.cinema.Main.<clinit>(Main.java:8)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type=MyISAM' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 22 more
2020-05-19 21:40:20 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:40:20 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:40:20 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:40:20 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:40:20 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:40:20 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:40:20 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@44fff386
2020-05-19 21:40:20 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 1b53f23a-0805-4241-83ee-870cd6f7231e (<unnamed>)
2020-05-19 21:40:20 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:40:20 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-19 21:40:20 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-19 21:40:20 DEBUG TransactionImpl:81 - begin
2020-05-19 21:40:20 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-19 21:40:20 DEBUG SQL:127 - insert into Movie (description, tittle) values (?, ?)
2020-05-19 21:40:20 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
java.sql.SQLSyntaxErrorException: Table 'cinema.Movie' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1340)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3106)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3699)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:335)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:292)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:198)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:128)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:193)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:178)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:108)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:619)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:612)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:607)
	at com.dev.cinema.dao.impl.MovieDaoImpl.add(MovieDaoImpl.java:20)
	at com.dev.cinema.service.impl.MovieServiceImpl.add(MovieServiceImpl.java:18)
	at com.dev.cinema.Main.main(Main.java:14)
2020-05-19 21:40:20 WARN  SqlExceptionHelper:137 - SQL Error: 1146, SQLState: 42S02
2020-05-19 21:40:20 ERROR SqlExceptionHelper:142 - Table 'cinema.Movie' doesn't exist
2020-05-19 21:40:20 DEBUG TransactionImpl:139 - rolling back
2020-05-19 21:40:40 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:40:40 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:40:40 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:40:40 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:40:41 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:40:41 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:40:41 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:40:41 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:40:41 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:40:41 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:40:41 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:40:41 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:40:41 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:40:41 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5674e1f2
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43f82e78
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f40e5db
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2654635
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6179e425
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49c6c24f
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1817f1eb
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f9678e1
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807bdeb
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd80673
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@674bd420
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5e1fa5b1
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1d131e1b
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f152006
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3724af13
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a43ce46
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@616fe72b
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e8dcdaa
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@681a8b4e
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cbe877d
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-19 21:40:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-19 21:40:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:40:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:40:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:40:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:40:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:40:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:40:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:40:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:40:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:40:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:40:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:40:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:40:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:40:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:40:41 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:40:41 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-19 21:40:41 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:40:41 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:40:41 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:40:41 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 1 (min=1)
2020-05-19 21:40:42 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:40:42 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:40:42 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:40:42 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2020-05-19 21:40:42 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:40:42 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:40:42 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:40:42 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6eafb10e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@26a94fa5]
2020-05-19 21:40:42 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:40:42 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:40:42 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:40:42 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table Movie
2020-05-19 21:40:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:40:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:40:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:40:42 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:40:42 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:40:42 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:40:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:40:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:40:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:40:42 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:40:42 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:40:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:40:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:40:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:40:42 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:40:42 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:40:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:40:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:40:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:40:42 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:40:42 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:40:42 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:40:42 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:40:42 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:40:42 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:40:42 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:40:42 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:40:42 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:40:42 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:40:42 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:40:42 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:40:42 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:40:42 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:40:42 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:40:42 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:40:42 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:40:42 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:40:42 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:40:42 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:40:42 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:40:42 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:40:42 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:40:42 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:40:42 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:40:42 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:40:42 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:40:42 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:40:42 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:40:42 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:40:42 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:40:42 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:40:42 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:40:42 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:40:42 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:40:42 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:40:42 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:40:42 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:40:42 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:40:42 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:40:42 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@138caeca, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=1, java.class.version=55.0}
2020-05-19 21:40:42 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:40:42 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:40:42 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6eafb10e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6c796cc1]
2020-05-19 21:40:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:40:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:40:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:40:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:40:42 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:40:42 DEBUG AbstractEntityPersister:3823 -  Version select: select id from Movie where id =?
2020-05-19 21:40:42 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from Movie movie_ where movie_.id=?
2020-05-19 21:40:42 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:40:42 DEBUG AbstractEntityPersister:394 -  Update 0: update Movie set description=?, tittle=? where id=?
2020-05-19 21:40:42 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Movie where id=?
2020-05-19 21:40:42 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into Movie (description, tittle) values (?, ?)
2020-05-19 21:40:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4af45442]
2020-05-19 21:40:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:40:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:40:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:40:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:40:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:40:42 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:40:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@432f521f]
2020-05-19 21:40:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:40:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:40:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:40:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:40:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:40:42 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:40:42 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:40:42 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:40:42 DEBUG SQL:127 - drop table if exists Movie
2020-05-19 21:40:42 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@63a28987] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:40:42 DEBUG SQL:127 - create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM
2020-05-19 21:40:42 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@37d28f02] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:40:42 WARN  ExceptionHandlerLoggedImpl:27 - GenerationTarget encountered exception accepting command : Error executing DDL "create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:423)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:314)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:156)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.dev.cinema.util.HibernateUtil.initSessionFactory(HibernateUtil.java:14)
	at com.dev.cinema.util.HibernateUtil.<clinit>(HibernateUtil.java:7)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:315)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:172)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:169)
	at com.dev.cinema.lib.Injector.getClasses(Injector.java:143)
	at com.dev.cinema.lib.Injector.<init>(Injector.java:22)
	at com.dev.cinema.lib.Injector.getInstance(Injector.java:32)
	at com.dev.cinema.Main.<clinit>(Main.java:8)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type=MyISAM' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 22 more
2020-05-19 21:40:42 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:40:42 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:40:42 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:40:42 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:40:42 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:40:42 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:40:42 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@51c8f62c
2020-05-19 21:40:42 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: dcd14807-5150-4d8d-9d86-135509270566 (<unnamed>)
2020-05-19 21:40:42 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:40:42 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-19 21:40:42 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-19 21:40:42 DEBUG TransactionImpl:81 - begin
2020-05-19 21:40:42 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-19 21:40:42 DEBUG SQL:127 - insert into Movie (description, tittle) values (?, ?)
2020-05-19 21:40:42 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
java.sql.SQLSyntaxErrorException: Table 'cinema.Movie' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1340)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3106)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3699)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:335)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:292)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:198)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:128)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:193)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:178)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:108)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:619)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:612)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:607)
	at com.dev.cinema.dao.impl.MovieDaoImpl.add(MovieDaoImpl.java:20)
	at com.dev.cinema.service.impl.MovieServiceImpl.add(MovieServiceImpl.java:18)
	at com.dev.cinema.Main.main(Main.java:14)
2020-05-19 21:40:42 WARN  SqlExceptionHelper:137 - SQL Error: 1146, SQLState: 42S02
2020-05-19 21:40:42 ERROR SqlExceptionHelper:142 - Table 'cinema.Movie' doesn't exist
2020-05-19 21:40:42 DEBUG TransactionImpl:139 - rolling back
2020-05-19 21:41:15 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:41:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:41:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:41:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:41:15 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:41:15 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:41:15 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:41:15 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:41:15 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:41:15 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:41:15 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:41:15 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:41:15 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:41:15 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5674e1f2
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43f82e78
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f40e5db
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2654635
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6179e425
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49c6c24f
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1817f1eb
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f9678e1
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807bdeb
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd80673
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@674bd420
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5e1fa5b1
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1d131e1b
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f152006
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3724af13
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a43ce46
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@616fe72b
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e8dcdaa
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@681a8b4e
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cbe877d
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-19 21:41:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-19 21:41:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:41:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:41:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:41:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:41:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:41:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:41:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:41:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:41:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:41:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:41:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:41:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:41:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:41:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:41:15 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:41:15 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-19 21:41:15 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:41:15 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:41:15 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:41:15 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 1 (min=1)
2020-05-19 21:41:16 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:41:16 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:41:16 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:41:16 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2020-05-19 21:41:16 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:41:16 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:41:16 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:41:16 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bc735b3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@577f9109]
2020-05-19 21:41:16 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:41:16 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:41:16 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:41:16 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table Movie
2020-05-19 21:41:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:41:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:41:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:41:16 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:41:16 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:41:16 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:41:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:41:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:41:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:41:16 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:41:16 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:41:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:41:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:41:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:41:16 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:41:16 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:41:16 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:41:16 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:41:16 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:41:16 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:41:16 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:41:16 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:41:16 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:41:16 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:41:16 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:41:16 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:41:16 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:41:16 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:41:16 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:41:16 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:41:16 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:41:16 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:41:16 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:41:16 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:41:16 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:41:16 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:41:16 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:41:16 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:41:16 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:41:16 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:41:16 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:41:16 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:41:16 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:41:16 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:41:16 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:41:16 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:41:16 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:41:16 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:41:16 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:41:16 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:41:16 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:41:16 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:41:16 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:41:16 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:41:16 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:41:16 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:41:16 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:41:16 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:41:16 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:41:16 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7a93b263, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=1, java.class.version=55.0}
2020-05-19 21:41:16 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:41:16 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:41:16 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3bc735b3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@128c502c]
2020-05-19 21:41:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:41:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:41:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:41:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:41:16 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:41:16 DEBUG AbstractEntityPersister:3823 -  Version select: select id from Movie where id =?
2020-05-19 21:41:16 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from Movie movie_ where movie_.id=?
2020-05-19 21:41:16 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:41:16 DEBUG AbstractEntityPersister:394 -  Update 0: update Movie set description=?, tittle=? where id=?
2020-05-19 21:41:16 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Movie where id=?
2020-05-19 21:41:16 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into Movie (description, tittle) values (?, ?)
2020-05-19 21:41:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58740366]
2020-05-19 21:41:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:41:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:41:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:41:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:41:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:41:16 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:41:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@feb98ef]
2020-05-19 21:41:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:41:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:41:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:41:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:41:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:41:16 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:41:16 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:41:16 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:41:16 DEBUG SQL:127 - drop table if exists Movie
2020-05-19 21:41:16 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@310aee0b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:41:16 DEBUG SQL:127 - create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM
2020-05-19 21:41:16 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@107bfcb2] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:41:16 WARN  ExceptionHandlerLoggedImpl:27 - GenerationTarget encountered exception accepting command : Error executing DDL "create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:423)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:314)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:156)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.dev.cinema.util.HibernateUtil.initSessionFactory(HibernateUtil.java:14)
	at com.dev.cinema.util.HibernateUtil.<clinit>(HibernateUtil.java:7)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:315)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:172)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:169)
	at com.dev.cinema.lib.Injector.getClasses(Injector.java:143)
	at com.dev.cinema.lib.Injector.<init>(Injector.java:22)
	at com.dev.cinema.lib.Injector.getInstance(Injector.java:32)
	at com.dev.cinema.Main.<clinit>(Main.java:8)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type=MyISAM' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 22 more
2020-05-19 21:41:16 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:41:16 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:41:16 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:41:16 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:41:16 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:41:16 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:41:16 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e236278
2020-05-19 21:41:16 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 300470c9-cb01-40ea-9cb2-8d90039852b8 (<unnamed>)
2020-05-19 21:41:16 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:41:16 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-19 21:41:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-19 21:41:16 DEBUG TransactionImpl:81 - begin
2020-05-19 21:41:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-19 21:41:16 DEBUG SQL:127 - insert into Movie (description, tittle) values (?, ?)
2020-05-19 21:41:16 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
java.sql.SQLSyntaxErrorException: Table 'cinema.Movie' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1340)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3106)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3699)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:335)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:292)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:198)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:128)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:193)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:178)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:108)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:619)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:612)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:607)
	at com.dev.cinema.dao.impl.MovieDaoImpl.add(MovieDaoImpl.java:20)
	at com.dev.cinema.service.impl.MovieServiceImpl.add(MovieServiceImpl.java:18)
	at com.dev.cinema.Main.main(Main.java:14)
2020-05-19 21:41:16 WARN  SqlExceptionHelper:137 - SQL Error: 1146, SQLState: 42S02
2020-05-19 21:41:16 ERROR SqlExceptionHelper:142 - Table 'cinema.Movie' doesn't exist
2020-05-19 21:41:16 DEBUG TransactionImpl:139 - rolling back
2020-05-19 21:42:10 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:42:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:42:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:42:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:42:10 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:42:10 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:42:10 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:42:10 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:42:11 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:42:11 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:42:11 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:42:11 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:42:11 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:42:11 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5674e1f2
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43f82e78
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f40e5db
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2654635
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6179e425
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49c6c24f
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1817f1eb
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f9678e1
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807bdeb
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd80673
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@674bd420
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5e1fa5b1
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1d131e1b
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f152006
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3724af13
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a43ce46
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@616fe72b
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e8dcdaa
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@681a8b4e
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cbe877d
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-19 21:42:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-19 21:42:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:42:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:42:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:42:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:42:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:42:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:42:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:42:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:42:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:42:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:42:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:42:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:42:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:42:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:42:11 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:42:11 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC]
2020-05-19 21:42:11 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:42:11 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:42:11 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:42:11 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 1 (min=1)
2020-05-19 21:42:11 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:42:11 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:42:11 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:42:11 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2020-05-19 21:42:11 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:42:11 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:42:11 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:42:11 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@577f9109] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4303b7f0]
2020-05-19 21:42:11 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:42:11 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:42:11 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table Movie
2020-05-19 21:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:42:11 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:42:11 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:42:11 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:42:11 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:42:11 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:42:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:42:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:42:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:42:11 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:42:11 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:42:11 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:42:11 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:42:11 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:42:11 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:42:11 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:42:11 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:42:11 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:42:11 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:42:11 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:42:11 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:42:11 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:42:11 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:42:11 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:42:11 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:42:11 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:42:11 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:42:11 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:42:11 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:42:11 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:42:11 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:42:11 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:42:11 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:42:11 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:42:11 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:42:11 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:42:11 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:42:11 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:42:11 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:42:11 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:42:11 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:42:11 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:42:11 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:42:11 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:42:11 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:42:11 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:42:11 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:42:11 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:42:11 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:42:11 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:42:11 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:42:11 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:42:11 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:42:11 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:42:11 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@35178483, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=1, java.class.version=55.0}
2020-05-19 21:42:11 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:42:11 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:42:11 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@577f9109] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@45667d98]
2020-05-19 21:42:11 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:42:11 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:42:11 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:42:11 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:42:11 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:42:11 DEBUG AbstractEntityPersister:3823 -  Version select: select id from Movie where id =?
2020-05-19 21:42:11 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from Movie movie_ where movie_.id=?
2020-05-19 21:42:11 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:42:11 DEBUG AbstractEntityPersister:394 -  Update 0: update Movie set description=?, tittle=? where id=?
2020-05-19 21:42:11 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Movie where id=?
2020-05-19 21:42:11 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into Movie (description, tittle) values (?, ?)
2020-05-19 21:42:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47be0f9b]
2020-05-19 21:42:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:42:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:42:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:42:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:42:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:42:11 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:42:11 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7654f833]
2020-05-19 21:42:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:42:11 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:42:11 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:42:11 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:42:11 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:42:11 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:42:11 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:42:11 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:42:11 DEBUG SQL:127 - drop table if exists Movie
2020-05-19 21:42:11 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@36327cec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:42:12 DEBUG SQL:127 - create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM
2020-05-19 21:42:12 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7bac686b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:42:12 WARN  ExceptionHandlerLoggedImpl:27 - GenerationTarget encountered exception accepting command : Error executing DDL "create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) type=MyISAM" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:423)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:314)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:156)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:320)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.dev.cinema.util.HibernateUtil.initSessionFactory(HibernateUtil.java:14)
	at com.dev.cinema.util.HibernateUtil.<clinit>(HibernateUtil.java:7)
	at java.base/java.lang.Class.forName0(Native Method)
	at java.base/java.lang.Class.forName(Class.java:315)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:172)
	at com.dev.cinema.lib.Injector.findClasses(Injector.java:169)
	at com.dev.cinema.lib.Injector.getClasses(Injector.java:143)
	at com.dev.cinema.lib.Injector.<init>(Injector.java:22)
	at com.dev.cinema.lib.Injector.getInstance(Injector.java:32)
	at com.dev.cinema.Main.<clinit>(Main.java:8)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'type=MyISAM' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 22 more
2020-05-19 21:42:12 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:42:12 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:42:12 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:42:12 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:42:12 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:42:12 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:42:12 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@44fff386
2020-05-19 21:42:12 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: eac7d823-79de-49e8-9f77-cbe932da9bba (<unnamed>)
2020-05-19 21:42:12 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:42:12 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-19 21:42:12 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-19 21:42:12 DEBUG TransactionImpl:81 - begin
2020-05-19 21:42:12 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-19 21:42:12 DEBUG SQL:127 - insert into Movie (description, tittle) values (?, ?)
2020-05-19 21:42:12 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
java.sql.SQLSyntaxErrorException: Table 'cinema.Movie' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1340)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3106)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3699)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:335)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:292)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:198)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:128)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:193)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:178)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:108)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:619)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:612)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:607)
	at com.dev.cinema.dao.impl.MovieDaoImpl.add(MovieDaoImpl.java:20)
	at com.dev.cinema.service.impl.MovieServiceImpl.add(MovieServiceImpl.java:18)
	at com.dev.cinema.Main.main(Main.java:14)
2020-05-19 21:42:12 WARN  SqlExceptionHelper:137 - SQL Error: 1146, SQLState: 42S02
2020-05-19 21:42:12 ERROR SqlExceptionHelper:142 - Table 'cinema.Movie' doesn't exist
2020-05-19 21:42:12 DEBUG TransactionImpl:139 - rolling back
2020-05-19 21:43:18 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:43:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:43:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:43:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:43:18 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:43:18 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:43:18 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:43:18 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:43:19 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:43:19 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:43:19 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:43:19 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:43:19 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:43:19 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5674e1f2
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43f82e78
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f40e5db
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2654635
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6179e425
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49c6c24f
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1817f1eb
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f9678e1
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807bdeb
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd80673
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@674bd420
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5e1fa5b1
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1d131e1b
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f152006
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3724af13
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a43ce46
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@616fe72b
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e8dcdaa
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@681a8b4e
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cbe877d
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-19 21:43:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-19 21:43:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:43:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:43:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:43:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:43:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:43:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:43:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:43:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:43:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:43:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:43:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:43:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:43:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:43:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:43:19 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:43:19 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-19 21:43:19 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:43:19 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:43:19 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:43:19 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-19 21:43:19 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:43:19 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:43:19 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:43:19 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-19 21:43:19 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:43:19 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:43:19 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:43:19 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3aefae67] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2e1792e7]
2020-05-19 21:43:19 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:43:19 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:43:19 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:43:19 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table Movie
2020-05-19 21:43:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:43:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:43:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:43:19 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:43:19 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:43:19 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:43:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:43:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:43:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:43:19 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:43:19 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:43:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:43:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:43:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:43:19 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:43:19 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:43:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:43:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:43:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:43:19 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:43:19 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:43:19 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:43:19 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:43:19 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:43:19 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:43:19 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:43:19 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:43:19 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:43:19 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:43:19 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:43:19 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:43:19 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:43:19 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:43:19 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:43:19 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:43:19 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:43:19 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:43:19 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:43:19 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:43:19 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:43:19 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:43:19 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:43:19 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:43:19 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:43:19 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:43:19 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:43:19 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:43:19 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:43:19 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:43:19 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:43:19 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:43:19 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:43:19 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:43:19 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:43:19 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:43:19 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:43:19 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:43:19 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:43:19 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:43:19 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@681e144, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-19 21:43:19 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:43:19 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:43:19 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3aefae67] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6d5037a9]
2020-05-19 21:43:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:43:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:43:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:43:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:43:19 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:43:19 DEBUG AbstractEntityPersister:3823 -  Version select: select id from Movie where id =?
2020-05-19 21:43:19 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from Movie movie_ where movie_.id=?
2020-05-19 21:43:19 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:43:19 DEBUG AbstractEntityPersister:394 -  Update 0: update Movie set description=?, tittle=? where id=?
2020-05-19 21:43:19 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Movie where id=?
2020-05-19 21:43:19 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into Movie (description, tittle) values (?, ?)
2020-05-19 21:43:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37468787]
2020-05-19 21:43:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:43:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:43:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:43:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:43:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:43:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:43:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c88a3e8]
2020-05-19 21:43:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:43:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:43:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:43:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:43:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:43:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:43:19 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:43:19 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from Movie movie0_ where movie0_.id=?
2020-05-19 21:43:19 DEBUG SQL:127 - drop table if exists Movie
2020-05-19 21:43:19 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@541179e7] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:43:20 DEBUG SQL:127 - create table Movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-19 21:43:20 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@69afa141] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:43:20 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:43:20 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:43:20 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:43:20 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:43:20 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:43:20 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:43:20 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@54755dd9
2020-05-19 21:43:20 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 9be3c21a-40f8-473b-83c5-e50e4048b683 (<unnamed>)
2020-05-19 21:43:20 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:43:20 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-19 21:43:20 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-19 21:43:20 DEBUG TransactionImpl:81 - begin
2020-05-19 21:43:20 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-19 21:43:20 DEBUG SQL:127 - insert into Movie (description, tittle) values (?, ?)
2020-05-19 21:43:20 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-19 21:43:20 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-19 21:43:20 DEBUG TransactionImpl:98 - committing
2020-05-19 21:43:20 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-19 21:43:20 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-19 21:43:20 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-19 21:43:20 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-19 21:43:20 DEBUG EntityPrinter:110 - Listing entities:
2020-05-19 21:43:20 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-19 21:43:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-19 21:43:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-19 21:43:53 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:43:53 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:43:53 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:43:53 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:43:53 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:43:53 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:43:53 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:43:54 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:43:54 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:43:54 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:43:54 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:43:54 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:43:54 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:43:54 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5674e1f2
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43f82e78
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f40e5db
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2654635
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6179e425
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49c6c24f
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1817f1eb
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f9678e1
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807bdeb
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd80673
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@674bd420
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5e1fa5b1
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1d131e1b
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f152006
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3724af13
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a43ce46
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@616fe72b
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e8dcdaa
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@681a8b4e
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cbe877d
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-19 21:43:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-19 21:43:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:43:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:43:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:43:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:43:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:43:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:43:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:43:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:43:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:43:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:43:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:43:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:43:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:43:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:43:54 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:43:54 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-19 21:43:54 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:43:54 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:43:54 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:43:54 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-19 21:43:54 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:43:54 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:43:54 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:43:54 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-19 21:43:54 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:43:54 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:43:54 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:43:54 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5eccd3b9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4d6f197e]
2020-05-19 21:43:54 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:43:54 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:43:54 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:43:54 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-19 21:43:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:43:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:43:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:43:54 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:43:54 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:43:54 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:43:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:43:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:43:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:43:54 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:43:54 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:43:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:43:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:43:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:43:54 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:43:54 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:43:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:43:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:43:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:43:54 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:43:54 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:43:54 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:43:54 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:43:54 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:43:54 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:43:54 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:43:54 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:43:54 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:43:54 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:43:54 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:43:54 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:43:54 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:43:54 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:43:54 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:43:54 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:43:54 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:43:54 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:43:54 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:43:54 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:43:54 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:43:54 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:43:54 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:43:54 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:43:54 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:43:54 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:43:54 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:43:54 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:43:54 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:43:54 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:43:54 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:43:54 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:43:54 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:43:54 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:43:54 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:43:54 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:43:54 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:43:54 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:43:54 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:43:54 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:43:54 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@31e04b13, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-19 21:43:54 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:43:54 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:43:54 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5eccd3b9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@70e13fa]
2020-05-19 21:43:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:43:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:43:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:43:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:43:55 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:43:55 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-19 21:43:55 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from movie movie_ where movie_.id=?
2020-05-19 21:43:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:43:55 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-19 21:43:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-19 21:43:55 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-19 21:43:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e869098]
2020-05-19 21:43:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:43:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:43:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:43:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:43:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:43:55 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:43:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24f870ee]
2020-05-19 21:43:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:43:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:43:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:43:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:43:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:43:55 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:43:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:43:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:43:55 DEBUG SQL:127 - drop table if exists movie
2020-05-19 21:43:55 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@36c281ed] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:43:55 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-19 21:43:55 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@43982337] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:43:55 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:43:55 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:43:55 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:43:55 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:43:55 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:43:55 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:43:55 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6fc1020a
2020-05-19 21:43:55 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: be633c94-2daa-4989-ba6d-856cbb809a57 (<unnamed>)
2020-05-19 21:43:55 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:43:55 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-19 21:43:55 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-19 21:43:55 DEBUG TransactionImpl:81 - begin
2020-05-19 21:43:55 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-19 21:43:55 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-19 21:43:55 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-19 21:43:55 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-19 21:43:55 DEBUG TransactionImpl:98 - committing
2020-05-19 21:43:55 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-19 21:43:55 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-19 21:43:55 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-19 21:43:55 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-19 21:43:55 DEBUG EntityPrinter:110 - Listing entities:
2020-05-19 21:43:55 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-19 21:43:55 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-19 21:43:55 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-19 21:44:35 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:44:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:44:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:44:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:44:35 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:44:35 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:44:35 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:44:35 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:44:36 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:44:36 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:44:36 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:44:36 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:44:36 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:44:36 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5674e1f2
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43f82e78
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f40e5db
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2654635
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6179e425
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49c6c24f
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1817f1eb
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f9678e1
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807bdeb
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd80673
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@674bd420
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5e1fa5b1
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1d131e1b
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f152006
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3724af13
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a43ce46
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@616fe72b
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e8dcdaa
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@681a8b4e
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cbe877d
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-19 21:44:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-19 21:44:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:44:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:44:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:44:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:44:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:44:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:44:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:44:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:44:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:44:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:44:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:44:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:44:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:44:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:44:36 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:44:36 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-19 21:44:36 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:44:36 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:44:36 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:44:36 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-19 21:44:36 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:44:36 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:44:36 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:44:36 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-19 21:44:36 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:44:36 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:44:36 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:44:36 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@757529a4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@779de014]
2020-05-19 21:44:36 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:44:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:44:36 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:44:36 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-19 21:44:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:44:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:44:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:44:36 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:44:36 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:44:36 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:44:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:44:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:44:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:44:36 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:44:36 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:44:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:44:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:44:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:44:36 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:44:36 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:44:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:44:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:44:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:44:36 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:44:36 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:44:36 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:44:36 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:44:36 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:44:36 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:44:36 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:44:36 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:44:36 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:44:36 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:44:36 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:44:36 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:44:36 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:44:36 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:44:36 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:44:36 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:44:36 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:44:36 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:44:36 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:44:36 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:44:36 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:44:36 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:44:36 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:44:36 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:44:36 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:44:36 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:44:36 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:44:36 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:44:36 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:44:36 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:44:36 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:44:36 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:44:36 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:44:36 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:44:36 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:44:36 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:44:36 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:44:36 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:44:36 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:44:36 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:44:36 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1de6932a, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-19 21:44:36 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:44:36 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:44:36 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@757529a4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1de9d54]
2020-05-19 21:44:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:44:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:44:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:44:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:44:37 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:44:37 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-19 21:44:37 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from movie movie_ where movie_.id=?
2020-05-19 21:44:37 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:44:37 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-19 21:44:37 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-19 21:44:37 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-19 21:44:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33425811]
2020-05-19 21:44:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:44:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:44:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:44:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:44:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:44:37 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:44:37 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e0ec41f]
2020-05-19 21:44:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:44:37 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:44:37 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:44:37 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:44:37 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:44:37 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:44:37 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:44:37 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:44:37 DEBUG SQL:127 - drop table if exists movie
2020-05-19 21:44:37 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7c112f5f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:44:37 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-19 21:44:37 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@404eca05] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:44:37 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:44:37 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:44:37 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:44:37 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:44:37 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:44:37 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:44:37 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@403c3a01
2020-05-19 21:44:37 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 64ebd16f-63a4-4aa4-a0d5-b9993eb3c1c2 (<unnamed>)
2020-05-19 21:44:37 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:44:37 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-19 21:44:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-19 21:44:37 DEBUG TransactionImpl:81 - begin
2020-05-19 21:44:37 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-19 21:44:37 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-19 21:44:37 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-19 21:44:37 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-19 21:44:37 DEBUG TransactionImpl:98 - committing
2020-05-19 21:44:37 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-19 21:44:37 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-19 21:44:37 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-19 21:44:37 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-19 21:44:37 DEBUG EntityPrinter:110 - Listing entities:
2020-05-19 21:44:37 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-19 21:44:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-19 21:44:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-19 21:49:10 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-19 21:49:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-19 21:49:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-19 21:49:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-19 21:49:10 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-19 21:49:10 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-19 21:49:10 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-19 21:49:11 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-19 21:49:11 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-19 21:49:11 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-19 21:49:11 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-19 21:49:11 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-19 21:49:11 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-19 21:49:11 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e2ff723
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5674e1f2
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43f82e78
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f40e5db
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55322aab
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@126945f9
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4879dfad
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4df5bcb4
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@2654635
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2654635
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@736caf7a
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@495fac5f
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@495b0487
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b6690c0
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@39fcbef6
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6179e425
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49c6c24f
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d5f10b2
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@63a270c9
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@68be8808
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@49d3c823
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@550a1967
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@f80945f
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77b14724
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7b84fcf8
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2cc44ad
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34cdeda2
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22ffa91a
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7f36662c
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1817f1eb
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@52066604
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f9678e1
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6d9f7a80
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4dc8caa7
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c45ee6e
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ca33c24
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1b765a2c
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2807bdeb
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@51972dc7
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54c62d71
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2dd80673
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@674bd420
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@35a9782c
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23fb172e
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5e1fa5b1
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@1d131e1b
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3300f4fd
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f152006
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f48b3d2
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65fe9e33
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3724af13
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a43ce46
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@616fe72b
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c7b5824
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7e8dcdaa
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@681a8b4e
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cbe877d
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-19 21:49:11 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-19 21:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-19 21:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-19 21:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-19 21:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-19 21:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-19 21:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-19 21:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-19 21:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-19 21:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-19 21:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-19 21:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-19 21:49:11 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-19 21:49:11 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-19 21:49:11 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-19 21:49:11 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-19 21:49:11 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-19 21:49:11 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-19 21:49:11 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-19 21:49:11 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-19 21:49:11 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-19 21:49:11 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-19 21:49:11 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-19 21:49:11 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-19 21:49:11 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-19 21:49:11 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-19 21:49:11 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3aefae67] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2e1792e7]
2020-05-19 21:49:11 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-19 21:49:11 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-19 21:49:11 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-19 21:49:11 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-19 21:49:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-19 21:49:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-19 21:49:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-19 21:49:11 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-19 21:49:11 DEBUG PropertyBinder:266 - Building property id
2020-05-19 21:49:11 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-19 21:49:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-19 21:49:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-19 21:49:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-19 21:49:11 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-19 21:49:11 DEBUG PropertyBinder:266 - Building property description
2020-05-19 21:49:11 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-19 21:49:11 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-19 21:49:11 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-19 21:49:11 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-19 21:49:11 DEBUG PropertyBinder:266 - Building property tittle
2020-05-19 21:49:11 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-19 21:49:11 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-19 21:49:11 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-19 21:49:11 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-19 21:49:11 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-19 21:49:11 DEBUG Settings:68 - SessionFactory name : null
2020-05-19 21:49:11 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-19 21:49:11 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-19 21:49:11 DEBUG Settings:72 - Statistics: disabled
2020-05-19 21:49:11 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-19 21:49:11 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-19 21:49:11 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-19 21:49:11 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-19 21:49:11 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-19 21:49:11 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-19 21:49:11 DEBUG Settings:82 - Default null ordering: NONE
2020-05-19 21:49:11 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-19 21:49:11 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-19 21:49:11 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-19 21:49:11 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-19 21:49:11 DEBUG Settings:90 - Query language substitutions: {}
2020-05-19 21:49:11 DEBUG Settings:91 - Named query checking : enabled
2020-05-19 21:49:11 DEBUG Settings:93 - Second-level cache: disabled
2020-05-19 21:49:11 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-19 21:49:11 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-19 21:49:11 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-19 21:49:11 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-19 21:49:11 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-19 21:49:11 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-19 21:49:11 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-19 21:49:11 DEBUG Settings:102 - JDBC batch size: 15
2020-05-19 21:49:11 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-19 21:49:11 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-19 21:49:11 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-19 21:49:11 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-19 21:49:11 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-19 21:49:11 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-19 21:49:11 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-19 21:49:11 DEBUG Settings:111 - JPA compliance - query : 
2020-05-19 21:49:11 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-19 21:49:11 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-19 21:49:11 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-19 21:49:11 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-19 21:49:11 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2875b016, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-19 21:49:12 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-19 21:49:12 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-19 21:49:12 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3aefae67] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@422b8438]
2020-05-19 21:49:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:49:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:49:12 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-19 21:49:12 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-19 21:49:12 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-19 21:49:12 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-19 21:49:12 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_0_, movie_.tittle as tittle3_0_ from movie movie_ where movie_.id=?
2020-05-19 21:49:12 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-19 21:49:12 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-19 21:49:12 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-19 21:49:12 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-19 21:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51ec2856]
2020-05-19 21:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:49:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:49:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:49:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:49:12 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:49:12 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ac9ec5]
2020-05-19 21:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-19 21:49:12 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-19 21:49:12 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-19 21:49:12 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-19 21:49:12 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-19 21:49:12 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:49:12 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:49:12 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_0_0_, movie0_.description as descript2_0_0_, movie0_.tittle as tittle3_0_0_ from movie movie0_ where movie0_.id=?
2020-05-19 21:49:12 DEBUG SQL:127 - drop table if exists movie
2020-05-19 21:49:12 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@24386839] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:49:12 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-19 21:49:12 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@35ee466f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-19 21:49:12 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-19 21:49:12 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-19 21:49:12 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:49:12 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-19 21:49:12 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-19 21:49:12 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-19 21:49:12 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3762c4fc
2020-05-19 21:49:12 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 8d78b26e-6ed4-4743-a573-2e46c8d2baf0 (<unnamed>)
2020-05-19 21:49:12 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-19 21:49:12 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-19 21:49:12 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-19 21:49:12 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@518ddd3b
2020-05-19 21:49:12 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-19 21:49:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-19 21:49:12 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-19 21:49:12 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-19 21:49:12 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-19 21:49:12 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-19 21:49:12 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-19 21:49:12 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-19 21:49:12 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-19 21:49:12 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-19 21:49:12 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-19 21:49:12 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_0_, movie0_.tittle as tittle3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-19 21:49:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-19 21:49:12 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-19 21:49:12 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.tittle as tittle3_0_ from movie movie0_
2020-05-19 21:49:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-19 21:49:12 DEBUG SQL:127 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.tittle as tittle3_0_ from movie movie0_
2020-05-19 21:49:12 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-19 21:49:12 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-19 21:49:12 DEBUG TransactionImpl:81 - begin
2020-05-19 21:49:12 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-19 21:49:12 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-19 21:49:12 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-19 21:49:12 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-19 21:49:12 DEBUG TransactionImpl:98 - committing
2020-05-19 21:49:12 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-19 21:49:12 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-19 21:49:12 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-19 21:49:12 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-19 21:49:12 DEBUG EntityPrinter:110 - Listing entities:
2020-05-19 21:49:12 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-19 21:49:12 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-19 21:49:12 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-19 21:49:12 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-19 21:49:12 DEBUG SQL:127 - select movie0_.id as id1_0_, movie0_.description as descript2_0_, movie0_.tittle as tittle3_0_ from movie movie0_
2020-05-19 21:49:12 DEBUG Loader:384 - Result set row: 0
2020-05-19 21:49:12 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-19 21:49:12 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-19 21:49:12 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-19 21:49:12 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-19 21:49:12 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-19 21:49:12 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-19 21:49:12 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-19 21:49:12 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:18:54 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 16:18:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 16:18:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 16:18:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 16:18:55 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 16:18:55 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 16:18:55 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 16:18:56 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 16:18:56 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 16:18:56 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 16:18:56 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 16:18:56 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 16:18:56 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 16:18:56 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@63798ca7
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@63798ca7
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63798ca7
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@517566b
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@12ed9db6
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b4c1d96
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@16c63f5
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@16c63f5
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@16c63f5
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@74eb909f
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@74eb909f
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@74eb909f
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@13d9b21f
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@13d9b21f
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13d9b21f
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@687ef2e0
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@687ef2e0
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@687ef2e0
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@497486b3
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@497486b3
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@497486b3
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@635572a7
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@635572a7
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@635572a7
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@222eb8aa
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@222eb8aa
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@222eb8aa
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2a76840c
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2a76840c
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2fc6f97f
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2fc6f97f
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6fe1b4fb
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6fe1b4fb
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13d73fa
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e0f9063
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@3ed242a4
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3ed242a4
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@13f95696
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13f95696
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5fe1ce85
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5fe1ce85
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@52851b44
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@52851b44
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@23aa363a
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@23aa363a
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1e8ce150
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1e8ce150
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@363042d7
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@363042d7
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1477089c
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1477089c
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10b9db7b
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10b9db7b
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@74960bfa
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@74960bfa
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@28e8dde3
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28e8dde3
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@10ded6a9
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10ded6a9
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10ded6a9
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@340b9973
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@362045c0
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@362045c0
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@362045c0
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@31d0e481
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3bcbb589
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3bcbb589
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5aac4250
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5aac4250
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@67c2e933
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@67c2e933
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@6ebf0f36
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6ebf0f36
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f6722d3
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f6722d3
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3700ec9c
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@47f4e407
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@47f4e407
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@47f4e407
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@57ea113a
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@57ea113a
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@57ea113a
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2072acb2
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@45815ffc
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@158a3b2e
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@158a3b2e
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@158a3b2e
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71cf1b07
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71cf1b07
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71cf1b07
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@43b6123e
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@61e94def
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@49872d67
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@49872d67
2020-05-21 16:18:56 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@78f5c518
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@44040454
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44040454
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@340da44c
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@340da44c
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a560583
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3d97a632
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@2dd29a59
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@708400f6
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@708400f6
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b2c4efb
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c35172e
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c2db68f
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-21 16:18:57 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-21 16:18:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 16:18:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 16:18:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 16:18:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 16:18:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 16:18:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 16:18:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 16:18:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 16:18:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 16:18:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 16:18:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 16:18:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 16:18:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 16:18:57 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 16:18:57 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 16:18:57 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 16:18:57 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 16:18:57 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 16:18:57 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 16:18:57 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 16:18:58 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 16:18:58 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 16:18:58 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 16:18:58 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 16:18:58 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 16:18:58 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 16:18:58 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 16:18:58 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3aefae67] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2e1792e7]
2020-05-21 16:18:58 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 16:18:58 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 16:18:58 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 16:18:58 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 16:18:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 16:18:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 16:18:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 16:18:58 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 16:18:58 DEBUG PropertyBinder:266 - Building property id
2020-05-21 16:18:58 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 16:18:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 16:18:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 16:18:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 16:18:58 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 16:18:58 DEBUG PropertyBinder:266 - Building property description
2020-05-21 16:18:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 16:18:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 16:18:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 16:18:58 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 16:18:58 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 16:18:58 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 16:18:58 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 16:18:58 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 16:18:58 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 16:18:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 16:18:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 16:18:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 16:18:58 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 16:18:58 DEBUG PropertyBinder:266 - Building property id
2020-05-21 16:18:58 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 16:18:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 16:18:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 16:18:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 16:18:58 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 16:18:58 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 16:18:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 16:18:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 16:18:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 16:18:58 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 16:18:58 DEBUG PropertyBinder:266 - Building property description
2020-05-21 16:18:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 16:18:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 16:18:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 16:18:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 16:18:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 16:18:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 16:18:58 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 16:18:58 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 16:18:58 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 16:18:58 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 16:18:58 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 16:18:58 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 16:18:58 DEBUG Settings:72 - Statistics: disabled
2020-05-21 16:18:58 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 16:18:58 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 16:18:58 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 16:18:58 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 16:18:58 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 16:18:58 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 16:18:58 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 16:18:58 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 16:18:58 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 16:18:58 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 16:18:58 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 16:18:58 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 16:18:58 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 16:18:58 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 16:18:58 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 16:18:58 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 16:18:58 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 16:18:58 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 16:18:58 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 16:18:58 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 16:18:58 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 16:18:58 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 16:18:58 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 16:18:58 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 16:18:58 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 16:18:58 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 16:18:58 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 16:18:58 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 16:18:58 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 16:18:58 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 16:18:58 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 16:18:58 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 16:18:58 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 16:18:58 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 16:18:58 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@38c2c309, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 16:18:58 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 16:18:58 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 16:18:58 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3aefae67] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3c4262d1]
2020-05-21 16:18:58 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 16:18:58 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 16:18:58 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 16:18:58 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 16:18:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 16:18:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 16:18:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 16:18:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 16:18:59 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 16:18:59 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 16:18:59 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 16:18:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 16:18:59 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 16:18:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 16:18:59 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 16:18:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d1cbd0f]
2020-05-21 16:18:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 16:18:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:18:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:18:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:18:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 16:18:59 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:18:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b4eced1]
2020-05-21 16:18:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 16:18:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:18:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:18:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:18:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 16:18:59 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:18:59 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:18:59 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:18:59 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 16:18:59 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 16:18:59 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 16:18:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 16:18:59 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 16:18:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 16:18:59 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 16:18:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d38edfd]
2020-05-21 16:18:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:18:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 16:18:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:18:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:18:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 16:18:59 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:18:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@655a01d8]
2020-05-21 16:18:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:18:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 16:18:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:18:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:18:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 16:18:59 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:18:59 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:18:59 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:18:59 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 16:18:59 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2ab26378] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 16:18:59 DEBUG SQL:127 - drop table if exists movie
2020-05-21 16:18:59 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 16:18:59 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4d3c6593] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 16:18:59 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 16:18:59 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 16:18:59 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 16:18:59 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 16:18:59 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 16:18:59 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 16:18:59 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 16:18:59 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@71f1cc02
2020-05-21 16:18:59 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 10f408b5-329a-4e1d-819d-7483367e750b (<unnamed>)
2020-05-21 16:18:59 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 16:18:59 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 16:18:59 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 16:18:59 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5b5dce5c
2020-05-21 16:18:59 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 16:18:59 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:18:59 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 16:18:59 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 16:18:59 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 16:18:59 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 16:18:59 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 16:18:59 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 16:18:59 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 16:18:59 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 16:18:59 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 16:18:59 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 16:18:59 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:18:59 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 16:18:59 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 16:18:59 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:18:59 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 16:18:59 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:18:59 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:18:59 DEBUG TransactionImpl:81 - begin
2020-05-21 16:18:59 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 16:18:59 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 16:18:59 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 16:18:59 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 16:18:59 DEBUG TransactionImpl:98 - committing
2020-05-21 16:18:59 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 16:18:59 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 16:18:59 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 16:18:59 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 16:18:59 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 16:18:59 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 16:18:59 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:18:59 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:18:59 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 16:18:59 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 16:18:59 DEBUG Loader:384 - Result set row: 0
2020-05-21 16:18:59 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 16:18:59 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 16:18:59 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 16:18:59 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 16:18:59 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 16:18:59 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 16:18:59 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 16:18:59 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:20:02 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 16:20:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 16:20:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 16:20:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 16:20:02 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 16:20:02 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 16:20:02 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 16:20:03 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 16:20:03 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 16:20:03 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 16:20:03 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 16:20:03 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 16:20:03 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 16:20:03 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@63798ca7
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@63798ca7
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63798ca7
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@517566b
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@12ed9db6
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b4c1d96
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@16c63f5
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@16c63f5
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@16c63f5
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@74eb909f
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@74eb909f
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@74eb909f
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@13d9b21f
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@13d9b21f
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13d9b21f
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@687ef2e0
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@687ef2e0
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@687ef2e0
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@497486b3
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@497486b3
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@497486b3
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@635572a7
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@635572a7
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@635572a7
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@222eb8aa
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@222eb8aa
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@222eb8aa
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2a76840c
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2a76840c
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2fc6f97f
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2fc6f97f
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6fe1b4fb
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6fe1b4fb
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13d73fa
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e0f9063
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@3ed242a4
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3ed242a4
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@13f95696
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13f95696
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5fe1ce85
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5fe1ce85
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@52851b44
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@52851b44
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@23aa363a
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@23aa363a
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1e8ce150
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1e8ce150
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@363042d7
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@363042d7
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1477089c
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1477089c
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10b9db7b
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10b9db7b
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@74960bfa
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@74960bfa
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@28e8dde3
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28e8dde3
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@10ded6a9
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10ded6a9
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10ded6a9
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@340b9973
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@362045c0
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@362045c0
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@362045c0
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@31d0e481
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3bcbb589
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3bcbb589
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5aac4250
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5aac4250
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@67c2e933
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@67c2e933
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@6ebf0f36
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6ebf0f36
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f6722d3
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f6722d3
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3700ec9c
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@47f4e407
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@47f4e407
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@47f4e407
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@57ea113a
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@57ea113a
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@57ea113a
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2072acb2
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@45815ffc
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@158a3b2e
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@158a3b2e
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@158a3b2e
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71cf1b07
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71cf1b07
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71cf1b07
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@43b6123e
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@61e94def
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@49872d67
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@49872d67
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@78f5c518
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@44040454
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44040454
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@340da44c
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@340da44c
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a560583
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3d97a632
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@2dd29a59
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@708400f6
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@708400f6
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b2c4efb
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c35172e
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c2db68f
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-21 16:20:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-21 16:20:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 16:20:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 16:20:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 16:20:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 16:20:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 16:20:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 16:20:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 16:20:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 16:20:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 16:20:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 16:20:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 16:20:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 16:20:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 16:20:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 16:20:03 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 16:20:03 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 16:20:03 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 16:20:03 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 16:20:03 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 16:20:03 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 16:20:03 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 16:20:03 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 16:20:03 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 16:20:03 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 16:20:03 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 16:20:03 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 16:20:03 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 16:20:03 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4642b71d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1450078a]
2020-05-21 16:20:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 16:20:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 16:20:04 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 16:20:04 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 16:20:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 16:20:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 16:20:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 16:20:04 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 16:20:04 DEBUG PropertyBinder:266 - Building property id
2020-05-21 16:20:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 16:20:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 16:20:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 16:20:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 16:20:04 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 16:20:04 DEBUG PropertyBinder:266 - Building property description
2020-05-21 16:20:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 16:20:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 16:20:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 16:20:04 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 16:20:04 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 16:20:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 16:20:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 16:20:04 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 16:20:04 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 16:20:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 16:20:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 16:20:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 16:20:04 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 16:20:04 DEBUG PropertyBinder:266 - Building property id
2020-05-21 16:20:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 16:20:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 16:20:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 16:20:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 16:20:04 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 16:20:04 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 16:20:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 16:20:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 16:20:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 16:20:04 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 16:20:04 DEBUG PropertyBinder:266 - Building property description
2020-05-21 16:20:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 16:20:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 16:20:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 16:20:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 16:20:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 16:20:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 16:20:04 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 16:20:04 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 16:20:04 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 16:20:04 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 16:20:04 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 16:20:04 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 16:20:04 DEBUG Settings:72 - Statistics: disabled
2020-05-21 16:20:04 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 16:20:04 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 16:20:04 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 16:20:04 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 16:20:04 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 16:20:04 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 16:20:04 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 16:20:04 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 16:20:04 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 16:20:04 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 16:20:04 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 16:20:04 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 16:20:04 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 16:20:04 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 16:20:04 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 16:20:04 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 16:20:04 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 16:20:04 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 16:20:04 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 16:20:04 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 16:20:04 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 16:20:04 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 16:20:04 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 16:20:04 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 16:20:04 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 16:20:04 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 16:20:04 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 16:20:04 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 16:20:04 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 16:20:04 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 16:20:04 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 16:20:04 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 16:20:04 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 16:20:04 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 16:20:04 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@14dc3f89, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 16:20:04 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 16:20:04 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 16:20:04 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4642b71d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@77a2aa4a]
2020-05-21 16:20:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 16:20:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 16:20:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 16:20:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 16:20:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 16:20:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 16:20:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 16:20:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 16:20:04 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 16:20:04 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 16:20:04 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 16:20:04 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 16:20:04 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 16:20:04 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 16:20:04 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 16:20:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ad85136]
2020-05-21 16:20:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 16:20:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:20:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:20:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:20:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 16:20:04 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:20:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63d4f0a2]
2020-05-21 16:20:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 16:20:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:20:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:20:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:20:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 16:20:04 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:20:04 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:20:04 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:20:04 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 16:20:04 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 16:20:04 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 16:20:04 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 16:20:04 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 16:20:04 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 16:20:04 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 16:20:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26fb4d06]
2020-05-21 16:20:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:20:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 16:20:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:20:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:20:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 16:20:04 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:20:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e43ddd6]
2020-05-21 16:20:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:20:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 16:20:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:20:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:20:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 16:20:04 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:20:04 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:20:04 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:20:04 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 16:20:04 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6056232d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 16:20:04 DEBUG SQL:127 - drop table if exists movie
2020-05-21 16:20:04 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 16:20:04 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@68565bc7] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 16:20:04 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 16:20:04 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 16:20:04 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 16:20:04 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 16:20:04 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 16:20:04 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 16:20:04 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 16:20:04 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6ca8fcf3
2020-05-21 16:20:04 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 32ac9f96-add8-4d84-b966-53764268ddd1 (<unnamed>)
2020-05-21 16:20:04 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 16:20:04 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 16:20:04 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 16:20:04 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@21a9a705
2020-05-21 16:20:04 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 16:20:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:20:04 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 16:20:04 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 16:20:04 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 16:20:04 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 16:20:04 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 16:20:04 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 16:20:04 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 16:20:04 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 16:20:04 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 16:20:04 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 16:20:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:20:04 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 16:20:04 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 16:20:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:20:04 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 16:20:04 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:20:04 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:20:04 DEBUG TransactionImpl:81 - begin
2020-05-21 16:20:04 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 16:20:04 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 16:20:04 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 16:20:04 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 16:20:04 DEBUG TransactionImpl:98 - committing
2020-05-21 16:20:04 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 16:20:04 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 16:20:04 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 16:20:04 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 16:20:04 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 16:20:04 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 16:20:04 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:20:04 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:20:04 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 16:20:04 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 16:20:04 DEBUG Loader:384 - Result set row: 0
2020-05-21 16:20:04 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 16:20:04 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 16:20:04 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 16:20:04 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 16:20:04 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 16:20:04 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 16:20:04 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 16:20:04 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:20:04 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:20:04 DEBUG TransactionImpl:81 - begin
2020-05-21 16:20:04 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 16:20:04 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 16:20:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:20:04 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 16:20:04 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 16:20:04 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-21 16:20:04 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-21 16:20:04 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 16:20:04 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-21 16:20:04 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 16:20:04 DEBUG JoinProcessor:279 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-21 16:20:04 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 16:20:04 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-05-21 16:20:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:20:04 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 16:20:04 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 16:20:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:20:04 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 16:20:04 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:20:04 DEBUG TransactionImpl:81 - begin
2020-05-21 16:20:04 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 16:20:04 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 16:20:04 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 16:20:04 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 16:20:04 DEBUG TransactionImpl:98 - committing
2020-05-21 16:20:04 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 16:20:04 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 16:20:04 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 16:20:04 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 16:20:04 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 16:20:04 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Cinema hall - A, id=1, capacity=50}
2020-05-21 16:20:04 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:20:04 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:20:04 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:20:04 DEBUG TransactionImpl:81 - begin
2020-05-21 16:20:04 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 16:20:04 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 16:20:04 DEBUG Loader:384 - Result set row: 0
2020-05-21 16:20:04 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-05-21 16:20:04 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 16:20:04 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 16:20:04 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 16:20:04 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 16:20:04 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 16:20:04 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 16:23:06 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 16:23:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 16:23:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 16:23:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 16:23:06 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 16:23:06 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 16:23:07 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 16:23:07 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 16:23:07 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 16:23:07 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 16:23:07 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 16:23:07 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 16:23:07 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 16:23:07 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@63798ca7
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@63798ca7
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63798ca7
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@517566b
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@12ed9db6
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b4c1d96
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@16c63f5
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@16c63f5
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@16c63f5
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@74eb909f
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@74eb909f
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@74eb909f
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@13d9b21f
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@13d9b21f
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13d9b21f
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@687ef2e0
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@687ef2e0
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@687ef2e0
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@497486b3
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@497486b3
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@497486b3
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@635572a7
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@635572a7
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@635572a7
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@222eb8aa
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@222eb8aa
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@222eb8aa
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2a76840c
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2a76840c
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2fc6f97f
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2fc6f97f
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6fe1b4fb
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6fe1b4fb
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13d73fa
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e0f9063
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@3ed242a4
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3ed242a4
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@13f95696
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13f95696
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5fe1ce85
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5fe1ce85
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@52851b44
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@52851b44
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@23aa363a
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@23aa363a
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1e8ce150
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1e8ce150
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@363042d7
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@363042d7
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1477089c
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1477089c
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10b9db7b
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10b9db7b
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@74960bfa
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@74960bfa
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@28e8dde3
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28e8dde3
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@10ded6a9
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10ded6a9
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10ded6a9
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@340b9973
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@362045c0
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@362045c0
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@362045c0
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@31d0e481
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3bcbb589
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3bcbb589
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5aac4250
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5aac4250
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@67c2e933
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@67c2e933
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@6ebf0f36
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6ebf0f36
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f6722d3
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f6722d3
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3700ec9c
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@47f4e407
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@47f4e407
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@47f4e407
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@57ea113a
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@57ea113a
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@57ea113a
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2072acb2
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@45815ffc
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@158a3b2e
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@158a3b2e
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@158a3b2e
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71cf1b07
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71cf1b07
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71cf1b07
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@43b6123e
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@61e94def
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@49872d67
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@49872d67
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@78f5c518
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@44040454
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44040454
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@340da44c
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@340da44c
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a560583
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3d97a632
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@2dd29a59
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@708400f6
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@708400f6
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b2c4efb
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c35172e
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c2db68f
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-21 16:23:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-21 16:23:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 16:23:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 16:23:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 16:23:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 16:23:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 16:23:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 16:23:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 16:23:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 16:23:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 16:23:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 16:23:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 16:23:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 16:23:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 16:23:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 16:23:07 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 16:23:07 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 16:23:07 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 16:23:07 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 16:23:07 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 16:23:07 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 16:23:08 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 16:23:08 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 16:23:08 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 16:23:08 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 16:23:08 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 16:23:08 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 16:23:08 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 16:23:08 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@796d3c9f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6bff19ff]
2020-05-21 16:23:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 16:23:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 16:23:08 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 16:23:08 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 16:23:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 16:23:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 16:23:08 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 16:23:08 DEBUG PropertyBinder:266 - Building property id
2020-05-21 16:23:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 16:23:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 16:23:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 16:23:08 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 16:23:08 DEBUG PropertyBinder:266 - Building property description
2020-05-21 16:23:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 16:23:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 16:23:08 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 16:23:08 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 16:23:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 16:23:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 16:23:08 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 16:23:08 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 16:23:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 16:23:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 16:23:08 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 16:23:08 DEBUG PropertyBinder:266 - Building property id
2020-05-21 16:23:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 16:23:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 16:23:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 16:23:08 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 16:23:08 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 16:23:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 16:23:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 16:23:08 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 16:23:08 DEBUG PropertyBinder:266 - Building property description
2020-05-21 16:23:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 16:23:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 16:23:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 16:23:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 16:23:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 16:23:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 16:23:08 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 16:23:08 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 16:23:08 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 16:23:08 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 16:23:08 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 16:23:08 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 16:23:08 DEBUG Settings:72 - Statistics: disabled
2020-05-21 16:23:08 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 16:23:08 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 16:23:08 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 16:23:08 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 16:23:08 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 16:23:08 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 16:23:08 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 16:23:08 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 16:23:08 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 16:23:08 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 16:23:08 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 16:23:08 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 16:23:08 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 16:23:08 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 16:23:08 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 16:23:08 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 16:23:08 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 16:23:08 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 16:23:08 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 16:23:08 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 16:23:08 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 16:23:08 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 16:23:08 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 16:23:08 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 16:23:08 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 16:23:08 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 16:23:08 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 16:23:08 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 16:23:08 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 16:23:08 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 16:23:08 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 16:23:08 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 16:23:08 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 16:23:08 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 16:23:08 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2875b016, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 16:23:08 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 16:23:08 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 16:23:08 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@796d3c9f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@422b8438]
2020-05-21 16:23:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 16:23:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 16:23:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 16:23:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 16:23:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 16:23:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 16:23:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 16:23:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 16:23:08 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 16:23:08 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 16:23:08 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 16:23:08 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 16:23:08 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 16:23:08 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 16:23:08 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 16:23:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f88bfbe]
2020-05-21 16:23:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 16:23:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:23:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:23:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:23:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 16:23:08 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:23:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48976e6d]
2020-05-21 16:23:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 16:23:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:23:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:23:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:23:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 16:23:08 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:23:08 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:23:08 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:23:08 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 16:23:08 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 16:23:08 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 16:23:08 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 16:23:08 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 16:23:08 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 16:23:08 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 16:23:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6614bd4b]
2020-05-21 16:23:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:23:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 16:23:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:23:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:23:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 16:23:08 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:23:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7847ef2c]
2020-05-21 16:23:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:23:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 16:23:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:23:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:23:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 16:23:08 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:23:08 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:23:08 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:23:08 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 16:23:08 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@61a91c9b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 16:23:08 DEBUG SQL:127 - drop table if exists movie
2020-05-21 16:23:08 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 16:23:08 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@43984213] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 16:23:08 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 16:23:08 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 16:23:08 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 16:23:08 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 16:23:08 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 16:23:08 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 16:23:08 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 16:23:08 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1d61a348
2020-05-21 16:23:08 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: a052a4a3-38ee-4011-921a-9e3bceb6453f (<unnamed>)
2020-05-21 16:23:08 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 16:23:08 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 16:23:08 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 16:23:08 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4ace284d
2020-05-21 16:23:08 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 16:23:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:08 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 16:23:08 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 16:23:08 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 16:23:08 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 16:23:08 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 16:23:08 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 16:23:08 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 16:23:08 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 16:23:08 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 16:23:08 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 16:23:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:08 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 16:23:08 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 16:23:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:08 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 16:23:08 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:08 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:23:08 DEBUG TransactionImpl:81 - begin
2020-05-21 16:23:08 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 16:23:08 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 16:23:08 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 16:23:08 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 16:23:08 DEBUG TransactionImpl:98 - committing
2020-05-21 16:23:08 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 16:23:08 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 16:23:08 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 16:23:08 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 16:23:08 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 16:23:08 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 16:23:08 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:08 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:08 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 16:23:08 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 16:23:08 DEBUG Loader:384 - Result set row: 0
2020-05-21 16:23:08 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 16:23:08 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 16:23:08 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 16:23:08 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 16:23:08 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 16:23:08 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 16:23:08 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 16:23:08 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:08 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:23:08 DEBUG TransactionImpl:81 - begin
2020-05-21 16:23:08 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 16:23:08 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 16:23:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:08 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 16:23:08 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 16:23:08 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-21 16:23:08 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-21 16:23:08 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 16:23:08 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-21 16:23:08 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 16:23:08 DEBUG JoinProcessor:279 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-21 16:23:08 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 16:23:08 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-05-21 16:23:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:08 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 16:23:08 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 16:23:08 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:08 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 16:23:08 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:23:08 DEBUG TransactionImpl:81 - begin
2020-05-21 16:23:08 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 16:23:08 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 16:23:08 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 16:23:08 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 16:23:08 DEBUG TransactionImpl:98 - committing
2020-05-21 16:23:08 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 16:23:08 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 16:23:08 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 16:23:08 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 16:23:08 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 16:23:08 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Cinema hall - A, id=1, capacity=50}
2020-05-21 16:23:08 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:08 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:08 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:23:08 DEBUG TransactionImpl:81 - begin
2020-05-21 16:23:08 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 16:23:08 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 16:23:08 DEBUG Loader:384 - Result set row: 0
2020-05-21 16:23:08 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-05-21 16:23:08 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 16:23:08 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 16:23:08 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 16:23:08 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 16:23:08 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 16:23:08 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 16:23:22 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 16:23:22 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 16:23:22 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 16:23:22 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 16:23:22 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 16:23:22 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 16:23:23 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 16:23:23 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 16:23:23 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 16:23:23 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 16:23:23 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 16:23:23 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 16:23:23 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 16:23:23 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@63798ca7
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@63798ca7
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63798ca7
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@517566b
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@12ed9db6
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b4c1d96
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@16c63f5
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@16c63f5
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@16c63f5
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@74eb909f
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@74eb909f
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@74eb909f
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@13d9b21f
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@13d9b21f
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13d9b21f
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@687ef2e0
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@687ef2e0
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@687ef2e0
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@497486b3
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@497486b3
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@497486b3
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@635572a7
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@635572a7
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@635572a7
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@222eb8aa
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@222eb8aa
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@222eb8aa
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2a76840c
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2a76840c
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2fc6f97f
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2fc6f97f
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6fe1b4fb
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6fe1b4fb
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13d73fa
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e0f9063
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@3ed242a4
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3ed242a4
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@13f95696
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13f95696
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5fe1ce85
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5fe1ce85
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@52851b44
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@52851b44
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@23aa363a
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@23aa363a
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1e8ce150
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1e8ce150
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@363042d7
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@363042d7
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1477089c
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1477089c
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10b9db7b
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10b9db7b
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@74960bfa
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@74960bfa
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@28e8dde3
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28e8dde3
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@10ded6a9
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10ded6a9
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10ded6a9
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@340b9973
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@362045c0
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@362045c0
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@362045c0
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@31d0e481
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3bcbb589
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3bcbb589
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5aac4250
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5aac4250
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@67c2e933
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@67c2e933
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@6ebf0f36
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6ebf0f36
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f6722d3
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f6722d3
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3700ec9c
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@47f4e407
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@47f4e407
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@47f4e407
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@57ea113a
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@57ea113a
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@57ea113a
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2072acb2
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@45815ffc
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@158a3b2e
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@158a3b2e
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@158a3b2e
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71cf1b07
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71cf1b07
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71cf1b07
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@43b6123e
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@61e94def
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@49872d67
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@49872d67
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@78f5c518
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@44040454
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44040454
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@340da44c
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@340da44c
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a560583
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3d97a632
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@2dd29a59
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@708400f6
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@708400f6
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b2c4efb
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c35172e
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c2db68f
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-21 16:23:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-21 16:23:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 16:23:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 16:23:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 16:23:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 16:23:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 16:23:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 16:23:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 16:23:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 16:23:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 16:23:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 16:23:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 16:23:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 16:23:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 16:23:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 16:23:23 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 16:23:23 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 16:23:23 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 16:23:23 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 16:23:23 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 16:23:23 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 16:23:24 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 16:23:24 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 16:23:24 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 16:23:24 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 16:23:24 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 16:23:24 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 16:23:24 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 16:23:24 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41477a6d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2bc12da]
2020-05-21 16:23:24 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 16:23:24 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 16:23:24 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 16:23:24 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 16:23:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 16:23:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 16:23:24 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 16:23:24 DEBUG PropertyBinder:266 - Building property id
2020-05-21 16:23:24 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 16:23:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 16:23:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 16:23:24 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 16:23:24 DEBUG PropertyBinder:266 - Building property description
2020-05-21 16:23:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 16:23:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 16:23:24 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 16:23:24 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 16:23:24 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 16:23:24 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 16:23:24 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 16:23:24 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 16:23:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 16:23:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 16:23:24 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 16:23:24 DEBUG PropertyBinder:266 - Building property id
2020-05-21 16:23:24 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 16:23:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 16:23:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 16:23:24 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 16:23:24 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 16:23:24 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:24 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 16:23:24 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 16:23:24 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 16:23:24 DEBUG PropertyBinder:266 - Building property description
2020-05-21 16:23:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 16:23:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 16:23:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 16:23:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 16:23:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 16:23:24 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 16:23:24 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 16:23:24 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 16:23:24 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 16:23:24 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 16:23:24 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 16:23:24 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 16:23:24 DEBUG Settings:72 - Statistics: disabled
2020-05-21 16:23:24 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 16:23:24 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 16:23:24 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 16:23:24 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 16:23:24 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 16:23:24 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 16:23:24 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 16:23:24 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 16:23:24 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 16:23:24 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 16:23:24 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 16:23:24 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 16:23:24 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 16:23:24 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 16:23:24 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 16:23:24 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 16:23:24 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 16:23:24 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 16:23:24 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 16:23:24 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 16:23:24 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 16:23:24 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 16:23:24 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 16:23:24 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 16:23:24 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 16:23:24 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 16:23:24 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 16:23:24 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 16:23:24 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 16:23:24 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 16:23:24 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 16:23:24 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 16:23:24 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 16:23:24 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 16:23:24 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@70211e49, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 16:23:24 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 16:23:24 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 16:23:24 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41477a6d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@108d55c4]
2020-05-21 16:23:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 16:23:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 16:23:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 16:23:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 16:23:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 16:23:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 16:23:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 16:23:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 16:23:24 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 16:23:24 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 16:23:24 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 16:23:24 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 16:23:24 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 16:23:24 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 16:23:24 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 16:23:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@529c2a9a]
2020-05-21 16:23:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 16:23:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:23:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:23:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:23:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 16:23:24 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:23:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69d23296]
2020-05-21 16:23:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 16:23:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:23:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:23:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:23:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 16:23:24 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:23:24 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:23:24 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:23:24 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 16:23:24 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 16:23:24 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 16:23:24 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 16:23:24 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 16:23:24 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 16:23:24 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 16:23:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f0cab0a]
2020-05-21 16:23:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:23:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 16:23:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:23:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:23:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 16:23:24 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:23:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ab4ae59]
2020-05-21 16:23:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:23:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 16:23:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:23:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:23:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 16:23:24 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:23:24 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:23:24 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:23:24 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 16:23:24 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@46e64760] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 16:23:24 DEBUG SQL:127 - drop table if exists movie
2020-05-21 16:23:24 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 16:23:24 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6342ff7f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 16:23:25 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 16:23:25 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 16:23:25 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 16:23:25 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 16:23:25 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 16:23:25 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 16:23:25 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 16:23:25 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2d55e826
2020-05-21 16:23:25 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 5480860f-7688-42d3-bf71-be84b5bc6279 (<unnamed>)
2020-05-21 16:23:25 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 16:23:25 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 16:23:25 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 16:23:25 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7c663eaf
2020-05-21 16:23:25 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 16:23:25 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:25 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 16:23:25 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 16:23:25 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 16:23:25 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 16:23:25 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 16:23:25 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 16:23:25 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 16:23:25 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 16:23:25 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 16:23:25 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 16:23:25 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:25 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 16:23:25 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 16:23:25 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:25 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 16:23:25 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:25 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:23:25 DEBUG TransactionImpl:81 - begin
2020-05-21 16:23:25 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 16:23:25 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 16:23:25 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 16:23:25 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 16:23:25 DEBUG TransactionImpl:98 - committing
2020-05-21 16:23:25 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 16:23:25 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 16:23:25 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 16:23:25 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 16:23:25 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 16:23:25 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 16:23:25 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:25 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:25 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 16:23:25 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 16:23:25 DEBUG Loader:384 - Result set row: 0
2020-05-21 16:23:25 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 16:23:25 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 16:23:25 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 16:23:25 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 16:23:25 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 16:23:25 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 16:23:25 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 16:23:25 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:25 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:23:25 DEBUG TransactionImpl:81 - begin
2020-05-21 16:23:25 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 16:23:25 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 16:23:25 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:25 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 16:23:25 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 16:23:25 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-21 16:23:25 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-21 16:23:25 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 16:23:25 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-21 16:23:25 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 16:23:25 DEBUG JoinProcessor:279 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-21 16:23:25 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 16:23:25 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-05-21 16:23:25 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:25 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 16:23:25 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 16:23:25 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:25 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 16:23:25 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:23:25 DEBUG TransactionImpl:81 - begin
2020-05-21 16:23:25 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 16:23:25 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 16:23:25 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 16:23:25 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 16:23:25 DEBUG TransactionImpl:98 - committing
2020-05-21 16:23:25 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 16:23:25 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 16:23:25 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 16:23:25 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 16:23:25 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 16:23:25 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Cinema hall - A, id=1, capacity=50}
2020-05-21 16:23:25 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:25 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:25 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:23:25 DEBUG TransactionImpl:81 - begin
2020-05-21 16:23:25 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 16:23:25 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 16:23:25 DEBUG Loader:384 - Result set row: 0
2020-05-21 16:23:25 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-05-21 16:23:25 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 16:23:25 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 16:23:25 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 16:23:25 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 16:23:25 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 16:23:25 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 16:23:43 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 16:23:43 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 16:23:43 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 16:23:43 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 16:23:44 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 16:23:44 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 16:23:44 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 16:23:44 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 16:23:44 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 16:23:44 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 16:23:44 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 16:23:44 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 16:23:44 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 16:23:44 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@63798ca7
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@63798ca7
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63798ca7
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@517566b
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@12ed9db6
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b4c1d96
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@16c63f5
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@16c63f5
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@16c63f5
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@74eb909f
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@74eb909f
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@74eb909f
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@13d9b21f
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@13d9b21f
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13d9b21f
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@687ef2e0
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@687ef2e0
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@687ef2e0
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@497486b3
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@497486b3
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@497486b3
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@635572a7
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@635572a7
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@635572a7
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@222eb8aa
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@222eb8aa
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@222eb8aa
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2a76840c
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2a76840c
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2fc6f97f
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2fc6f97f
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6fe1b4fb
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6fe1b4fb
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13d73fa
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1e0f9063
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@3ed242a4
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3ed242a4
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@13f95696
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13f95696
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@5fe1ce85
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5fe1ce85
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@52851b44
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@52851b44
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@23aa363a
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@23aa363a
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1e8ce150
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1e8ce150
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@363042d7
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@363042d7
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1477089c
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1477089c
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10b9db7b
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10b9db7b
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@74960bfa
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@74960bfa
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@28e8dde3
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@28e8dde3
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@10ded6a9
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10ded6a9
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10ded6a9
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@340b9973
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@362045c0
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@362045c0
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@362045c0
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@31d0e481
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3bcbb589
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3bcbb589
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@5aac4250
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5aac4250
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@67c2e933
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@67c2e933
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@6ebf0f36
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6ebf0f36
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5f6722d3
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5f6722d3
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3700ec9c
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@47f4e407
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@47f4e407
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@47f4e407
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@57ea113a
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@57ea113a
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@57ea113a
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2072acb2
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@45815ffc
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@158a3b2e
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@158a3b2e
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@158a3b2e
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71cf1b07
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71cf1b07
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71cf1b07
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@43b6123e
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@61e94def
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@49872d67
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@49872d67
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@78f5c518
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@44040454
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44040454
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@340da44c
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@340da44c
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a560583
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3d97a632
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@2dd29a59
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@708400f6
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@708400f6
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b2c4efb
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@c35172e
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c2db68f
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-21 16:23:44 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-21 16:23:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 16:23:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 16:23:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 16:23:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 16:23:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 16:23:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 16:23:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 16:23:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 16:23:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 16:23:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 16:23:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 16:23:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 16:23:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 16:23:44 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 16:23:44 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 16:23:44 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 16:23:44 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 16:23:44 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 16:23:44 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 16:23:44 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 16:23:45 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 16:23:45 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 16:23:45 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 16:23:45 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 16:23:45 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 16:23:45 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 16:23:45 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 16:23:45 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@796d3c9f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6bff19ff]
2020-05-21 16:23:45 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 16:23:45 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 16:23:45 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 16:23:45 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 16:23:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 16:23:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 16:23:45 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 16:23:45 DEBUG PropertyBinder:266 - Building property id
2020-05-21 16:23:45 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 16:23:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 16:23:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 16:23:45 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 16:23:45 DEBUG PropertyBinder:266 - Building property description
2020-05-21 16:23:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 16:23:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 16:23:45 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 16:23:45 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 16:23:45 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 16:23:45 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 16:23:45 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 16:23:45 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 16:23:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 16:23:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 16:23:45 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 16:23:45 DEBUG PropertyBinder:266 - Building property id
2020-05-21 16:23:45 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 16:23:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 16:23:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 16:23:45 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 16:23:45 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 16:23:45 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 16:23:45 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 16:23:45 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 16:23:45 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 16:23:45 DEBUG PropertyBinder:266 - Building property description
2020-05-21 16:23:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 16:23:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 16:23:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 16:23:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 16:23:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 16:23:45 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 16:23:45 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 16:23:45 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 16:23:45 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 16:23:45 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 16:23:45 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 16:23:45 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 16:23:45 DEBUG Settings:72 - Statistics: disabled
2020-05-21 16:23:45 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 16:23:45 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 16:23:45 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 16:23:45 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 16:23:45 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 16:23:45 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 16:23:45 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 16:23:45 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 16:23:45 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 16:23:45 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 16:23:45 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 16:23:45 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 16:23:45 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 16:23:45 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 16:23:45 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 16:23:45 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 16:23:45 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 16:23:45 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 16:23:45 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 16:23:45 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 16:23:45 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 16:23:45 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 16:23:45 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 16:23:45 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 16:23:45 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 16:23:45 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 16:23:45 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 16:23:45 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 16:23:45 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 16:23:45 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 16:23:45 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 16:23:45 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 16:23:45 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 16:23:45 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 16:23:45 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2875b016, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 16:23:45 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 16:23:45 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 16:23:45 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@796d3c9f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@422b8438]
2020-05-21 16:23:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 16:23:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 16:23:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 16:23:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 16:23:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 16:23:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 16:23:45 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 16:23:45 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 16:23:45 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 16:23:45 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 16:23:45 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 16:23:45 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 16:23:45 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 16:23:45 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 16:23:45 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 16:23:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f88bfbe]
2020-05-21 16:23:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 16:23:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:23:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:23:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:23:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 16:23:45 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:23:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48976e6d]
2020-05-21 16:23:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 16:23:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:23:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:23:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:23:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 16:23:45 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:23:45 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:23:45 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 16:23:45 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 16:23:45 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 16:23:45 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 16:23:45 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 16:23:45 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 16:23:45 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 16:23:45 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 16:23:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6614bd4b]
2020-05-21 16:23:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:23:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 16:23:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:23:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:23:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 16:23:45 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:23:45 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7847ef2c]
2020-05-21 16:23:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 16:23:45 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 16:23:45 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 16:23:45 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 16:23:45 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 16:23:45 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:23:45 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:23:45 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 16:23:45 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 16:23:45 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@61a91c9b] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 16:23:45 DEBUG SQL:127 - drop table if exists movie
2020-05-21 16:23:45 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 16:23:45 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@43984213] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 16:23:45 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 16:23:45 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 16:23:45 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 16:23:45 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 16:23:45 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 16:23:45 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 16:23:45 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 16:23:45 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1d61a348
2020-05-21 16:23:45 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 2c3d6da2-f3db-49f6-9078-5adc8b2ae719 (<unnamed>)
2020-05-21 16:23:45 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 16:23:45 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 16:23:45 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 16:23:45 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4ace284d
2020-05-21 16:23:45 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 16:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:45 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 16:23:45 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 16:23:45 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 16:23:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 16:23:45 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 16:23:45 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 16:23:45 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 16:23:45 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 16:23:45 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 16:23:45 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 16:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:45 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 16:23:45 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 16:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:45 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 16:23:45 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:45 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:23:45 DEBUG TransactionImpl:81 - begin
2020-05-21 16:23:45 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 16:23:45 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 16:23:45 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 16:23:45 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 16:23:45 DEBUG TransactionImpl:98 - committing
2020-05-21 16:23:45 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 16:23:45 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 16:23:45 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 16:23:45 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 16:23:45 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 16:23:45 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 16:23:45 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:45 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:45 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 16:23:45 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 16:23:45 DEBUG Loader:384 - Result set row: 0
2020-05-21 16:23:45 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 16:23:45 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 16:23:45 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 16:23:45 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 16:23:45 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 16:23:45 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 16:23:45 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 16:23:45 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:45 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:23:45 DEBUG TransactionImpl:81 - begin
2020-05-21 16:23:45 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 16:23:45 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 16:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:45 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 16:23:45 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 16:23:45 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-21 16:23:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-21 16:23:45 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 16:23:45 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-21 16:23:45 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 16:23:45 DEBUG JoinProcessor:279 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-21 16:23:45 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 16:23:45 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-05-21 16:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:45 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 16:23:45 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 16:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 16:23:45 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 16:23:45 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:23:45 DEBUG TransactionImpl:81 - begin
2020-05-21 16:23:45 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 16:23:45 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 16:23:45 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 16:23:45 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 16:23:45 DEBUG TransactionImpl:98 - committing
2020-05-21 16:23:45 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 16:23:45 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 16:23:45 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 16:23:45 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 16:23:45 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 16:23:45 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Cinema hall - A, id=1, capacity=50}
2020-05-21 16:23:45 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:45 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 16:23:45 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 16:23:45 DEBUG TransactionImpl:81 - begin
2020-05-21 16:23:45 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 16:23:45 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 16:23:45 DEBUG Loader:384 - Result set row: 0
2020-05-21 16:23:45 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-05-21 16:23:45 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 16:23:45 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 16:23:45 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 16:23:45 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 16:23:45 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 16:23:45 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:19:00 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 17:19:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 17:19:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 17:19:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 17:19:00 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 17:19:00 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 17:19:00 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 17:19:00 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 17:19:01 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 17:19:01 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 17:19:01 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 17:19:01 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 17:19:01 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 17:19:01 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-21 17:19:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-21 17:19:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 17:19:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 17:19:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:19:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:19:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 17:19:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 17:19:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 17:19:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:19:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 17:19:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 17:19:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 17:19:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 17:19:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:19:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 17:19:01 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 17:19:01 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 17:19:01 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 17:19:01 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 17:19:01 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 17:19:01 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 17:19:01 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 17:19:01 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 17:19:01 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 17:19:01 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 17:19:01 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 17:19:01 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 17:19:01 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 17:19:01 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5eccd3b9]
2020-05-21 17:19:02 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 17:19:02 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:19:02 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 17:19:02 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 17:19:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:19:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 17:19:02 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:19:02 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:19:02 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:19:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:19:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 17:19:02 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:19:02 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:19:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 17:19:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 17:19:02 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 17:19:02 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 17:19:02 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 17:19:02 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:19:02 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 17:19:02 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 17:19:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:19:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 17:19:02 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:19:02 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:19:02 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:19:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 17:19:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 17:19:02 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 17:19:02 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 17:19:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:19:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 17:19:02 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:19:02 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:19:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:19:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:19:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 17:19:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:19:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 17:19:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:19:02 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 17:19:02 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 17:19:02 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 17:19:02 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 17:19:02 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 17:19:02 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 17:19:02 DEBUG Settings:72 - Statistics: disabled
2020-05-21 17:19:02 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 17:19:02 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 17:19:02 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 17:19:02 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 17:19:02 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 17:19:02 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 17:19:02 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 17:19:02 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 17:19:02 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 17:19:02 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 17:19:02 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 17:19:02 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 17:19:02 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 17:19:02 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 17:19:02 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 17:19:02 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 17:19:02 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 17:19:02 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 17:19:02 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 17:19:02 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 17:19:02 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 17:19:02 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 17:19:02 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 17:19:02 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 17:19:02 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 17:19:02 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 17:19:02 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 17:19:02 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 17:19:02 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 17:19:02 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 17:19:02 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 17:19:02 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 17:19:02 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 17:19:02 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 17:19:02 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@72ee5d84, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 17:19:02 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 17:19:02 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 17:19:02 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@30669dac]
2020-05-21 17:19:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:19:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:19:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:19:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:19:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:19:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:19:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:19:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:19:02 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 17:19:02 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 17:19:02 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 17:19:02 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 17:19:02 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 17:19:02 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 17:19:02 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:19:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59bbe88a]
2020-05-21 17:19:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:19:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:19:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:19:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:19:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:19:02 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:19:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a367e93]
2020-05-21 17:19:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:19:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:19:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:19:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:19:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:19:02 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:19:02 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:19:02 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:19:02 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 17:19:02 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 17:19:02 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 17:19:02 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 17:19:02 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 17:19:02 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 17:19:02 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 17:19:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d266391]
2020-05-21 17:19:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:19:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:19:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:19:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:19:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:19:02 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:19:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b5c665c]
2020-05-21 17:19:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:19:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:19:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:19:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:19:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:19:02 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:19:02 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:19:02 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:19:02 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 17:19:02 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@17092fff] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:19:02 DEBUG SQL:127 - drop table if exists movie
2020-05-21 17:19:02 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:19:02 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2ff7a73] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:19:02 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:19:02 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 17:19:02 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 17:19:02 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:19:02 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:19:02 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 17:19:02 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 17:19:02 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@78a515e4
2020-05-21 17:19:02 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: a5406656-5088-48ba-ba6e-c13bb033da75 (<unnamed>)
2020-05-21 17:19:02 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 17:19:02 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 17:19:02 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:19:02 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7cac93fe
2020-05-21 17:19:02 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:19:02 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:19:02 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:19:02 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:19:02 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 17:19:02 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 17:19:02 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:19:02 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 17:19:02 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:19:02 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 17:19:02 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:19:02 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 17:19:02 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:19:02 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:19:02 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:19:02 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:19:02 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:19:02 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:02 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:19:02 DEBUG TransactionImpl:81 - begin
2020-05-21 17:19:02 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:19:02 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 17:19:02 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:19:02 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:19:02 DEBUG TransactionImpl:98 - committing
2020-05-21 17:19:02 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:19:02 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:19:02 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:19:02 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:19:02 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:19:02 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 17:19:02 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:02 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:02 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:19:02 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:19:02 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:19:02 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 17:19:02 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 17:19:02 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 17:19:02 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:19:02 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 17:19:02 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 17:19:02 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 17:19:02 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:02 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:19:02 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:19:02 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:19:02 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:19:02 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:19:02 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-21 17:19:02 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-21 17:19:02 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:19:02 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-21 17:19:02 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:19:02 DEBUG JoinProcessor:279 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-21 17:19:02 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:19:02 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-05-21 17:19:02 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:19:02 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:19:02 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:19:02 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:19:02 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:19:02 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:02 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:19:02 DEBUG TransactionImpl:81 - begin
2020-05-21 17:19:02 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:19:02 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:19:02 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:19:02 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:19:02 DEBUG TransactionImpl:98 - committing
2020-05-21 17:19:02 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:19:02 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:19:02 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:19:02 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:19:02 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:19:02 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Cinema hall - A, id=1, capacity=50}
2020-05-21 17:19:02 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:02 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:02 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:19:02 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:19:02 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:19:02 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:19:02 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:19:02 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 17:19:02 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 17:19:02 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 17:19:02 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:19:02 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:19:02 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:02 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:19:02 DEBUG TransactionImpl:81 - begin
2020-05-21 17:19:02 DEBUG TransactionImpl:139 - rolling back
2020-05-21 17:19:02 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:02 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:14 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 17:19:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 17:19:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 17:19:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 17:19:14 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 17:19:14 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 17:19:14 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 17:19:14 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 17:19:14 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 17:19:14 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 17:19:14 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 17:19:14 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 17:19:14 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 17:19:14 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:19:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-21 17:19:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-21 17:19:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 17:19:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 17:19:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:19:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:19:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 17:19:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 17:19:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 17:19:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:19:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 17:19:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 17:19:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 17:19:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 17:19:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:19:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 17:19:15 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 17:19:15 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 17:19:15 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 17:19:15 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 17:19:15 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 17:19:15 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 17:19:15 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 17:19:15 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 17:19:15 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 17:19:15 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 17:19:15 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 17:19:15 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 17:19:15 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 17:19:15 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@64e1dd11] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5c089b2f]
2020-05-21 17:19:15 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 17:19:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:19:15 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 17:19:15 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 17:19:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:19:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 17:19:15 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:19:15 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:19:15 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:19:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:19:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 17:19:15 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:19:15 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:19:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 17:19:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 17:19:15 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 17:19:15 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 17:19:15 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 17:19:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:19:15 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 17:19:15 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 17:19:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:19:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 17:19:15 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:19:15 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:19:15 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:19:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 17:19:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 17:19:15 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 17:19:15 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 17:19:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:19:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 17:19:15 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:19:15 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:19:15 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.MovieSession
2020-05-21 17:19:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:19:15 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-21 17:19:15 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.MovieSession on table movie_session
2020-05-21 17:19:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:19:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:id]
2020-05-21 17:19:15 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:19:15 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:19:15 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:19:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:19:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:15 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-21 17:19:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:19:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:15 DEBUG PropertyBinder:266 - Building property movie
2020-05-21 17:19:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=showTime, insertable=true, updatable=true, unique=false}
2020-05-21 17:19:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property showTime with lazy=false
2020-05-21 17:19:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:showTime]
2020-05-21 17:19:15 DEBUG SimpleValueBinder:411 - building SimpleValue for showTime
2020-05-21 17:19:15 DEBUG PropertyBinder:266 - Building property showTime
2020-05-21 17:19:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:19:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:19:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 17:19:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:19:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 17:19:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:19:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:19:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for showTime
2020-05-21 17:19:15 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 17:19:15 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 17:19:15 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-21 17:19:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:19:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:19:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:19:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:19:15 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 17:19:15 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 17:19:15 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 17:19:15 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 17:19:15 DEBUG Settings:72 - Statistics: disabled
2020-05-21 17:19:15 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 17:19:15 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 17:19:15 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 17:19:15 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 17:19:15 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 17:19:15 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 17:19:15 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 17:19:15 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 17:19:15 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 17:19:15 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 17:19:15 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 17:19:15 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 17:19:15 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 17:19:15 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 17:19:15 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 17:19:15 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 17:19:15 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 17:19:15 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 17:19:15 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 17:19:15 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 17:19:15 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 17:19:15 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 17:19:15 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 17:19:15 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 17:19:15 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 17:19:15 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 17:19:15 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 17:19:15 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 17:19:15 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 17:19:15 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 17:19:15 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 17:19:15 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 17:19:15 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 17:19:15 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 17:19:15 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5f9b6ae7, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 17:19:15 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 17:19:15 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 17:19:15 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@64e1dd11] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3874b815]
2020-05-21 17:19:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:19:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:19:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:19:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:19:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:19:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:19:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:19:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:19:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:19:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:19:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:19:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:19:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24a86066]
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:19:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:19:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:19:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:19:16 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:19:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ed34ef5]
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:19:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:19:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:19:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:19:16 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:19:16 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:19:16 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 17:19:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12bbfc54]
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:19:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:19:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:19:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:19:16 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:19:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59b65dce]
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:19:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:19:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:19:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:19:16 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:19:16 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:19:16 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.MovieSession
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie_session where id =?
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaHa3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.showTime as showTime2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, showTime, id) values (?, ?, ?, ?)
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, showTime=? where id=?
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-21 17:19:16 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:19:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e922647]
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:19:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61ab89b0]
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:19:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dab01d9]
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:19:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:19:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:19:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:19:16 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:19:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e76a8d]
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:19:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dd1f638]
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:19:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b76aa5a]
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:19:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:19:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:19:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:19:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:19:16 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:19:16 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:19:16 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:19:16 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 17:19:16 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6949e948] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:19:16 DEBUG SQL:127 - drop table if exists movie
2020-05-21 17:19:16 DEBUG SQL:127 - drop table if exists movie_session
2020-05-21 17:19:16 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:19:16 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@9b76b60] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:19:16 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:19:16 DEBUG SQL:127 - create table movie_session (id bigint not null auto_increment, showTime datetime, cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=MyISAM
2020-05-21 17:19:16 DEBUG SQL:127 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-21 17:19:16 DEBUG SQL:127 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-21 17:19:16 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 17:19:16 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 17:19:16 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:19:16 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:19:16 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 17:19:16 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 17:19:16 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1eff3cfb
2020-05-21 17:19:16 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 6adad0fb-1b49-4cc2-84a2-ed33e31eb127 (<unnamed>)
2020-05-21 17:19:16 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 17:19:16 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 17:19:16 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:19:16 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3af58f76
2020-05-21 17:19:16 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:19:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:19:16 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:19:16 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:19:16 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 17:19:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 17:19:16 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:19:16 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 17:19:16 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:19:16 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 17:19:16 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:19:16 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 17:19:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:19:16 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:19:16 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:19:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:19:16 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:19:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:19:16 DEBUG TransactionImpl:81 - begin
2020-05-21 17:19:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:19:16 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 17:19:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:19:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:19:16 DEBUG TransactionImpl:98 - committing
2020-05-21 17:19:16 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:19:16 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:19:16 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:19:16 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:19:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:19:16 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 17:19:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:16 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:19:16 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:19:16 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:19:16 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 17:19:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 17:19:16 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 17:19:16 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:19:16 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 17:19:16 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 17:19:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 17:19:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:16 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:19:16 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:19:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:19:16 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:19:16 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:19:16 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-21 17:19:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-21 17:19:16 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:19:16 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-21 17:19:16 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:19:16 DEBUG JoinProcessor:279 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-21 17:19:16 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:19:16 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-05-21 17:19:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:19:16 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:19:16 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:19:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:19:16 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:19:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:19:16 DEBUG TransactionImpl:81 - begin
2020-05-21 17:19:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:19:16 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:19:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:19:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:19:16 DEBUG TransactionImpl:98 - committing
2020-05-21 17:19:16 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:19:16 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:19:16 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:19:16 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:19:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:19:16 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Cinema hall - A, id=1, capacity=50}
2020-05-21 17:19:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:16 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:19:16 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:19:16 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:19:16 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:19:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:19:16 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 17:19:16 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 17:19:16 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 17:19:16 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:19:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:19:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:19:16 DEBUG TransactionImpl:81 - begin
2020-05-21 17:19:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:19:16 DEBUG SQL:127 - insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:19:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:19:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:19:16 DEBUG TransactionImpl:98 - committing
2020-05-21 17:19:16 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:19:16 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:19:16 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:19:16 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:19:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:19:16 DEBUG EntityPrinter:117 - com.dev.cinema.model.MovieSession{cinemaHall=com.dev.cinema.model.CinemaHall#1, movie=com.dev.cinema.model.Movie#1, showTime=2020-05-22T17:19:16.820505, id=1}
2020-05-21 17:19:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:19:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:26:26 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 17:26:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 17:26:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 17:26:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 17:26:26 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 17:26:26 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 17:26:26 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 17:26:26 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 17:26:27 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 17:26:27 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 17:26:27 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 17:26:27 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 17:26:27 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 17:26:27 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-21 17:26:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-21 17:26:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 17:26:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 17:26:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:26:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:26:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 17:26:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 17:26:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 17:26:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:26:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 17:26:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 17:26:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 17:26:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 17:26:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:26:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 17:26:27 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 17:26:27 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 17:26:27 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 17:26:27 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 17:26:27 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 17:26:27 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 17:26:27 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 17:26:27 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 17:26:27 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 17:26:28 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 17:26:28 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 17:26:28 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 17:26:28 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 17:26:28 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66908383] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@41477a6d]
2020-05-21 17:26:28 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 17:26:28 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:26:28 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 17:26:28 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 17:26:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:26:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 17:26:28 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:26:28 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:26:28 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:26:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:26:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 17:26:28 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:26:28 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:26:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 17:26:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 17:26:28 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 17:26:28 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 17:26:28 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 17:26:28 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:26:28 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 17:26:28 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 17:26:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:26:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 17:26:28 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:26:28 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:26:28 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:26:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 17:26:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 17:26:28 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 17:26:28 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 17:26:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:26:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 17:26:28 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:26:28 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:26:28 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.MovieSession
2020-05-21 17:26:28 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:26:28 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-21 17:26:28 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.MovieSession on table movie_session
2020-05-21 17:26:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:26:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:id]
2020-05-21 17:26:28 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:26:28 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:26:28 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:26:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:26:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:28 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-21 17:26:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:26:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:28 DEBUG PropertyBinder:266 - Building property movie
2020-05-21 17:26:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=showTime, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property showTime with lazy=false
2020-05-21 17:26:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:showTime]
2020-05-21 17:26:28 DEBUG SimpleValueBinder:411 - building SimpleValue for showTime
2020-05-21 17:26:28 DEBUG PropertyBinder:266 - Building property showTime
2020-05-21 17:26:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:26:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:26:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 17:26:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:26:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 17:26:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:26:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:26:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for showTime
2020-05-21 17:26:28 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 17:26:28 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 17:26:28 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-21 17:26:28 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:26:28 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:26:28 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:26:28 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:26:28 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 17:26:28 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 17:26:28 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 17:26:28 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 17:26:28 DEBUG Settings:72 - Statistics: disabled
2020-05-21 17:26:28 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 17:26:28 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 17:26:28 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 17:26:28 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 17:26:28 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 17:26:28 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 17:26:28 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 17:26:28 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 17:26:28 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 17:26:28 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 17:26:28 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 17:26:28 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 17:26:28 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 17:26:28 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 17:26:28 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 17:26:28 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 17:26:28 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 17:26:28 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 17:26:28 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 17:26:28 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 17:26:28 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 17:26:28 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 17:26:28 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 17:26:28 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 17:26:28 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 17:26:28 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 17:26:28 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 17:26:28 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 17:26:28 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 17:26:28 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 17:26:28 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 17:26:28 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 17:26:28 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 17:26:28 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 17:26:28 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6bf13698, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 17:26:28 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 17:26:28 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 17:26:28 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66908383] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1816e24a]
2020-05-21 17:26:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:26:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:26:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:26:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:26:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:26:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:26:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:26:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:26:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:26:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:26:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:26:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:26:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a6f6c7e]
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:26:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:26:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:26:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:26:28 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:26:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f521c4]
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:26:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:26:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:26:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:26:28 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:26:28 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:26:28 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 17:26:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433c6abb]
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:26:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:26:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:26:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:26:28 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:26:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a22c4d8]
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:26:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:26:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:26:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:26:28 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:26:28 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:26:28 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.MovieSession
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie_session where id =?
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaHa3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.showTime as showTime2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, showTime, id) values (?, ?, ?, ?)
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, showTime=? where id=?
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-21 17:26:28 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:26:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6504a875]
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:26:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd64b3f]
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:26:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e76a8d]
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:26:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:26:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:26:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:26:28 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:26:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a28987]
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:26:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38c9e0d6]
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:26:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@310aee0b]
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:26:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:26:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:26:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:26:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:26:28 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:26:28 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:26:28 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:26:28 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 17:26:28 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2e3572e8] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:26:28 DEBUG SQL:127 - drop table if exists movie
2020-05-21 17:26:28 DEBUG SQL:127 - drop table if exists movie_session
2020-05-21 17:26:28 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:26:28 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@62b790a5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:26:28 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:26:28 DEBUG SQL:127 - create table movie_session (id bigint not null auto_increment, showTime datetime, cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=MyISAM
2020-05-21 17:26:28 DEBUG SQL:127 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-21 17:26:28 DEBUG SQL:127 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-21 17:26:29 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 17:26:29 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 17:26:29 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:26:29 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:26:29 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 17:26:29 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 17:26:29 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@56382bc9
2020-05-21 17:26:29 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 3dd59ca9-982c-49ba-b2ba-be46ea61b705 (<unnamed>)
2020-05-21 17:26:29 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 17:26:29 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 17:26:29 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:26:29 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6a1ef65c
2020-05-21 17:26:29 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:26:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:26:29 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:26:29 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:26:29 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 17:26:29 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 17:26:29 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:26:29 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 17:26:29 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:26:29 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 17:26:29 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:26:29 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 17:26:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:26:29 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:26:29 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:26:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:26:29 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:26:29 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:26:29 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:26:29 DEBUG TransactionImpl:81 - begin
2020-05-21 17:26:29 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:26:29 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 17:26:29 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:26:29 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:26:29 DEBUG TransactionImpl:98 - committing
2020-05-21 17:26:29 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:26:29 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:26:29 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:26:29 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:26:29 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:26:29 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 17:26:29 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:26:29 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:26:29 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:26:29 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:26:29 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:26:29 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 17:26:29 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 17:26:29 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 17:26:29 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:26:29 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 17:26:29 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 17:26:29 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 17:26:29 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:26:29 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:26:29 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:26:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:26:29 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:26:29 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:26:29 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-21 17:26:29 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-21 17:26:29 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:26:29 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-21 17:26:29 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:26:29 DEBUG JoinProcessor:279 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-21 17:26:29 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:26:29 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-05-21 17:26:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:26:29 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:26:29 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:26:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:26:29 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:26:29 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:26:29 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:26:29 DEBUG TransactionImpl:81 - begin
2020-05-21 17:26:29 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:26:29 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:26:29 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:26:29 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:26:29 DEBUG TransactionImpl:98 - committing
2020-05-21 17:26:29 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:26:29 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:26:29 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:26:29 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:26:29 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:26:29 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Cinema hall - A, id=1, capacity=50}
2020-05-21 17:26:29 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:26:29 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:26:29 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:26:29 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:26:29 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:26:29 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:26:29 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:26:29 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 17:26:29 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 17:26:29 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 17:26:29 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:26:29 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:26:29 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:26:29 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:26:29 DEBUG TransactionImpl:81 - begin
2020-05-21 17:26:29 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:26:29 DEBUG SQL:127 - insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:26:29 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:26:29 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:26:29 DEBUG TransactionImpl:98 - committing
2020-05-21 17:26:29 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:26:29 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:26:29 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:26:29 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:26:29 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:26:29 DEBUG EntityPrinter:117 - com.dev.cinema.model.MovieSession{cinemaHall=com.dev.cinema.model.CinemaHall#1, movie=com.dev.cinema.model.Movie#1, showTime=2020-05-22T17:26:29.313825, id=1}
2020-05-21 17:26:29 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:26:29 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:26:58 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 17:26:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 17:26:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 17:26:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 17:26:58 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 17:26:58 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 17:26:58 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 17:26:58 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 17:26:58 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 17:26:58 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 17:26:58 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 17:26:58 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 17:26:58 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 17:26:58 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:26:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-21 17:26:59 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-21 17:26:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 17:26:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 17:26:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:26:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:26:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 17:26:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 17:26:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 17:26:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:26:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 17:26:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 17:26:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 17:26:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 17:26:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:26:59 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 17:26:59 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 17:26:59 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 17:26:59 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 17:26:59 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 17:26:59 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 17:26:59 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 17:26:59 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 17:26:59 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 17:26:59 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 17:26:59 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 17:26:59 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 17:26:59 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 17:26:59 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 17:26:59 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66908383] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@41477a6d]
2020-05-21 17:26:59 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 17:26:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:26:59 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 17:26:59 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 17:26:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:26:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 17:26:59 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:26:59 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:26:59 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:26:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:26:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 17:26:59 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:26:59 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:26:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 17:26:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 17:26:59 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 17:26:59 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 17:26:59 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 17:26:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:26:59 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 17:26:59 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 17:26:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:26:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 17:26:59 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:26:59 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:26:59 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:26:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 17:26:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 17:26:59 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 17:26:59 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 17:26:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:26:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 17:26:59 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:26:59 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:26:59 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.MovieSession
2020-05-21 17:26:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:26:59 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-21 17:26:59 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.MovieSession on table movie_session
2020-05-21 17:26:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:26:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:id]
2020-05-21 17:26:59 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:26:59 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:26:59 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:26:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:26:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:59 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-21 17:26:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:26:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:59 DEBUG PropertyBinder:266 - Building property movie
2020-05-21 17:26:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=showTime, insertable=true, updatable=true, unique=false}
2020-05-21 17:26:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property showTime with lazy=false
2020-05-21 17:26:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:showTime]
2020-05-21 17:26:59 DEBUG SimpleValueBinder:411 - building SimpleValue for showTime
2020-05-21 17:26:59 DEBUG PropertyBinder:266 - Building property showTime
2020-05-21 17:26:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:26:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:26:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 17:26:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:26:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 17:26:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:26:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:26:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for showTime
2020-05-21 17:26:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 17:26:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 17:26:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-21 17:26:59 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:26:59 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:26:59 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:26:59 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:26:59 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 17:26:59 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 17:26:59 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 17:26:59 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 17:26:59 DEBUG Settings:72 - Statistics: disabled
2020-05-21 17:26:59 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 17:26:59 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 17:26:59 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 17:26:59 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 17:26:59 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 17:26:59 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 17:26:59 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 17:26:59 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 17:26:59 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 17:26:59 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 17:26:59 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 17:26:59 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 17:26:59 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 17:26:59 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 17:26:59 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 17:26:59 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 17:26:59 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 17:26:59 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 17:26:59 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 17:26:59 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 17:26:59 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 17:26:59 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 17:26:59 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 17:26:59 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 17:26:59 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 17:26:59 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 17:26:59 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 17:26:59 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 17:26:59 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 17:26:59 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 17:26:59 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 17:26:59 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 17:26:59 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 17:26:59 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 17:26:59 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6bf13698, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 17:26:59 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 17:26:59 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 17:26:59 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66908383] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1816e24a]
2020-05-21 17:27:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:27:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:27:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:27:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:27:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:27:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:27:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:27:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:27:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:27:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:27:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:27:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:27:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a6f6c7e]
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:27:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:27:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:27:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:27:00 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:27:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f521c4]
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:27:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:27:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:27:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:27:00 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:27:00 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:27:00 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 17:27:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433c6abb]
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:27:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:27:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:27:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:27:00 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:27:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a22c4d8]
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:27:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:27:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:27:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:27:00 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:27:00 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:27:00 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.MovieSession
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie_session where id =?
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaHa3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.showTime as showTime2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, showTime, id) values (?, ?, ?, ?)
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, showTime=? where id=?
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-21 17:27:00 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:27:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6504a875]
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:27:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd64b3f]
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:27:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e76a8d]
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:27:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:27:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:27:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:27:00 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:27:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a28987]
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:27:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38c9e0d6]
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:27:00 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@310aee0b]
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:27:00 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:27:00 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:27:00 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:27:00 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:27:00 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:27:00 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:27:00 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:27:00 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 17:27:00 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2e3572e8] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:27:00 DEBUG SQL:127 - drop table if exists movie
2020-05-21 17:27:00 DEBUG SQL:127 - drop table if exists movie_session
2020-05-21 17:27:00 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:27:00 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@62b790a5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:27:00 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:27:00 DEBUG SQL:127 - create table movie_session (id bigint not null auto_increment, showTime datetime, cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=MyISAM
2020-05-21 17:27:00 DEBUG SQL:127 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-21 17:27:00 DEBUG SQL:127 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-21 17:27:00 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 17:27:00 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 17:27:00 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:27:00 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:27:00 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 17:27:00 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 17:27:00 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@56382bc9
2020-05-21 17:27:00 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 0c13f4da-1c6a-4ae4-9815-9addb5d4eeaf (<unnamed>)
2020-05-21 17:27:00 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 17:27:00 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 17:27:00 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:27:00 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6a1ef65c
2020-05-21 17:27:00 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:27:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:27:00 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:27:00 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:27:00 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 17:27:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 17:27:00 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:27:00 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 17:27:00 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:27:00 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 17:27:00 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:27:00 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 17:27:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:27:00 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:27:00 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:27:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:27:00 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:27:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:27:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:27:00 DEBUG TransactionImpl:81 - begin
2020-05-21 17:27:00 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:27:00 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 17:27:00 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:27:00 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:27:00 DEBUG TransactionImpl:98 - committing
2020-05-21 17:27:00 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:27:00 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:27:00 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:27:00 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:27:01 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:27:01 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 17:27:01 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:27:01 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:27:01 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:27:01 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:27:01 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:27:01 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 17:27:01 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 17:27:01 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 17:27:01 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:27:01 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 17:27:01 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 17:27:01 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 17:27:01 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:27:01 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:27:01 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:27:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:27:01 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:27:01 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:27:01 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-21 17:27:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-21 17:27:01 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:27:01 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-21 17:27:01 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:27:01 DEBUG JoinProcessor:279 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-21 17:27:01 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:27:01 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-05-21 17:27:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:27:01 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:27:01 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:27:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:27:01 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:27:01 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:27:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:27:01 DEBUG TransactionImpl:81 - begin
2020-05-21 17:27:01 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:27:01 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:27:01 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:27:01 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:27:01 DEBUG TransactionImpl:98 - committing
2020-05-21 17:27:01 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:27:01 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:27:01 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:27:01 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:27:01 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:27:01 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Cinema hall - A, id=1, capacity=50}
2020-05-21 17:27:01 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:27:01 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:27:01 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:27:01 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:27:01 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:27:01 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:27:01 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:27:01 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 17:27:01 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 17:27:01 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 17:27:01 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:27:01 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:27:01 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:27:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:27:01 DEBUG TransactionImpl:81 - begin
2020-05-21 17:27:01 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:27:01 DEBUG SQL:127 - insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:27:01 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:27:01 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:27:01 DEBUG TransactionImpl:98 - committing
2020-05-21 17:27:01 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:27:01 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:27:01 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:27:01 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:27:01 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:27:01 DEBUG EntityPrinter:117 - com.dev.cinema.model.MovieSession{cinemaHall=com.dev.cinema.model.CinemaHall#1, movie=com.dev.cinema.model.Movie#1, showTime=2020-05-22T17:27:01.055231, id=1}
2020-05-21 17:27:01 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:27:01 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:27:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:34:02 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 17:34:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 17:34:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 17:34:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 17:34:02 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 17:34:02 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 17:34:02 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 17:34:03 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 17:34:04 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 17:34:04 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 17:34:04 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 17:34:04 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 17:34:04 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 17:34:04 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-21 17:34:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-21 17:34:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 17:34:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 17:34:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:34:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:34:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 17:34:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 17:34:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 17:34:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:34:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 17:34:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 17:34:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 17:34:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 17:34:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:34:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 17:34:04 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 17:34:04 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 17:34:04 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 17:34:04 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 17:34:04 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 17:34:04 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 17:34:04 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 17:34:04 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 17:34:04 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 17:34:04 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 17:34:04 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 17:34:04 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 17:34:04 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 17:34:04 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5eccd3b9]
2020-05-21 17:34:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 17:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:34:04 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 17:34:04 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 17:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 17:34:04 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:34:04 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:34:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 17:34:04 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:34:04 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 17:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 17:34:04 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 17:34:04 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 17:34:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 17:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:34:04 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 17:34:04 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 17:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 17:34:04 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:34:04 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:34:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 17:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 17:34:04 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 17:34:04 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 17:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 17:34:04 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:34:04 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:34:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.MovieSession
2020-05-21 17:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:34:04 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-21 17:34:04 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.MovieSession on table movie_session
2020-05-21 17:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:id]
2020-05-21 17:34:04 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:34:04 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:34:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:04 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-21 17:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:04 DEBUG PropertyBinder:266 - Building property movie
2020-05-21 17:34:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=showTime, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property showTime with lazy=false
2020-05-21 17:34:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:showTime]
2020-05-21 17:34:04 DEBUG SimpleValueBinder:411 - building SimpleValue for showTime
2020-05-21 17:34:04 DEBUG PropertyBinder:266 - Building property showTime
2020-05-21 17:34:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:34:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:34:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 17:34:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:34:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 17:34:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:34:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:34:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for showTime
2020-05-21 17:34:04 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 17:34:04 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 17:34:04 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-21 17:34:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:34:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:34:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:34:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:34:04 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 17:34:04 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 17:34:04 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 17:34:04 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 17:34:04 DEBUG Settings:72 - Statistics: disabled
2020-05-21 17:34:04 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 17:34:04 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 17:34:04 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 17:34:04 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 17:34:04 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 17:34:04 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 17:34:04 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 17:34:04 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 17:34:04 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 17:34:04 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 17:34:04 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 17:34:04 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 17:34:04 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 17:34:04 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 17:34:04 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 17:34:04 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 17:34:04 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 17:34:04 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 17:34:04 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 17:34:04 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 17:34:04 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 17:34:04 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 17:34:04 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 17:34:04 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 17:34:04 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 17:34:04 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 17:34:04 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 17:34:04 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 17:34:04 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 17:34:04 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 17:34:04 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 17:34:04 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 17:34:04 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 17:34:04 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 17:34:04 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@70e13fa, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 17:34:04 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 17:34:04 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 17:34:04 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1fba386c]
2020-05-21 17:34:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:34:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:34:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:34:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:34:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:34:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:34:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:34:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:34:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:34:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:34:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:34:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:34:04 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 17:34:04 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 17:34:04 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 17:34:04 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 17:34:04 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 17:34:04 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 17:34:04 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:34:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17461db]
2020-05-21 17:34:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:34:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:34:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:34:04 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:34:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24d61e4]
2020-05-21 17:34:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:34:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:34:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:34:04 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:34:05 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:34:05 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:34:05 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 17:34:05 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 17:34:05 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 17:34:05 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 17:34:05 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 17:34:05 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 17:34:05 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 17:34:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fbe155]
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:34:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:34:05 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:34:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58a2b917]
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:34:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:34:05 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:34:05 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:34:05 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:34:05 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.MovieSession
2020-05-21 17:34:05 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie_session where id =?
2020-05-21 17:34:05 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaHa3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.showTime as showTime2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-21 17:34:05 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, showTime, id) values (?, ?, ?, ?)
2020-05-21 17:34:05 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, showTime=? where id=?
2020-05-21 17:34:05 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-21 17:34:05 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:34:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12bbfc54]
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:34:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6015a4a5]
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:34:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14f40030]
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:34:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:34:05 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:34:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e09c51]
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:34:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f3166a]
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:34:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e76a8d]
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:34:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:34:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:34:05 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:34:05 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:34:05 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:34:05 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 17:34:05 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3c854752] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:34:05 DEBUG SQL:127 - drop table if exists movie
2020-05-21 17:34:05 DEBUG SQL:127 - drop table if exists movie_session
2020-05-21 17:34:05 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:34:05 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@eb6ec6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:34:05 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:34:05 DEBUG SQL:127 - create table movie_session (id bigint not null auto_increment, showTime datetime, cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=MyISAM
2020-05-21 17:34:05 DEBUG SQL:127 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-21 17:34:05 DEBUG SQL:127 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-21 17:34:05 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 17:34:05 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 17:34:05 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:34:05 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:34:05 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 17:34:05 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 17:34:05 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@57545c3f
2020-05-21 17:34:05 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: d092c35a-64e5-48d9-9a61-8754158f0a7d (<unnamed>)
2020-05-21 17:34:05 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 17:34:05 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 17:34:05 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:34:05 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@28a9494b
2020-05-21 17:34:05 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:34:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:34:05 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:34:05 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:34:05 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 17:34:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 17:34:05 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:34:05 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 17:34:05 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:34:05 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 17:34:05 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:34:05 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 17:34:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:34:05 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:34:05 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:34:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:34:05 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:34:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:34:05 DEBUG TransactionImpl:81 - begin
2020-05-21 17:34:05 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:34:05 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 17:34:05 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:34:05 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:34:05 DEBUG TransactionImpl:98 - committing
2020-05-21 17:34:05 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:34:05 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:34:05 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:34:05 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:34:05 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:34:05 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 17:34:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:05 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:34:05 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:34:05 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:34:05 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 17:34:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 17:34:05 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 17:34:05 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:34:05 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 17:34:05 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 17:34:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 17:34:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:05 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:34:05 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:34:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:34:05 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:34:05 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:34:05 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-21 17:34:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-21 17:34:05 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:34:05 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-21 17:34:05 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:34:05 DEBUG JoinProcessor:279 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-21 17:34:05 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:34:05 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-05-21 17:34:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:34:05 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:34:05 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:34:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:34:05 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:34:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:34:05 DEBUG TransactionImpl:81 - begin
2020-05-21 17:34:05 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:34:05 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:34:05 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:34:05 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:34:05 DEBUG TransactionImpl:98 - committing
2020-05-21 17:34:05 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:34:05 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:34:05 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:34:05 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:34:05 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:34:05 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Cinema hall - A, id=1, capacity=50}
2020-05-21 17:34:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:05 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:34:05 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:34:05 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:34:05 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:34:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:34:05 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 17:34:05 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 17:34:05 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 17:34:05 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:34:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:34:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:34:05 DEBUG TransactionImpl:81 - begin
2020-05-21 17:34:05 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:34:05 DEBUG SQL:127 - insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:34:05 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:34:05 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:34:05 DEBUG TransactionImpl:98 - committing
2020-05-21 17:34:05 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:34:05 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:34:05 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:34:05 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:34:05 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:34:05 DEBUG EntityPrinter:117 - com.dev.cinema.model.MovieSession{cinemaHall=com.dev.cinema.model.CinemaHall#1, movie=com.dev.cinema.model.Movie#1, showTime=2020-05-22T17:34:05.666111, id=1}
2020-05-21 17:34:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:34:17 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 17:34:17 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 17:34:17 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 17:34:17 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 17:34:17 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 17:34:17 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 17:34:17 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 17:34:17 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 17:34:18 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 17:34:18 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 17:34:18 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 17:34:18 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 17:34:18 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 17:34:18 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d64e326
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d64e326
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d64e326
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fe1ce85
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@57abad67
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@584f54e6
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55dfebeb
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55dfebeb
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55dfebeb
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@1d3ac898
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@1d3ac898
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d3ac898
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@6ad59d92
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@6ad59d92
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6ad59d92
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@63dd899
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@63dd899
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63dd899
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@34cdeda2
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@34cdeda2
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@34cdeda2
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@4b41e4dd
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@4b41e4dd
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b41e4dd
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@66746f57
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@66746f57
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@66746f57
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@767e20cf
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@767e20cf
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@52066604
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@52066604
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@189aa67a
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@189aa67a
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5ccbeb64
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3243b914
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@3b00856b
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b00856b
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@1338fb5
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1338fb5
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@1b765a2c
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1b765a2c
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2c5529ab
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2c5529ab
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2002348
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2002348
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@47f4e407
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@47f4e407
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@57ea113a
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@57ea113a
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2072acb2
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2072acb2
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6622fc65
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6622fc65
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@71cf1b07
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@71cf1b07
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@61e94def
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@61e94def
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7cbc3762
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7cbc3762
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7cbc3762
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b2a01d4
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@44e3a2b2
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@44e3a2b2
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@44e3a2b2
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@65fe9e33
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@180da663
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@180da663
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4d722ac9
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4d722ac9
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7e5d9a50
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7e5d9a50
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@784c3487
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@784c3487
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@61c9c3fd
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@61c9c3fd
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@302a07d
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@708400f6
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@708400f6
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@708400f6
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3cc41abc
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3cc41abc
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3cc41abc
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4c2cc639
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@2a5b3fee
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@119020fb
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@119020fb
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@119020fb
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@655ef322
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@655ef322
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@655ef322
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@4233e892
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@555cf22
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@6b98a075
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b98a075
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e84a8e1
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@23d1e5d0
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@23d1e5d0
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@aafcffa
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@aafcffa
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5f7b97da
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@395b56bb
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@7ac2e39b
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@1af687fe
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1af687fe
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a411614
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2374d36a
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54d18072
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1506f20f
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@47a5b70d
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@424fd310
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a45193b
2020-05-21 17:34:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@38f116f6
2020-05-21 17:34:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 17:34:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 17:34:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:34:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:34:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 17:34:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 17:34:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 17:34:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:34:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 17:34:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 17:34:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 17:34:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 17:34:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:34:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 17:34:18 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 17:34:18 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 17:34:18 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 17:34:18 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 17:34:18 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 17:34:18 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 17:34:18 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 17:34:18 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 17:34:18 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 17:34:18 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 17:34:18 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 17:34:18 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 17:34:18 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 17:34:18 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b18c4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4cbf4f53]
2020-05-21 17:34:18 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 17:34:18 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:34:18 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 17:34:18 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 17:34:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:34:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 17:34:18 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:34:18 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:34:18 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:34:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:34:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 17:34:18 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:34:18 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:34:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 17:34:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 17:34:18 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 17:34:18 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 17:34:18 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 17:34:18 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:34:18 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 17:34:18 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 17:34:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:34:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 17:34:18 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:34:18 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:34:18 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:34:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 17:34:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 17:34:18 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 17:34:18 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 17:34:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:34:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 17:34:18 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:34:18 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:34:18 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.MovieSession
2020-05-21 17:34:18 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:34:18 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-21 17:34:18 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.MovieSession on table movie_session
2020-05-21 17:34:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:34:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:id]
2020-05-21 17:34:18 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:34:18 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:34:18 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:34:18 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:34:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:18 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-21 17:34:18 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:34:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:18 DEBUG PropertyBinder:266 - Building property movie
2020-05-21 17:34:18 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=showTime, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:18 DEBUG PropertyBinder:175 - MetadataSourceProcessor property showTime with lazy=false
2020-05-21 17:34:18 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:showTime]
2020-05-21 17:34:18 DEBUG SimpleValueBinder:411 - building SimpleValue for showTime
2020-05-21 17:34:18 DEBUG PropertyBinder:266 - Building property showTime
2020-05-21 17:34:18 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:34:18 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:34:18 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 17:34:18 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:34:18 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 17:34:18 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:34:18 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:34:18 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for showTime
2020-05-21 17:34:18 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 17:34:18 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 17:34:18 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-21 17:34:18 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:34:18 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:34:18 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:34:18 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:34:18 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 17:34:18 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 17:34:18 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 17:34:18 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 17:34:18 DEBUG Settings:72 - Statistics: disabled
2020-05-21 17:34:18 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 17:34:18 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 17:34:18 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 17:34:18 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 17:34:18 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 17:34:18 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 17:34:18 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 17:34:18 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 17:34:18 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 17:34:18 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 17:34:18 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 17:34:18 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 17:34:18 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 17:34:18 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 17:34:18 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 17:34:18 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 17:34:18 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 17:34:18 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 17:34:18 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 17:34:18 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 17:34:18 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 17:34:18 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 17:34:18 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 17:34:18 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 17:34:18 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 17:34:18 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 17:34:18 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 17:34:18 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 17:34:18 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 17:34:18 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 17:34:18 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 17:34:18 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 17:34:18 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 17:34:18 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 17:34:18 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/vladyslav/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/193.6911.18/lib/idea_rt.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@636bbbbb, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 17:34:19 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 17:34:19 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 17:34:19 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b18c4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@212dfd39]
2020-05-21 17:34:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:34:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:34:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:34:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:34:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:34:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:34:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:34:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:34:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:34:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:34:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:34:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:34:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76e9f00b]
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:34:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:34:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:34:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@228bda54]
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:34:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:34:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:34:19 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:34:19 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 17:34:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c663eaf]
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:34:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:34:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:34:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e692555]
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:34:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:34:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:34:19 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:34:19 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.MovieSession
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie_session where id =?
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaHa3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.showTime as showTime2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, showTime, id) values (?, ?, ?, ?)
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, showTime=? where id=?
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-21 17:34:19 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:34:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76fe6cdc]
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:34:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63300c4b]
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:34:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7209ffb5]
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:34:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:34:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:34:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6807a356]
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:34:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73aeef7d]
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:34:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58af5076]
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:34:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:34:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:34:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:34:19 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:34:19 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:34:19 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 17:34:19 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@46e190ed] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:34:19 DEBUG SQL:127 - drop table if exists movie
2020-05-21 17:34:19 DEBUG SQL:127 - drop table if exists movie_session
2020-05-21 17:34:19 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:34:19 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@47f04e4d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:34:19 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:34:19 DEBUG SQL:127 - create table movie_session (id bigint not null auto_increment, showTime datetime, cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=MyISAM
2020-05-21 17:34:19 DEBUG SQL:127 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-21 17:34:19 DEBUG SQL:127 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-21 17:34:19 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 17:34:19 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 17:34:19 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:34:19 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:34:19 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 17:34:19 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 17:34:19 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@40113163
2020-05-21 17:34:19 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 5c93d967-5e0d-4f31-87d3-d894fc419219 (<unnamed>)
2020-05-21 17:34:19 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 17:34:19 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 17:34:19 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:34:19 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5a90265a
2020-05-21 17:34:19 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:34:19 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:34:19 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:34:19 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:34:19 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 17:34:19 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 17:34:19 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:34:19 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 17:34:19 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:34:19 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 17:34:19 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:34:19 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 17:34:19 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:34:19 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:34:19 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:34:19 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:34:19 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:34:19 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:25 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:34:25 DEBUG TransactionImpl:81 - begin
2020-05-21 17:34:25 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:34:25 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 17:34:25 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:34:25 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:34:36 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 17:34:36 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 17:34:36 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 17:34:36 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 17:34:36 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 17:34:36 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 17:34:36 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 17:34:36 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 17:34:37 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 17:34:37 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 17:34:37 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 17:34:37 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 17:34:37 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 17:34:37 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d64e326
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d64e326
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d64e326
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5fe1ce85
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@57abad67
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@584f54e6
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55dfebeb
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@55dfebeb
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55dfebeb
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@1d3ac898
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@1d3ac898
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d3ac898
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@6ad59d92
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@6ad59d92
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6ad59d92
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@63dd899
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@63dd899
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@63dd899
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@34cdeda2
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@34cdeda2
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@34cdeda2
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@4b41e4dd
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@4b41e4dd
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b41e4dd
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@66746f57
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@66746f57
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@66746f57
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@767e20cf
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@767e20cf
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@52066604
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@52066604
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@189aa67a
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@189aa67a
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5ccbeb64
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3243b914
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@3b00856b
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b00856b
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@1338fb5
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1338fb5
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@1b765a2c
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1b765a2c
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2c5529ab
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2c5529ab
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2002348
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2002348
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@47f4e407
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@47f4e407
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@57ea113a
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@57ea113a
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2072acb2
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2072acb2
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6622fc65
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6622fc65
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@71cf1b07
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@71cf1b07
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@61e94def
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@61e94def
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7cbc3762
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7cbc3762
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7cbc3762
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b2a01d4
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@44e3a2b2
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@44e3a2b2
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@44e3a2b2
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@65fe9e33
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@180da663
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@180da663
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4d722ac9
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4d722ac9
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7e5d9a50
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7e5d9a50
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@784c3487
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@784c3487
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@61c9c3fd
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@61c9c3fd
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@302a07d
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@708400f6
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@708400f6
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@708400f6
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3cc41abc
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3cc41abc
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3cc41abc
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4c2cc639
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@2a5b3fee
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@119020fb
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@119020fb
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@119020fb
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@655ef322
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@655ef322
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@655ef322
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@4233e892
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@555cf22
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@6b98a075
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b98a075
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e84a8e1
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@23d1e5d0
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@23d1e5d0
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@aafcffa
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@aafcffa
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5f7b97da
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@395b56bb
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@7ac2e39b
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@1af687fe
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1af687fe
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a411614
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2374d36a
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54d18072
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1506f20f
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@47a5b70d
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@424fd310
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a45193b
2020-05-21 17:34:37 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@38f116f6
2020-05-21 17:34:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 17:34:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 17:34:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:34:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:34:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 17:34:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 17:34:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 17:34:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:34:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 17:34:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 17:34:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 17:34:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 17:34:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:34:37 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 17:34:37 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 17:34:37 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 17:34:37 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 17:34:37 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 17:34:37 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 17:34:37 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 17:34:38 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 17:34:38 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 17:34:38 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 17:34:38 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 17:34:38 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 17:34:38 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 17:34:38 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 17:34:38 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f63e3c7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@59532566]
2020-05-21 17:34:38 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 17:34:38 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:34:38 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 17:34:38 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 17:34:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:34:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 17:34:38 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:34:38 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:34:38 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:34:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:34:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 17:34:38 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:34:38 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:34:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 17:34:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 17:34:38 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 17:34:38 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 17:34:38 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 17:34:38 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:34:38 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 17:34:38 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 17:34:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:34:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 17:34:38 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:34:38 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:34:38 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:34:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 17:34:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 17:34:38 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 17:34:38 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 17:34:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:34:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 17:34:38 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:34:38 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:34:38 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.MovieSession
2020-05-21 17:34:38 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:34:38 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-21 17:34:38 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.MovieSession on table movie_session
2020-05-21 17:34:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:34:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:id]
2020-05-21 17:34:38 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:34:38 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:34:38 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:34:38 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:34:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:38 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-21 17:34:38 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:34:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:38 DEBUG PropertyBinder:266 - Building property movie
2020-05-21 17:34:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=showTime, insertable=true, updatable=true, unique=false}
2020-05-21 17:34:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property showTime with lazy=false
2020-05-21 17:34:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:showTime]
2020-05-21 17:34:38 DEBUG SimpleValueBinder:411 - building SimpleValue for showTime
2020-05-21 17:34:38 DEBUG PropertyBinder:266 - Building property showTime
2020-05-21 17:34:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:34:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:34:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 17:34:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:34:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 17:34:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:34:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:34:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for showTime
2020-05-21 17:34:38 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 17:34:38 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 17:34:38 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-21 17:34:38 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:34:38 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:34:38 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:34:38 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:34:38 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 17:34:38 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 17:34:38 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 17:34:38 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 17:34:38 DEBUG Settings:72 - Statistics: disabled
2020-05-21 17:34:38 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 17:34:38 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 17:34:38 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 17:34:38 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 17:34:38 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 17:34:38 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 17:34:38 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 17:34:38 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 17:34:38 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 17:34:38 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 17:34:38 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 17:34:38 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 17:34:38 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 17:34:38 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 17:34:38 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 17:34:38 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 17:34:38 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 17:34:38 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 17:34:38 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 17:34:38 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 17:34:38 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 17:34:38 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 17:34:38 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 17:34:38 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 17:34:38 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 17:34:38 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 17:34:38 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 17:34:38 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 17:34:38 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 17:34:38 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 17:34:38 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 17:34:38 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 17:34:38 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 17:34:38 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 17:34:38 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/vladyslav/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/193.6911.18/lib/idea_rt.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, jboss.modules.system.pkgs=com.intellij.rt, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@56afdf9a, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 17:34:38 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 17:34:38 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 17:34:38 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f63e3c7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5d7ca698]
2020-05-21 17:34:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:34:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:34:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:34:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:34:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:34:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:34:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:34:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:34:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:34:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:34:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:34:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74d6736]
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:34:38 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a481728]
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:34:38 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:34:38 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:34:38 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 17:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d0be7ab]
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:34:38 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ef60295]
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:34:38 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:34:38 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:34:38 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.MovieSession
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie_session where id =?
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaHa3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.showTime as showTime2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, showTime, id) values (?, ?, ?, ?)
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, showTime=? where id=?
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-21 17:34:38 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3234474]
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fd987ef]
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67022ea]
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:34:38 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fbf088b]
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d70f722]
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@798256c5]
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:34:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:34:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:34:38 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:34:38 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:34:38 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:34:38 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 17:34:38 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@dab1f89] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:34:38 DEBUG SQL:127 - drop table if exists movie
2020-05-21 17:34:38 DEBUG SQL:127 - drop table if exists movie_session
2020-05-21 17:34:38 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:34:38 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@568750b7] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:34:38 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:34:38 DEBUG SQL:127 - create table movie_session (id bigint not null auto_increment, showTime datetime, cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=MyISAM
2020-05-21 17:34:39 DEBUG SQL:127 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-21 17:34:39 DEBUG SQL:127 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-21 17:34:39 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 17:34:39 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 17:34:39 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:34:39 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:34:39 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 17:34:39 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 17:34:39 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4087c7fc
2020-05-21 17:34:39 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 3c264e9f-452e-4222-9775-72a308096989 (<unnamed>)
2020-05-21 17:34:39 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 17:34:39 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 17:34:39 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:34:39 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@72543547
2020-05-21 17:34:39 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:34:39 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:34:39 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:34:39 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:34:39 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 17:34:39 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 17:34:39 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:34:39 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 17:34:39 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:34:39 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 17:34:39 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:34:39 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 17:34:39 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:34:39 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:34:39 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:34:39 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:34:39 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:34:39 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:39 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:34:39 DEBUG TransactionImpl:81 - begin
2020-05-21 17:34:39 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:34:39 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 17:34:39 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:34:39 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:34:39 DEBUG TransactionImpl:98 - committing
2020-05-21 17:34:39 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:34:39 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:34:39 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:34:39 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:34:39 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:34:39 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 17:34:39 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:39 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:39 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:34:39 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:34:39 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:34:39 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 17:34:39 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 17:34:39 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 17:34:39 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:34:39 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 17:34:39 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 17:34:39 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 17:34:39 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:39 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:34:39 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:34:39 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:34:39 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:34:39 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:34:39 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-21 17:34:39 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-21 17:34:39 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:34:39 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-21 17:34:39 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:34:39 DEBUG JoinProcessor:279 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-21 17:34:39 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:34:39 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-05-21 17:34:39 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:34:39 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:34:39 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:34:39 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:34:39 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:34:39 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:39 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:34:39 DEBUG TransactionImpl:81 - begin
2020-05-21 17:34:39 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:34:39 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:34:39 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:34:39 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:34:39 DEBUG TransactionImpl:98 - committing
2020-05-21 17:34:39 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:34:39 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:34:39 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:34:39 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:34:39 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:34:39 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Cinema hall - A, id=1, capacity=50}
2020-05-21 17:34:39 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:39 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:39 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:34:39 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:34:39 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:34:39 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:34:39 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:34:39 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 17:34:39 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 17:34:39 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 17:34:39 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:34:39 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:34:39 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:39 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:34:39 DEBUG TransactionImpl:81 - begin
2020-05-21 17:34:39 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:34:39 DEBUG SQL:127 - insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:34:39 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:34:39 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:34:39 DEBUG TransactionImpl:98 - committing
2020-05-21 17:34:39 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:34:39 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:34:39 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:34:39 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:34:39 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:34:39 DEBUG EntityPrinter:117 - com.dev.cinema.model.MovieSession{cinemaHall=com.dev.cinema.model.CinemaHall#1, movie=com.dev.cinema.model.Movie#1, showTime=2020-05-22T17:34:39.452462, id=1}
2020-05-21 17:34:39 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:34:39 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:35:27 DEBUG DriverManagerConnectionProviderImpl:249 - Connection pool now considered primed; min-size will be maintained
2020-05-21 17:35:29 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 17:35:29 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 17:35:29 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 17:35:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 17:35:30 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 17:35:30 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 17:35:30 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 17:35:30 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 17:35:30 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 17:35:30 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 17:35:30 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 17:35:30 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 17:35:30 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 17:35:30 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-21 17:35:30 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-21 17:35:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-21 17:35:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 17:35:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 17:35:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:35:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:35:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 17:35:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 17:35:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 17:35:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:35:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 17:35:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 17:35:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 17:35:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 17:35:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:35:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 17:35:31 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 17:35:31 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 17:35:31 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 17:35:31 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 17:35:31 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 17:35:31 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 17:35:31 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 17:35:31 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 17:35:31 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 17:35:31 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 17:35:31 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 17:35:31 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 17:35:31 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 17:35:31 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c089b2f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6999cd39]
2020-05-21 17:35:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 17:35:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:35:31 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 17:35:31 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 17:35:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:35:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:35:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 17:35:31 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:35:31 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:35:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:35:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:35:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:35:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 17:35:31 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:35:31 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:35:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 17:35:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 17:35:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 17:35:31 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 17:35:31 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 17:35:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 17:35:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:35:31 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 17:35:31 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 17:35:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:35:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:35:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 17:35:31 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:35:31 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:35:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:35:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 17:35:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 17:35:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 17:35:31 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 17:35:31 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 17:35:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:35:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:35:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 17:35:31 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:35:31 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:35:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.MovieSession
2020-05-21 17:35:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:35:31 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-21 17:35:31 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.MovieSession on table movie_session
2020-05-21 17:35:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:35:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:35:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:id]
2020-05-21 17:35:31 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:35:31 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:35:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:35:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:35:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-21 17:35:31 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-21 17:35:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:35:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-21 17:35:31 DEBUG PropertyBinder:266 - Building property movie
2020-05-21 17:35:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=showTime, insertable=true, updatable=true, unique=false}
2020-05-21 17:35:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property showTime with lazy=false
2020-05-21 17:35:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:showTime]
2020-05-21 17:35:31 DEBUG SimpleValueBinder:411 - building SimpleValue for showTime
2020-05-21 17:35:31 DEBUG PropertyBinder:266 - Building property showTime
2020-05-21 17:35:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:35:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:35:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 17:35:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:35:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 17:35:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:35:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:35:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for showTime
2020-05-21 17:35:31 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 17:35:31 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 17:35:31 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-21 17:35:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:35:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:35:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:35:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:35:31 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 17:35:31 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 17:35:31 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 17:35:31 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 17:35:31 DEBUG Settings:72 - Statistics: disabled
2020-05-21 17:35:31 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 17:35:31 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 17:35:31 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 17:35:31 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 17:35:31 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 17:35:31 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 17:35:31 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 17:35:31 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 17:35:31 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 17:35:31 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 17:35:31 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 17:35:31 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 17:35:31 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 17:35:31 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 17:35:31 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 17:35:31 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 17:35:31 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 17:35:31 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 17:35:31 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 17:35:31 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 17:35:31 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 17:35:31 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 17:35:31 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 17:35:31 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 17:35:31 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 17:35:31 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 17:35:31 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 17:35:31 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 17:35:31 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 17:35:31 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 17:35:31 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 17:35:31 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 17:35:31 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 17:35:31 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 17:35:31 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@108d55c4, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 17:35:31 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 17:35:31 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 17:35:31 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c089b2f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5d7835a8]
2020-05-21 17:35:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:35:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:35:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:35:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:35:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:35:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:35:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:35:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:35:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:35:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:35:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:35:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:35:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54402c04]
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:35:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:35:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:35:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:35:32 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:35:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@553bc36c]
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:35:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:35:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:35:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:35:32 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:35:32 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:35:32 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 17:35:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1491344a]
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:35:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:35:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:35:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:35:32 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:35:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1386313f]
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:35:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:35:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:35:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:35:32 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:35:32 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:35:32 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.MovieSession
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie_session where id =?
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaHa3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.showTime as showTime2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, showTime, id) values (?, ?, ?, ?)
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, showTime=? where id=?
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-21 17:35:32 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:35:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433c6abb]
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:35:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5478ce1e]
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:35:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e09c51]
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:35:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:35:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:35:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:35:32 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:35:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@770beef5]
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:35:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@414f13fc]
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:35:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a28987]
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:35:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:35:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:35:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:35:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:35:32 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:35:32 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:35:32 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:35:32 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 17:35:32 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@210d2a6c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:35:32 DEBUG SQL:127 - drop table if exists movie
2020-05-21 17:35:32 DEBUG SQL:127 - drop table if exists movie_session
2020-05-21 17:35:32 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:35:32 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3f018494] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:35:32 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:35:32 DEBUG SQL:127 - create table movie_session (id bigint not null auto_increment, showTime datetime, cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=MyISAM
2020-05-21 17:35:32 DEBUG SQL:127 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-21 17:35:32 DEBUG SQL:127 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-21 17:35:32 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 17:35:32 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 17:35:32 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:35:32 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:35:32 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 17:35:32 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 17:35:32 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@76a805b7
2020-05-21 17:35:32 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: faf338d2-0e44-4b00-a2c8-4cbff834c5ee (<unnamed>)
2020-05-21 17:35:32 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 17:35:32 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 17:35:32 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:35:32 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5416f8db
2020-05-21 17:35:32 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:35:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:35:32 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:35:32 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:35:32 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 17:35:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 17:35:32 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:35:32 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 17:35:32 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:35:32 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 17:35:32 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:35:32 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 17:35:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:35:32 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:35:32 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:35:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:35:32 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:35:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:35:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:35:32 DEBUG TransactionImpl:81 - begin
2020-05-21 17:35:32 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:35:32 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 17:35:32 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:35:32 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:35:32 DEBUG TransactionImpl:98 - committing
2020-05-21 17:35:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:35:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:35:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:35:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:35:32 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:35:32 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 17:35:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:35:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:35:32 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:35:32 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:35:32 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:35:32 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 17:35:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 17:35:32 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 17:35:32 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:35:32 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 17:35:32 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 17:35:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 17:35:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:35:32 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:35:32 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:35:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:35:32 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:35:32 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:35:32 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-21 17:35:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-21 17:35:32 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:35:32 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-21 17:35:32 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:35:32 DEBUG JoinProcessor:279 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-21 17:35:32 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:35:32 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-05-21 17:35:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:35:32 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:35:32 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:35:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:35:32 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:35:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:35:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:35:32 DEBUG TransactionImpl:81 - begin
2020-05-21 17:35:32 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:35:32 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:35:32 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:35:32 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:35:32 DEBUG TransactionImpl:98 - committing
2020-05-21 17:35:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:35:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:35:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:35:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:35:32 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:35:32 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Cinema hall - A, id=1, capacity=50}
2020-05-21 17:35:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:35:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:35:32 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:35:32 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:35:32 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:35:32 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:35:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:35:32 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 17:35:32 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 17:35:32 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 17:35:32 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:35:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:35:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:35:33 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:35:33 DEBUG TransactionImpl:81 - begin
2020-05-21 17:35:33 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:35:33 DEBUG SQL:127 - insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:35:33 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:35:33 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:35:33 DEBUG TransactionImpl:98 - committing
2020-05-21 17:35:33 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:35:33 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:35:33 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:35:33 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:35:33 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:35:33 DEBUG EntityPrinter:117 - com.dev.cinema.model.MovieSession{cinemaHall=com.dev.cinema.model.CinemaHall#1, movie=com.dev.cinema.model.Movie#1, showTime=2020-05-22T17:35:33.009249, id=1}
2020-05-21 17:35:33 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:35:33 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:35:33 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.showTime>:param0 )
2020-05-21 17:35:33 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.showTime>:param0 )
2020-05-21 17:35:33 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:35:33 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'cinema'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'MovieSession'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'movie'
          |  \-[NUM_LONG] Node: '1L'
          \-[GT] Node: '>'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'showTime'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

2020-05-21 17:35:33 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:35:33 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-05-21 17:35:33 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-21 17:35:33 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-21 17:35:33 DEBUG DotNode:698 - getDataType() : movie -> org.hibernate.type.ManyToOneType(com.dev.cinema.model.Movie)
2020-05-21 17:35:33 DEBUG DotNode:656 - dereferenceShortcut() : property movie in com.dev.cinema.model.MovieSession does not require a join.
2020-05-21 17:35:33 DEBUG DotNode:685 - Terminal getPropertyPath = [movie]
2020-05-21 17:35:33 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.movie -> moviesessi0_.movie_id
2020-05-21 17:35:33 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-21 17:35:33 DEBUG DotNode:698 - getDataType() : showTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:35:33 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.showTime -> moviesessi0_.showTime
2020-05-21 17:35:33 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:35:33 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) ( where ( and ( = ( moviesessi0_.movie_id moviesessi0_.id movie ) 1 ) ( > ( moviesessi0_.showTime moviesessi0_.id showTime ) ? ) ) ) )
2020-05-21 17:35:33 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
          |  | referencedTables: [movie_session]
          |  | path: generatedAlias0.movie
          |  | originalPropertyName: movie
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
          |  |  | referencedTables: null
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    referencedTables: null
          |  |    originalText: movie
          |  \-LiteralNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
             | referencedTables: [movie_session]
             | path: generatedAlias0.showTime
             | originalPropertyName: showTime
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
             |  | referencedTables: null
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    referencedTables: null
             |    originalText: showTime
             \-ParameterNode

2020-05-21 17:35:33 DEBUG JoinProcessor:279 - Using FROM fragment [movie_session moviesessi0_]
2020-05-21 17:35:33 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:35:33 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=com.dev.cinema.model.MovieSession}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'moviesessi0_.movie_id' {propertyName=movie,dereferenceType=UNKNOWN,getPropertyPath=movie,path=generatedAlias0.movie,tableAlias=moviesessi0_,className=com.dev.cinema.model.MovieSession,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
          |  |  \-[IDENT] IdentNode: 'movie' {originalText=movie}
          |  \-[NUM_LONG] LiteralNode: '1'
          \-[GT] BinaryLogicOperatorNode: '>'
             +-[DOT] DotNode: 'moviesessi0_.showTime' {propertyName=showTime,dereferenceType=PRIMITIVE,getPropertyPath=showTime,path=generatedAlias0.showTime,tableAlias=moviesessi0_,className=com.dev.cinema.model.MovieSession,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
             |  \-[IDENT] IdentNode: 'showTime' {originalText=showTime}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@576f63f6}

2020-05-21 17:35:33 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:35:33 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.showTime>:param0 )
2020-05-21 17:35:33 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.showTime>?
2020-05-21 17:35:33 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:35:33 DEBUG SQL:127 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.showTime>?
2020-05-21 17:35:33 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:36:51 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 17:36:51 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 17:36:51 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 17:36:51 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 17:36:51 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 17:36:51 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 17:36:52 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 17:36:52 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 17:36:52 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 17:36:52 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 17:36:52 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 17:36:52 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 17:36:52 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 17:36:52 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-21 17:36:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-21 17:36:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 17:36:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 17:36:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:36:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:36:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 17:36:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 17:36:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 17:36:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:36:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 17:36:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 17:36:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 17:36:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 17:36:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:36:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 17:36:52 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 17:36:52 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 17:36:52 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 17:36:52 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 17:36:52 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 17:36:52 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 17:36:53 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 17:36:53 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 17:36:53 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 17:36:53 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 17:36:53 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 17:36:53 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 17:36:53 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 17:36:53 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c089b2f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6999cd39]
2020-05-21 17:36:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 17:36:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:36:53 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 17:36:53 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 17:36:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:36:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:36:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 17:36:53 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:36:53 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:36:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:36:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:36:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:36:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 17:36:53 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:36:53 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:36:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 17:36:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 17:36:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 17:36:53 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 17:36:53 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 17:36:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 17:36:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:36:53 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 17:36:53 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 17:36:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:36:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:36:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 17:36:53 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:36:53 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:36:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:36:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 17:36:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 17:36:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 17:36:53 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 17:36:53 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 17:36:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:36:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:36:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 17:36:53 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:36:53 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:36:53 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.MovieSession
2020-05-21 17:36:53 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:36:53 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-21 17:36:53 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.MovieSession on table movie_session
2020-05-21 17:36:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:36:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:36:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:id]
2020-05-21 17:36:53 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:36:53 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:36:53 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:36:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:36:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-21 17:36:53 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-21 17:36:53 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:36:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-21 17:36:53 DEBUG PropertyBinder:266 - Building property movie
2020-05-21 17:36:53 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=showTime, insertable=true, updatable=true, unique=false}
2020-05-21 17:36:53 DEBUG PropertyBinder:175 - MetadataSourceProcessor property showTime with lazy=false
2020-05-21 17:36:53 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:showTime]
2020-05-21 17:36:53 DEBUG SimpleValueBinder:411 - building SimpleValue for showTime
2020-05-21 17:36:53 DEBUG PropertyBinder:266 - Building property showTime
2020-05-21 17:36:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:36:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:36:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 17:36:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:36:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 17:36:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:36:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:36:53 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for showTime
2020-05-21 17:36:53 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 17:36:53 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 17:36:53 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-21 17:36:53 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:36:53 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:36:53 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:36:53 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:36:53 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 17:36:53 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 17:36:53 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 17:36:53 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 17:36:53 DEBUG Settings:72 - Statistics: disabled
2020-05-21 17:36:53 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 17:36:53 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 17:36:53 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 17:36:53 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 17:36:53 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 17:36:53 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 17:36:53 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 17:36:53 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 17:36:53 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 17:36:53 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 17:36:53 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 17:36:53 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 17:36:53 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 17:36:53 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 17:36:53 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 17:36:53 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 17:36:53 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 17:36:53 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 17:36:53 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 17:36:53 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 17:36:53 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 17:36:53 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 17:36:53 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 17:36:53 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 17:36:53 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 17:36:53 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 17:36:53 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 17:36:53 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 17:36:53 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 17:36:53 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 17:36:53 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 17:36:53 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 17:36:53 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 17:36:53 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 17:36:53 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@108d55c4, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 17:36:53 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 17:36:53 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 17:36:53 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c089b2f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5d7835a8]
2020-05-21 17:36:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:36:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:36:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:36:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:36:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:36:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:36:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:36:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:36:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:36:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:36:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:36:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:36:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54402c04]
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:36:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:36:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:36:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:36:53 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:36:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@553bc36c]
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:36:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:36:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:36:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:36:53 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:36:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:36:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 17:36:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1491344a]
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:36:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:36:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:36:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:36:53 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:36:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1386313f]
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:36:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:36:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:36:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:36:53 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:36:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:36:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.MovieSession
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie_session where id =?
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaHa3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.showTime as showTime2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, showTime, id) values (?, ?, ?, ?)
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, showTime=? where id=?
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-21 17:36:53 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:36:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433c6abb]
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:36:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5478ce1e]
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:36:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e09c51]
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:36:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:36:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:36:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:36:53 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:36:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@770beef5]
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:36:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@414f13fc]
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:36:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a28987]
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:36:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:36:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:36:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:36:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:36:53 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:36:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:36:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:36:53 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 17:36:53 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@210d2a6c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:36:53 DEBUG SQL:127 - drop table if exists movie
2020-05-21 17:36:53 DEBUG SQL:127 - drop table if exists movie_session
2020-05-21 17:36:53 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:36:53 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3f018494] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:36:53 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:36:54 DEBUG SQL:127 - create table movie_session (id bigint not null auto_increment, showTime datetime, cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=MyISAM
2020-05-21 17:36:54 DEBUG SQL:127 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-21 17:36:54 DEBUG SQL:127 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-21 17:36:54 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 17:36:54 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 17:36:54 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:36:54 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:36:54 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 17:36:54 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 17:36:54 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@76a805b7
2020-05-21 17:36:54 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 687b1dde-a1c1-43f2-99a4-f8a1b5a02351 (<unnamed>)
2020-05-21 17:36:54 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 17:36:54 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 17:36:54 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:36:54 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5416f8db
2020-05-21 17:36:54 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:36:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:36:54 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:36:54 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:36:54 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 17:36:54 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 17:36:54 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:36:54 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 17:36:54 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:36:54 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 17:36:54 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:36:54 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 17:36:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:36:54 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:36:54 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:36:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:36:54 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:36:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:36:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:36:54 DEBUG TransactionImpl:81 - begin
2020-05-21 17:36:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:36:54 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 17:36:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:36:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:36:54 DEBUG TransactionImpl:98 - committing
2020-05-21 17:36:54 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:36:54 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:36:54 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:36:54 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:36:54 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:36:54 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 17:36:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:36:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:36:54 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:36:54 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:36:54 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:36:54 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 17:36:54 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 17:36:54 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 17:36:54 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:36:54 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 17:36:54 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 17:36:54 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 17:36:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:36:54 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:36:54 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:36:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:36:54 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:36:54 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:36:54 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-21 17:36:54 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-21 17:36:54 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:36:54 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-21 17:36:54 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:36:54 DEBUG JoinProcessor:279 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-21 17:36:54 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:36:54 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-05-21 17:36:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:36:54 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:36:54 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:36:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:36:54 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:36:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:36:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:36:54 DEBUG TransactionImpl:81 - begin
2020-05-21 17:36:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:36:54 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:36:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:36:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:36:54 DEBUG TransactionImpl:98 - committing
2020-05-21 17:36:54 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:36:54 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:36:54 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:36:54 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:36:54 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:36:54 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Cinema hall - A, id=1, capacity=50}
2020-05-21 17:36:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:36:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:36:54 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:36:54 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:36:54 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:36:54 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:36:54 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:36:54 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 17:36:54 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 17:36:54 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 17:36:54 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:36:54 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:36:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:36:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:36:54 DEBUG TransactionImpl:81 - begin
2020-05-21 17:36:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:36:54 DEBUG SQL:127 - insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:36:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:36:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:36:54 DEBUG TransactionImpl:98 - committing
2020-05-21 17:36:54 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:36:54 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:36:54 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:36:54 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:36:54 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:36:54 DEBUG EntityPrinter:117 - com.dev.cinema.model.MovieSession{cinemaHall=com.dev.cinema.model.CinemaHall#1, movie=com.dev.cinema.model.Movie#1, showTime=2020-05-22T17:36:54.495663, id=1}
2020-05-21 17:36:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:36:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:36:54 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.showTime>:param0 )
2020-05-21 17:36:54 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.showTime>:param0 )
2020-05-21 17:36:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:36:54 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'cinema'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'MovieSession'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'movie'
          |  \-[NUM_LONG] Node: '1L'
          \-[GT] Node: '>'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'showTime'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

2020-05-21 17:36:54 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:36:54 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-05-21 17:36:54 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-21 17:36:54 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-21 17:36:54 DEBUG DotNode:698 - getDataType() : movie -> org.hibernate.type.ManyToOneType(com.dev.cinema.model.Movie)
2020-05-21 17:36:54 DEBUG DotNode:656 - dereferenceShortcut() : property movie in com.dev.cinema.model.MovieSession does not require a join.
2020-05-21 17:36:54 DEBUG DotNode:685 - Terminal getPropertyPath = [movie]
2020-05-21 17:36:54 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.movie -> moviesessi0_.movie_id
2020-05-21 17:36:54 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-21 17:36:54 DEBUG DotNode:698 - getDataType() : showTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:36:54 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.showTime -> moviesessi0_.showTime
2020-05-21 17:36:54 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:36:54 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) ( where ( and ( = ( moviesessi0_.movie_id moviesessi0_.id movie ) 1 ) ( > ( moviesessi0_.showTime moviesessi0_.id showTime ) ? ) ) ) )
2020-05-21 17:36:54 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
          |  | referencedTables: [movie_session]
          |  | path: generatedAlias0.movie
          |  | originalPropertyName: movie
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
          |  |  | referencedTables: null
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    referencedTables: null
          |  |    originalText: movie
          |  \-LiteralNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
             | referencedTables: [movie_session]
             | path: generatedAlias0.showTime
             | originalPropertyName: showTime
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
             |  | referencedTables: null
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    referencedTables: null
             |    originalText: showTime
             \-ParameterNode

2020-05-21 17:36:54 DEBUG JoinProcessor:279 - Using FROM fragment [movie_session moviesessi0_]
2020-05-21 17:36:54 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:36:54 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=com.dev.cinema.model.MovieSession}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'moviesessi0_.movie_id' {propertyName=movie,dereferenceType=UNKNOWN,getPropertyPath=movie,path=generatedAlias0.movie,tableAlias=moviesessi0_,className=com.dev.cinema.model.MovieSession,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
          |  |  \-[IDENT] IdentNode: 'movie' {originalText=movie}
          |  \-[NUM_LONG] LiteralNode: '1'
          \-[GT] BinaryLogicOperatorNode: '>'
             +-[DOT] DotNode: 'moviesessi0_.showTime' {propertyName=showTime,dereferenceType=PRIMITIVE,getPropertyPath=showTime,path=generatedAlias0.showTime,tableAlias=moviesessi0_,className=com.dev.cinema.model.MovieSession,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
             |  \-[IDENT] IdentNode: 'showTime' {originalText=showTime}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@576f63f6}

2020-05-21 17:36:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:36:54 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.showTime>:param0 )
2020-05-21 17:36:54 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.showTime>?
2020-05-21 17:36:54 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:36:54 DEBUG SQL:127 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.showTime>?
2020-05-21 17:36:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:04 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 17:37:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 17:37:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 17:37:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 17:37:05 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 17:37:05 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 17:37:05 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 17:37:05 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 17:37:05 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 17:37:05 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 17:37:05 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 17:37:05 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 17:37:05 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 17:37:05 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-21 17:37:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-21 17:37:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 17:37:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 17:37:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:37:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:37:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 17:37:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 17:37:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 17:37:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:37:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 17:37:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 17:37:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 17:37:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 17:37:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:37:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 17:37:05 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 17:37:05 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 17:37:05 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 17:37:05 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 17:37:05 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 17:37:05 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 17:37:06 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 17:37:06 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 17:37:06 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 17:37:06 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 17:37:06 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 17:37:06 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 17:37:06 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 17:37:06 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5eccd3b9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4d6f197e]
2020-05-21 17:37:06 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 17:37:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:37:06 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 17:37:06 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 17:37:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:37:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 17:37:06 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:37:06 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:37:06 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:37:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:37:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 17:37:06 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:37:06 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:37:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 17:37:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 17:37:06 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 17:37:06 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 17:37:06 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 17:37:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:37:06 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 17:37:06 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 17:37:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:37:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 17:37:06 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:37:06 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:37:06 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:37:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 17:37:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 17:37:06 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 17:37:06 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 17:37:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:37:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 17:37:06 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:37:06 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:37:06 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.MovieSession
2020-05-21 17:37:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:37:06 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-21 17:37:06 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.MovieSession on table movie_session
2020-05-21 17:37:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:37:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:id]
2020-05-21 17:37:06 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:37:06 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:37:06 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:37:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:37:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:06 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-21 17:37:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:37:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:06 DEBUG PropertyBinder:266 - Building property movie
2020-05-21 17:37:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=showTime, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property showTime with lazy=false
2020-05-21 17:37:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:showTime]
2020-05-21 17:37:06 DEBUG SimpleValueBinder:411 - building SimpleValue for showTime
2020-05-21 17:37:06 DEBUG PropertyBinder:266 - Building property showTime
2020-05-21 17:37:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:37:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:37:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 17:37:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:37:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 17:37:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:37:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:37:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for showTime
2020-05-21 17:37:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 17:37:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 17:37:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-21 17:37:06 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:37:06 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:37:06 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:37:06 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:37:06 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 17:37:06 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 17:37:06 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 17:37:06 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 17:37:06 DEBUG Settings:72 - Statistics: disabled
2020-05-21 17:37:06 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 17:37:06 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 17:37:06 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 17:37:06 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 17:37:06 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 17:37:06 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 17:37:06 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 17:37:06 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 17:37:06 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 17:37:06 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 17:37:06 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 17:37:06 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 17:37:06 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 17:37:06 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 17:37:06 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 17:37:06 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 17:37:06 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 17:37:06 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 17:37:06 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 17:37:06 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 17:37:06 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 17:37:06 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 17:37:06 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 17:37:06 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 17:37:06 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 17:37:06 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 17:37:06 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 17:37:06 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 17:37:06 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 17:37:06 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 17:37:06 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 17:37:06 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 17:37:06 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 17:37:06 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 17:37:06 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6ff415ad, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 17:37:06 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 17:37:06 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 17:37:06 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5eccd3b9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7e736350]
2020-05-21 17:37:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:37:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:37:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:37:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:37:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:37:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:37:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:37:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:37:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:37:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:37:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:37:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:37:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fd9e827]
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:37:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:37:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:37:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:37:06 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:37:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2149594a]
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:37:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:37:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:37:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:37:06 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:37:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:37:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 17:37:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6add8e3f]
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:37:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:37:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:37:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:37:06 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:37:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48904d5a]
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:37:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:37:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:37:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:37:06 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:37:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:37:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.MovieSession
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie_session where id =?
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaHa3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.showTime as showTime2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, showTime, id) values (?, ?, ?, ?)
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, showTime=? where id=?
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-21 17:37:06 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:37:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1491344a]
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:37:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d0b0da6]
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:37:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c447c09]
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:37:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:37:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:37:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:37:06 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:37:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@869d87c]
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:37:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37637a24]
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:37:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@770beef5]
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:37:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:37:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:37:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:37:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:37:06 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:37:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:37:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:37:06 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 17:37:06 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3ddeaa5f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:37:07 DEBUG SQL:127 - drop table if exists movie
2020-05-21 17:37:07 DEBUG SQL:127 - drop table if exists movie_session
2020-05-21 17:37:07 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:37:07 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@34d45ec0] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:37:07 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:37:07 DEBUG SQL:127 - create table movie_session (id bigint not null auto_increment, showTime datetime, cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=MyISAM
2020-05-21 17:37:07 DEBUG SQL:127 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-21 17:37:07 DEBUG SQL:127 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-21 17:37:07 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 17:37:07 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 17:37:07 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:37:07 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:37:07 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 17:37:07 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 17:37:07 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@326e0b8e
2020-05-21 17:37:07 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: eb9699a4-ff5e-4206-8ed8-fcfdda18aa8f (<unnamed>)
2020-05-21 17:37:07 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 17:37:07 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 17:37:07 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:37:07 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@a09303
2020-05-21 17:37:07 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:37:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:07 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:37:07 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:37:07 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 17:37:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 17:37:07 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:37:07 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 17:37:07 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:37:07 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 17:37:07 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:37:07 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 17:37:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:07 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:37:07 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:37:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:07 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:37:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:37:07 DEBUG TransactionImpl:81 - begin
2020-05-21 17:37:07 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:37:07 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 17:37:07 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:37:07 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:37:07 DEBUG TransactionImpl:98 - committing
2020-05-21 17:37:07 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:37:07 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:37:07 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:37:07 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:37:07 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:37:07 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 17:37:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:07 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:37:07 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:37:07 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:37:07 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 17:37:07 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 17:37:07 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 17:37:07 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:37:07 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 17:37:07 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 17:37:07 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 17:37:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:07 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:37:07 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:37:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:07 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:37:07 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:37:07 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-21 17:37:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-21 17:37:07 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:37:07 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-21 17:37:07 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:37:07 DEBUG JoinProcessor:279 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-21 17:37:07 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:37:07 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-05-21 17:37:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:07 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:37:07 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:37:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:07 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:37:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:37:07 DEBUG TransactionImpl:81 - begin
2020-05-21 17:37:07 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:37:07 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:37:07 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:37:07 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:37:07 DEBUG TransactionImpl:98 - committing
2020-05-21 17:37:07 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:37:07 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:37:07 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:37:07 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:37:07 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:37:07 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Cinema hall - A, id=1, capacity=50}
2020-05-21 17:37:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:07 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:37:07 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:37:07 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:37:07 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:37:07 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:37:07 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 17:37:07 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 17:37:07 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 17:37:07 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:37:07 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:37:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:37:07 DEBUG TransactionImpl:81 - begin
2020-05-21 17:37:07 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:37:07 DEBUG SQL:127 - insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:37:07 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:37:07 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:37:07 DEBUG TransactionImpl:98 - committing
2020-05-21 17:37:07 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:37:07 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:37:07 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:37:07 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:37:07 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:37:07 DEBUG EntityPrinter:117 - com.dev.cinema.model.MovieSession{cinemaHall=com.dev.cinema.model.CinemaHall#1, movie=com.dev.cinema.model.Movie#1, showTime=2020-05-22T17:37:07.560425, id=1}
2020-05-21 17:37:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:07 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.showTime>:param0 )
2020-05-21 17:37:07 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.showTime>:param0 )
2020-05-21 17:37:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:07 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'cinema'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'MovieSession'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'movie'
          |  \-[NUM_LONG] Node: '1L'
          \-[GT] Node: '>'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'showTime'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

2020-05-21 17:37:07 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:37:07 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-05-21 17:37:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-21 17:37:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-21 17:37:07 DEBUG DotNode:698 - getDataType() : movie -> org.hibernate.type.ManyToOneType(com.dev.cinema.model.Movie)
2020-05-21 17:37:07 DEBUG DotNode:656 - dereferenceShortcut() : property movie in com.dev.cinema.model.MovieSession does not require a join.
2020-05-21 17:37:07 DEBUG DotNode:685 - Terminal getPropertyPath = [movie]
2020-05-21 17:37:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.movie -> moviesessi0_.movie_id
2020-05-21 17:37:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-21 17:37:07 DEBUG DotNode:698 - getDataType() : showTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:37:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.showTime -> moviesessi0_.showTime
2020-05-21 17:37:07 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:37:07 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) ( where ( and ( = ( moviesessi0_.movie_id moviesessi0_.id movie ) 1 ) ( > ( moviesessi0_.showTime moviesessi0_.id showTime ) ? ) ) ) )
2020-05-21 17:37:07 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
          |  | referencedTables: [movie_session]
          |  | path: generatedAlias0.movie
          |  | originalPropertyName: movie
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
          |  |  | referencedTables: null
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    referencedTables: null
          |  |    originalText: movie
          |  \-LiteralNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
             | referencedTables: [movie_session]
             | path: generatedAlias0.showTime
             | originalPropertyName: showTime
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
             |  | referencedTables: null
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    referencedTables: null
             |    originalText: showTime
             \-ParameterNode

2020-05-21 17:37:07 DEBUG JoinProcessor:279 - Using FROM fragment [movie_session moviesessi0_]
2020-05-21 17:37:07 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:37:07 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=com.dev.cinema.model.MovieSession}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'moviesessi0_.movie_id' {propertyName=movie,dereferenceType=UNKNOWN,getPropertyPath=movie,path=generatedAlias0.movie,tableAlias=moviesessi0_,className=com.dev.cinema.model.MovieSession,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
          |  |  \-[IDENT] IdentNode: 'movie' {originalText=movie}
          |  \-[NUM_LONG] LiteralNode: '1'
          \-[GT] BinaryLogicOperatorNode: '>'
             +-[DOT] DotNode: 'moviesessi0_.showTime' {propertyName=showTime,dereferenceType=PRIMITIVE,getPropertyPath=showTime,path=generatedAlias0.showTime,tableAlias=moviesessi0_,className=com.dev.cinema.model.MovieSession,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
             |  \-[IDENT] IdentNode: 'showTime' {originalText=showTime}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@576f63f6}

2020-05-21 17:37:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:07 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.showTime>:param0 )
2020-05-21 17:37:07 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.showTime>?
2020-05-21 17:37:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:07 DEBUG SQL:127 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.showTime>?
2020-05-21 17:37:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:14 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 17:37:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 17:37:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 17:37:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 17:37:15 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 17:37:15 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 17:37:15 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 17:37:15 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 17:37:15 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 17:37:15 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 17:37:15 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 17:37:15 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 17:37:15 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 17:37:15 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-21 17:37:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-21 17:37:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 17:37:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 17:37:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:37:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:37:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 17:37:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 17:37:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 17:37:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:37:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 17:37:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 17:37:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 17:37:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 17:37:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:37:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 17:37:15 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 17:37:16 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 17:37:16 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 17:37:16 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 17:37:16 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 17:37:16 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 17:37:16 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 17:37:16 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 17:37:16 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 17:37:16 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 17:37:16 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 17:37:16 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 17:37:16 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 17:37:16 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66908383] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@41477a6d]
2020-05-21 17:37:16 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 17:37:16 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:37:16 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 17:37:16 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 17:37:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:37:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 17:37:16 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:37:16 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:37:16 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:37:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:37:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 17:37:16 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:37:16 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:37:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 17:37:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 17:37:16 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 17:37:16 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 17:37:16 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 17:37:16 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:37:16 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 17:37:16 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 17:37:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:37:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 17:37:16 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:37:16 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:37:16 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:37:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 17:37:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 17:37:16 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 17:37:16 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 17:37:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:37:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 17:37:16 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:37:16 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:37:16 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.MovieSession
2020-05-21 17:37:16 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:37:16 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-21 17:37:16 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.MovieSession on table movie_session
2020-05-21 17:37:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:37:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:id]
2020-05-21 17:37:16 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:37:16 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:37:16 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:37:16 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:37:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:16 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-21 17:37:16 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:37:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:16 DEBUG PropertyBinder:266 - Building property movie
2020-05-21 17:37:16 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=showTime, insertable=true, updatable=true, unique=false}
2020-05-21 17:37:16 DEBUG PropertyBinder:175 - MetadataSourceProcessor property showTime with lazy=false
2020-05-21 17:37:16 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:showTime]
2020-05-21 17:37:16 DEBUG SimpleValueBinder:411 - building SimpleValue for showTime
2020-05-21 17:37:16 DEBUG PropertyBinder:266 - Building property showTime
2020-05-21 17:37:16 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:37:16 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:37:16 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 17:37:16 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:37:16 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 17:37:16 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:37:16 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:37:16 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for showTime
2020-05-21 17:37:16 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 17:37:16 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 17:37:16 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-21 17:37:16 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:37:16 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:37:16 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:37:16 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:37:16 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 17:37:16 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 17:37:16 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 17:37:16 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 17:37:16 DEBUG Settings:72 - Statistics: disabled
2020-05-21 17:37:16 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 17:37:16 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 17:37:16 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 17:37:16 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 17:37:16 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 17:37:16 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 17:37:16 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 17:37:16 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 17:37:16 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 17:37:16 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 17:37:16 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 17:37:16 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 17:37:16 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 17:37:16 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 17:37:16 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 17:37:16 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 17:37:16 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 17:37:16 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 17:37:16 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 17:37:16 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 17:37:16 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 17:37:16 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 17:37:16 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 17:37:16 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 17:37:16 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 17:37:16 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 17:37:16 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 17:37:16 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 17:37:16 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 17:37:16 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 17:37:16 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 17:37:16 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 17:37:16 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 17:37:16 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 17:37:16 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6bf13698, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 17:37:16 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 17:37:16 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 17:37:16 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66908383] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1816e24a]
2020-05-21 17:37:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:37:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:37:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:37:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:37:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:37:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:37:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:37:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:37:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:37:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:37:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:37:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:37:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a6f6c7e]
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:37:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:37:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:37:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:37:17 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:37:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f521c4]
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:37:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:37:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:37:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:37:17 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:37:17 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:37:17 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 17:37:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433c6abb]
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:37:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:37:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:37:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:37:17 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:37:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a22c4d8]
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:37:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:37:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:37:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:37:17 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:37:17 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:37:17 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.MovieSession
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie_session where id =?
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaHa3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.showTime as showTime2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, showTime, id) values (?, ?, ?, ?)
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, showTime=? where id=?
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-21 17:37:17 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:37:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6504a875]
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:37:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cd64b3f]
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:37:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e76a8d]
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:37:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:37:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:37:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:37:17 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:37:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a28987]
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:37:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38c9e0d6]
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:37:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@310aee0b]
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:37:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:37:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:37:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:37:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:37:17 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:37:17 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:37:17 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:37:17 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 17:37:17 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2e3572e8] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:37:17 DEBUG SQL:127 - drop table if exists movie
2020-05-21 17:37:17 DEBUG SQL:127 - drop table if exists movie_session
2020-05-21 17:37:17 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:37:17 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@62b790a5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:37:17 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:37:17 DEBUG SQL:127 - create table movie_session (id bigint not null auto_increment, showTime datetime, cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=MyISAM
2020-05-21 17:37:17 DEBUG SQL:127 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-21 17:37:17 DEBUG SQL:127 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-21 17:37:17 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 17:37:17 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 17:37:17 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:37:17 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:37:17 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 17:37:17 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 17:37:17 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@56382bc9
2020-05-21 17:37:17 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: f34ec927-4725-48c3-ba1a-24ce0aefd34b (<unnamed>)
2020-05-21 17:37:17 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 17:37:17 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 17:37:17 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:37:17 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6a1ef65c
2020-05-21 17:37:17 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:37:17 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:17 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:37:17 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:37:17 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 17:37:17 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 17:37:17 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:37:17 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 17:37:17 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:37:17 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 17:37:17 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:37:17 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 17:37:17 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:17 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:37:17 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:37:17 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:17 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:37:17 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:17 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:37:17 DEBUG TransactionImpl:81 - begin
2020-05-21 17:37:17 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:37:17 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 17:37:17 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:37:17 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:37:17 DEBUG TransactionImpl:98 - committing
2020-05-21 17:37:17 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:37:17 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:37:17 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:37:17 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:37:17 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:37:17 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 17:37:17 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:17 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:17 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:37:17 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:37:17 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:37:17 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 17:37:17 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:17 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:37:17 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:37:17 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:17 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:37:17 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:37:17 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-21 17:37:17 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-21 17:37:17 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:37:17 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-21 17:37:17 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:37:17 DEBUG JoinProcessor:279 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-21 17:37:17 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:37:17 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-05-21 17:37:17 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:17 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:37:17 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:37:17 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:17 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:37:17 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:17 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:37:17 DEBUG TransactionImpl:81 - begin
2020-05-21 17:37:17 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:37:17 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:37:17 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:37:17 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:37:17 DEBUG TransactionImpl:98 - committing
2020-05-21 17:37:17 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:37:17 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:37:17 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:37:17 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:37:17 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:37:17 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Cinema hall - A, id=1, capacity=50}
2020-05-21 17:37:17 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:17 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:17 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:37:17 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:37:17 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:37:17 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:37:17 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:17 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:37:17 DEBUG TransactionImpl:81 - begin
2020-05-21 17:37:17 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:37:17 DEBUG SQL:127 - insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:37:17 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:37:17 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:37:17 DEBUG TransactionImpl:98 - committing
2020-05-21 17:37:17 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:37:17 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:37:17 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:37:17 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:37:17 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:37:17 DEBUG EntityPrinter:117 - com.dev.cinema.model.MovieSession{cinemaHall=com.dev.cinema.model.CinemaHall#1, movie=com.dev.cinema.model.Movie#1, showTime=2020-05-22T17:37:17.783795, id=1}
2020-05-21 17:37:17 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:17 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:37:17 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.showTime>:param0 )
2020-05-21 17:37:17 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.showTime>:param0 )
2020-05-21 17:37:17 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:17 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'cinema'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'MovieSession'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'movie'
          |  \-[NUM_LONG] Node: '1L'
          \-[GT] Node: '>'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'showTime'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

2020-05-21 17:37:17 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:37:17 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-05-21 17:37:17 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-21 17:37:17 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-21 17:37:17 DEBUG DotNode:698 - getDataType() : movie -> org.hibernate.type.ManyToOneType(com.dev.cinema.model.Movie)
2020-05-21 17:37:17 DEBUG DotNode:656 - dereferenceShortcut() : property movie in com.dev.cinema.model.MovieSession does not require a join.
2020-05-21 17:37:17 DEBUG DotNode:685 - Terminal getPropertyPath = [movie]
2020-05-21 17:37:17 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.movie -> moviesessi0_.movie_id
2020-05-21 17:37:17 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-21 17:37:17 DEBUG DotNode:698 - getDataType() : showTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:37:17 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.showTime -> moviesessi0_.showTime
2020-05-21 17:37:17 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:37:17 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) ( where ( and ( = ( moviesessi0_.movie_id moviesessi0_.id movie ) 1 ) ( > ( moviesessi0_.showTime moviesessi0_.id showTime ) ? ) ) ) )
2020-05-21 17:37:17 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
          |  | referencedTables: [movie_session]
          |  | path: generatedAlias0.movie
          |  | originalPropertyName: movie
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
          |  |  | referencedTables: null
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    referencedTables: null
          |  |    originalText: movie
          |  \-LiteralNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
             | referencedTables: [movie_session]
             | path: generatedAlias0.showTime
             | originalPropertyName: showTime
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
             |  | referencedTables: null
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    referencedTables: null
             |    originalText: showTime
             \-ParameterNode

2020-05-21 17:37:17 DEBUG JoinProcessor:279 - Using FROM fragment [movie_session moviesessi0_]
2020-05-21 17:37:17 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:37:17 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=com.dev.cinema.model.MovieSession}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'moviesessi0_.movie_id' {propertyName=movie,dereferenceType=UNKNOWN,getPropertyPath=movie,path=generatedAlias0.movie,tableAlias=moviesessi0_,className=com.dev.cinema.model.MovieSession,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
          |  |  \-[IDENT] IdentNode: 'movie' {originalText=movie}
          |  \-[NUM_LONG] LiteralNode: '1'
          \-[GT] BinaryLogicOperatorNode: '>'
             +-[DOT] DotNode: 'moviesessi0_.showTime' {propertyName=showTime,dereferenceType=PRIMITIVE,getPropertyPath=showTime,path=generatedAlias0.showTime,tableAlias=moviesessi0_,className=com.dev.cinema.model.MovieSession,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
             |  \-[IDENT] IdentNode: 'showTime' {originalText=showTime}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@576f63f6}

2020-05-21 17:37:17 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:17 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.showTime>:param0 )
2020-05-21 17:37:17 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.showTime>?
2020-05-21 17:37:17 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:37:17 DEBUG SQL:127 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.showTime>?
2020-05-21 17:37:17 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:37:17 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.MovieSession#1]
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.MovieSession#1]
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:190 - Processing attribute `cinemaHall` : value = 1
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:221 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-05-21 17:37:17 DEBUG SQL:127 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:37:17 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:37:17 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.dev.cinema.model.CinemaHall#1
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:190 - Processing attribute `movie` : value = 1
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:221 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-05-21 17:37:17 DEBUG SQL:127 - select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:37:17 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 17:37:17 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.dev.cinema.model.Movie#1
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:190 - Processing attribute `showTime` : value = 2020-05-22T17:37:18
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:221 - Attribute (`showTime`)  - enhanced for lazy-loading? - false
2020-05-21 17:37:17 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.MovieSession#1]
2020-05-21 17:37:17 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:49:17 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-21 17:49:17 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-21 17:49:17 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-21 17:49:17 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-21 17:49:18 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-21 17:49:18 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-21 17:49:18 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-21 17:49:18 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-21 17:49:18 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-21 17:49:18 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-21 17:49:18 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-21 17:49:18 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-21 17:49:18 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-21 17:49:18 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-21 17:49:18 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-21 17:49:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-21 17:49:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-21 17:49:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:49:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-21 17:49:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-21 17:49:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-21 17:49:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-21 17:49:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:49:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-21 17:49:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-21 17:49:18 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-21 17:49:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-21 17:49:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-21 17:49:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-21 17:49:19 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-21 17:49:19 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/cinema?serverTimezone=UTC]
2020-05-21 17:49:19 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-21 17:49:19 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-21 17:49:19 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-21 17:49:19 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-21 17:49:19 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-21 17:49:19 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-21 17:49:19 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-21 17:49:19 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-21 17:49:19 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-21 17:49:19 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-21 17:49:19 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-21 17:49:19 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5eccd3b9]
2020-05-21 17:49:19 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.Movie
2020-05-21 17:49:19 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:49:19 DEBUG EntityBinder:430 - Import with entity name Movie
2020-05-21 17:49:19 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.Movie on table movie
2020-05-21 17:49:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:49:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:49:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:id]
2020-05-21 17:49:19 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:49:19 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:49:19 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:49:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:49:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:49:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:description]
2020-05-21 17:49:19 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:49:19 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:49:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie), mappingColumn=tittle, insertable=true, updatable=true, unique=false}
2020-05-21 17:49:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property tittle with lazy=false
2020-05-21 17:49:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.Movie:tittle]
2020-05-21 17:49:19 DEBUG SimpleValueBinder:411 - building SimpleValue for tittle
2020-05-21 17:49:19 DEBUG PropertyBinder:266 - Building property tittle
2020-05-21 17:49:19 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.CinemaHall
2020-05-21 17:49:19 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:49:19 DEBUG EntityBinder:430 - Import with entity name CinemaHall
2020-05-21 17:49:19 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.CinemaHall on table cinema_hall
2020-05-21 17:49:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:49:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:49:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:id]
2020-05-21 17:49:19 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:49:19 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:49:19 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:49:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=capacity, insertable=true, updatable=true, unique=false}
2020-05-21 17:49:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property capacity with lazy=false
2020-05-21 17:49:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:capacity]
2020-05-21 17:49:19 DEBUG SimpleValueBinder:411 - building SimpleValue for capacity
2020-05-21 17:49:19 DEBUG PropertyBinder:266 - Building property capacity
2020-05-21 17:49:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(cinema_hall), mappingColumn=description, insertable=true, updatable=true, unique=false}
2020-05-21 17:49:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2020-05-21 17:49:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.CinemaHall:description]
2020-05-21 17:49:19 DEBUG SimpleValueBinder:411 - building SimpleValue for description
2020-05-21 17:49:19 DEBUG PropertyBinder:266 - Building property description
2020-05-21 17:49:19 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.dev.cinema.model.MovieSession
2020-05-21 17:49:19 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-21 17:49:19 DEBUG EntityBinder:430 - Import with entity name MovieSession
2020-05-21 17:49:19 DEBUG EntityBinder:873 - Bind entity com.dev.cinema.model.MovieSession on table movie_session
2020-05-21 17:49:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-21 17:49:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-21 17:49:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:id]
2020-05-21 17:49:19 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-21 17:49:19 DEBUG PropertyBinder:266 - Building property id
2020-05-21 17:49:19 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-21 17:49:19 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:49:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=cinemaHall, insertable=true, updatable=true, unique=false}
2020-05-21 17:49:19 DEBUG PropertyBinder:266 - Building property cinemaHall
2020-05-21 17:49:19 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2020-05-21 17:49:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=movie, insertable=true, updatable=true, unique=false}
2020-05-21 17:49:19 DEBUG PropertyBinder:266 - Building property movie
2020-05-21 17:49:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(movie_session), mappingColumn=showTime, insertable=true, updatable=true, unique=false}
2020-05-21 17:49:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property showTime with lazy=false
2020-05-21 17:49:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.dev.cinema.model.MovieSession:showTime]
2020-05-21 17:49:19 DEBUG SimpleValueBinder:411 - building SimpleValue for showTime
2020-05-21 17:49:19 DEBUG PropertyBinder:266 - Building property showTime
2020-05-21 17:49:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:49:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:49:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for tittle
2020-05-21 17:49:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:49:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for capacity
2020-05-21 17:49:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for description
2020-05-21 17:49:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-21 17:49:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for showTime
2020-05-21 17:49:19 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie]
2020-05-21 17:49:19 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [cinema_hall]
2020-05-21 17:49:19 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [movie_session]
2020-05-21 17:49:19 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:49:19 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:49:19 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.CinemaHall
2020-05-21 17:49:19 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: com.dev.cinema.model.Movie
2020-05-21 17:49:19 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-21 17:49:19 DEBUG Settings:68 - SessionFactory name : null
2020-05-21 17:49:19 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-21 17:49:19 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-21 17:49:19 DEBUG Settings:72 - Statistics: disabled
2020-05-21 17:49:19 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-21 17:49:19 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-21 17:49:19 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-21 17:49:19 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-21 17:49:19 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-21 17:49:19 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-21 17:49:19 DEBUG Settings:82 - Default null ordering: NONE
2020-05-21 17:49:19 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-21 17:49:19 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-21 17:49:19 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-21 17:49:19 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-21 17:49:19 DEBUG Settings:90 - Query language substitutions: {}
2020-05-21 17:49:19 DEBUG Settings:91 - Named query checking : enabled
2020-05-21 17:49:19 DEBUG Settings:93 - Second-level cache: disabled
2020-05-21 17:49:19 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-21 17:49:19 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-21 17:49:19 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-21 17:49:19 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-21 17:49:19 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-21 17:49:19 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-21 17:49:19 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-21 17:49:19 DEBUG Settings:102 - JDBC batch size: 15
2020-05-21 17:49:19 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-21 17:49:19 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-21 17:49:19 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-21 17:49:19 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-21 17:49:19 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-21 17:49:19 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-21 17:49:19 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-21 17:49:19 DEBUG Settings:111 - JPA compliance - query : 
2020-05-21 17:49:19 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-21 17:49:19 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-21 17:49:19 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-21 17:49:19 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-21 17:49:19 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/cinema/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.dev.cinema.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/cinema?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/cinema, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@70e13fa, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-21 17:49:19 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-21 17:49:19 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-21 17:49:19 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1fba386c]
2020-05-21 17:49:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:49:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:49:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.CinemaHall] is safe
2020-05-21 17:49:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.CinemaHall
2020-05-21 17:49:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:49:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:49:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.Movie] is safe
2020-05-21 17:49:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.Movie
2020-05-21 17:49:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:49:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:49:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.dev.cinema.model.MovieSession] is safe
2020-05-21 17:49:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.dev.cinema.model.MovieSession
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.CinemaHall
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:3823 -  Version select: select id from cinema_hall where id =?
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select cinemahall_.id, cinemahall_.capacity as capacity2_0_, cinemahall_.description as descript3_0_ from cinema_hall cinemahall_ where cinemahall_.id=?
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into cinema_hall (capacity, description, id) values (?, ?, ?)
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:394 -  Update 0: update cinema_hall set capacity=?, description=? where id=?
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from cinema_hall where id=?
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:49:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17461db]
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:49:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:49:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:49:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:49:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [NONE]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:49:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24d61e4]
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : capacity
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:49:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:49:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:49:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.CinemaHall)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:0>, path=com.dev.cinema.model.CinemaHall)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.CinemaHall)
          - SQL table alias mapping - cinemahall0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-21 17:49:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.CinemaHall [READ]: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:49:19 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:49:19 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.CinemaHall: select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.Movie
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie where id =?
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select movie_.id, movie_.description as descript2_1_, movie_.tittle as tittle3_1_ from movie movie_ where movie_.id=?
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie (description, tittle, id) values (?, ?, ?)
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:394 -  Update 0: update movie set description=?, tittle=? where id=?
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie where id=?
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie (description, tittle) values (?, ?)
2020-05-21 17:49:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fbe155]
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:49:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:49:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:49:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:49:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [NONE]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:49:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58a2b917]
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : tittle
2020-05-21 17:49:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:49:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:49:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.Movie)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:0>, path=com.dev.cinema.model.Movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.Movie)
          - SQL table alias mapping - movie0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-21 17:49:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.Movie [READ]: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:49:19 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:49:19 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.Movie: select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: com.dev.cinema.model.MovieSession
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:3823 -  Version select: select id from movie_session where id =?
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select moviesessi_.id, moviesessi_.cinemaHall_id as cinemaHa3_2_, moviesessi_.movie_id as movie_id4_2_, moviesessi_.showTime as showTime2_2_ from movie_session moviesessi_ where moviesessi_.id=?
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into movie_session (cinemaHall_id, movie_id, showTime, id) values (?, ?, ?, ?)
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:394 -  Update 0: update movie_session set cinemaHall_id=?, movie_id=?, showTime=? where id=?
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from movie_session where id=?
2020-05-21 17:49:19 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:49:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12bbfc54]
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:49:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6015a4a5]
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:49:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14f40030]
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:49:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:49:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:49:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:49:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [NONE]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:49:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e09c51]
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall
2020-05-21 17:49:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f3166a]
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.capacity
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : cinemaHall.description
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie
2020-05-21 17:49:19 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e76a8d]
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.description
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : movie.tittle
2020-05-21 17:49:19 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : showTime
2020-05-21 17:49:19 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-21 17:49:19 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-21 17:49:19 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.dev.cinema.model.MovieSession)
    - Returns
       - EntityReturnImpl(entity=com.dev.cinema.model.MovieSession, querySpaceUid=<gen:0>, path=com.dev.cinema.model.MovieSession)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.CinemaHall, querySpaceUid=<gen:1>, path=com.dev.cinema.model.MovieSession.cinemaHall)
          - EntityAttributeFetchImpl(entity=com.dev.cinema.model.Movie, querySpaceUid=<gen:2>, path=com.dev.cinema.model.MovieSession.movie)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.dev.cinema.model.MovieSession)
          - SQL table alias mapping - moviesessi0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(cinemaHall)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.dev.cinema.model.CinemaHall)
                - SQL table alias mapping - cinemahall1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
          - JOIN (JoinDefinedByMetadata(movie)) : <gen:0> -> <gen:2>
             - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.dev.cinema.model.Movie)
                - SQL table alias mapping - movie2_
                - alias suffix - 2_
                - suffixed key columns - {id1_1_2_}

2020-05-21 17:49:19 DEBUG EntityLoader:137 - Static select for entity com.dev.cinema.model.MovieSession [READ]: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_, cinemahall1_.id as id1_0_1_, cinemahall1_.capacity as capacity2_0_1_, cinemahall1_.description as descript3_0_1_, movie2_.id as id1_1_2_, movie2_.description as descript2_1_2_, movie2_.tittle as tittle3_1_2_ from movie_session moviesessi0_ left outer join cinema_hall cinemahall1_ on moviesessi0_.cinemaHall_id=cinemahall1_.id left outer join movie movie2_ on moviesessi0_.movie_id=movie2_.id where moviesessi0_.id=?
2020-05-21 17:49:19 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:49:19 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.dev.cinema.model.MovieSession: select moviesessi0_.id as id1_2_0_, moviesessi0_.cinemaHall_id as cinemaHa3_2_0_, moviesessi0_.movie_id as movie_id4_2_0_, moviesessi0_.showTime as showTime2_2_0_ from movie_session moviesessi0_ where moviesessi0_.id=?
2020-05-21 17:49:20 DEBUG SQL:127 - drop table if exists cinema_hall
2020-05-21 17:49:20 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3c854752] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:49:20 DEBUG SQL:127 - drop table if exists movie
2020-05-21 17:49:20 DEBUG SQL:127 - drop table if exists movie_session
2020-05-21 17:49:20 DEBUG SQL:127 - create table cinema_hall (id bigint not null auto_increment, capacity integer not null, description varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:49:20 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@eb6ec6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-21 17:49:20 DEBUG SQL:127 - create table movie (id bigint not null auto_increment, description varchar(255), tittle varchar(255), primary key (id)) engine=MyISAM
2020-05-21 17:49:20 DEBUG SQL:127 - create table movie_session (id bigint not null auto_increment, showTime datetime, cinemaHall_id bigint, movie_id bigint, primary key (id)) engine=MyISAM
2020-05-21 17:49:20 DEBUG SQL:127 - alter table movie_session add constraint FK6jauch8jou1nsodork3heqqsr foreign key (cinemaHall_id) references cinema_hall (id)
2020-05-21 17:49:20 DEBUG SQL:127 - alter table movie_session add constraint FKer8dsjajcvlud03f5165ajl39 foreign key (movie_id) references movie (id)
2020-05-21 17:49:20 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-21 17:49:20 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-21 17:49:20 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:49:20 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-21 17:49:20 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-21 17:49:20 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-21 17:49:20 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@57545c3f
2020-05-21 17:49:20 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 3aec88bb-11bc-40ad-8c5c-ca4c5af4ebad (<unnamed>)
2020-05-21 17:49:20 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-21 17:49:20 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-21 17:49:20 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:49:20 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@28a9494b
2020-05-21 17:49:20 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:49:20 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:49:20 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'Movie'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:49:20 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:49:20 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.Movie (generatedAlias0) -> movie0_
2020-05-21 17:49:20 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> movie0_.id
2020-05-21 17:49:20 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:49:20 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} movie0_.id ) ( FromClause{level=1} movie movie0_ ) )
2020-05-21 17:49:20 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Movie): [movie]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.Movie)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:49:20 DEBUG JoinProcessor:279 - Using FROM fragment [movie movie0_]
2020-05-21 17:49:20 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:49:20 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'movie0_.id as id1_1_' {alias=generatedAlias0, className=com.dev.cinema.model.Movie, tableAlias=movie0_}
    |  \-[SQL_TOKEN] SqlFragment: 'movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[movie0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'movie movie0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie,tableAlias=movie0_,origin=null,columns={,className=com.dev.cinema.model.Movie}}

2020-05-21 17:49:20 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:49:20 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.Movie as generatedAlias0
2020-05-21 17:49:20 DEBUG QueryTranslatorImpl:255 - SQL: select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:49:20 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:49:20 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:49:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:49:20 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:49:20 DEBUG TransactionImpl:81 - begin
2020-05-21 17:49:20 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:49:20 DEBUG SQL:127 - insert into movie (description, tittle) values (?, ?)
2020-05-21 17:49:20 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:49:20 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:49:20 DEBUG TransactionImpl:98 - committing
2020-05-21 17:49:20 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:49:20 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:49:20 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:49:20 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:49:20 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:49:20 DEBUG EntityPrinter:117 - com.dev.cinema.model.Movie{description=null, id=1, tittle=Fast and furious}
2020-05-21 17:49:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:49:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:49:20 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Movie as generatedAlias0
2020-05-21 17:49:20 DEBUG SQL:127 - select movie0_.id as id1_1_, movie0_.description as descript2_1_, movie0_.tittle as tittle3_1_ from movie movie0_
2020-05-21 17:49:20 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:49:20 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.Movie#1]
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 17:49:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:49:20 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:49:20 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:49:20 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:49:20 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'dev'
       |     |  |  |  \-[IDENT] Node: 'cinema'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'CinemaHall'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2020-05-21 17:49:20 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:49:20 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.CinemaHall (generatedAlias0) -> cinemahall0_
2020-05-21 17:49:20 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> cinemahall0_.id
2020-05-21 17:49:20 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:49:20 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} cinemahall0_.id ) ( FromClause{level=1} cinema_hall cinemahall0_ ) )
2020-05-21 17:49:20 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity CinemaHall): [cinema_hall]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.CinemaHall)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2020-05-21 17:49:20 DEBUG JoinProcessor:279 - Using FROM fragment [cinema_hall cinemahall0_]
2020-05-21 17:49:20 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:49:20 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (cinema_hall)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'cinemahall0_.id as id1_0_' {alias=generatedAlias0, className=com.dev.cinema.model.CinemaHall, tableAlias=cinemahall0_}
    |  \-[SQL_TOKEN] SqlFragment: 'cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[cinemahall0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'cinema_hall cinemahall0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=cinema_hall,tableAlias=cinemahall0_,origin=null,columns={,className=com.dev.cinema.model.CinemaHall}}

2020-05-21 17:49:20 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:49:20 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.CinemaHall as generatedAlias0
2020-05-21 17:49:20 DEBUG QueryTranslatorImpl:255 - SQL: select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:49:20 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:49:20 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:49:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:49:20 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:49:20 DEBUG TransactionImpl:81 - begin
2020-05-21 17:49:20 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:49:20 DEBUG SQL:127 - insert into cinema_hall (capacity, description) values (?, ?)
2020-05-21 17:49:20 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:49:20 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:49:20 DEBUG TransactionImpl:98 - committing
2020-05-21 17:49:20 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:49:20 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:49:20 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:49:20 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:49:20 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:49:20 DEBUG EntityPrinter:117 - com.dev.cinema.model.CinemaHall{description=Cinema hall - A, id=1, capacity=50}
2020-05-21 17:49:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:49:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:49:20 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from CinemaHall as generatedAlias0
2020-05-21 17:49:20 DEBUG SQL:127 - select cinemahall0_.id as id1_0_, cinemahall0_.capacity as capacity2_0_, cinemahall0_.description as descript3_0_ from cinema_hall cinemahall0_
2020-05-21 17:49:20 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:49:20 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:49:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:49:20 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-21 17:49:20 DEBUG TransactionImpl:81 - begin
2020-05-21 17:49:20 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-21 17:49:20 DEBUG SQL:127 - insert into movie_session (cinemaHall_id, movie_id, showTime) values (?, ?, ?)
2020-05-21 17:49:20 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-21 17:49:20 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-21 17:49:20 DEBUG TransactionImpl:98 - committing
2020-05-21 17:49:20 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-21 17:49:20 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-21 17:49:20 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-21 17:49:20 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-21 17:49:20 DEBUG EntityPrinter:110 - Listing entities:
2020-05-21 17:49:20 DEBUG EntityPrinter:117 - com.dev.cinema.model.MovieSession{cinemaHall=com.dev.cinema.model.CinemaHall#1, movie=com.dev.cinema.model.Movie#1, showTime=2020-05-22T17:49:20.510879, id=1}
2020-05-21 17:49:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:49:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-21 17:49:20 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.showTime>:param0 )
2020-05-21 17:49:20 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.showTime>:param0 )
2020-05-21 17:49:20 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:49:20 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'cinema'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'MovieSession'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'movie'
          |  \-[NUM_LONG] Node: '1L'
          \-[GT] Node: '>'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'showTime'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

2020-05-21 17:49:20 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-21 17:49:20 DEBUG FromElement:147 - FromClause{level=1} : com.dev.cinema.model.MovieSession (generatedAlias0) -> moviesessi0_
2020-05-21 17:49:20 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-21 17:49:20 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-21 17:49:20 DEBUG DotNode:698 - getDataType() : movie -> org.hibernate.type.ManyToOneType(com.dev.cinema.model.Movie)
2020-05-21 17:49:20 DEBUG DotNode:656 - dereferenceShortcut() : property movie in com.dev.cinema.model.MovieSession does not require a join.
2020-05-21 17:49:20 DEBUG DotNode:685 - Terminal getPropertyPath = [movie]
2020-05-21 17:49:20 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.movie -> moviesessi0_.movie_id
2020-05-21 17:49:20 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> moviesessi0_.id
2020-05-21 17:49:20 DEBUG DotNode:698 - getDataType() : showTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-21 17:49:20 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.showTime -> moviesessi0_.showTime
2020-05-21 17:49:20 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-21 17:49:20 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} moviesessi0_.id ) ( FromClause{level=1} movie_session moviesessi0_ ) ( where ( and ( = ( moviesessi0_.movie_id moviesessi0_.id movie ) 1 ) ( > ( moviesessi0_.showTime moviesessi0_.id showTime ) ? ) ) ) )
2020-05-21 17:49:20 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity MovieSession): [movie_session]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-SqlNode
          +-BinaryLogicOperatorNode
          |  +-DotNode
          |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
          |  | referencedTables: [movie_session]
          |  | path: generatedAlias0.movie
          |  | originalPropertyName: movie
          |  |  +-IdentNode
          |  |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
          |  |  | referencedTables: null
          |  |  | originalText: generatedAlias0
          |  |  \-IdentNode
          |  |    persister: null
          |  |    referencedTables: null
          |  |    originalText: movie
          |  \-LiteralNode
          \-BinaryLogicOperatorNode
             +-DotNode
             | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
             | referencedTables: [movie_session]
             | path: generatedAlias0.showTime
             | originalPropertyName: showTime
             |  +-IdentNode
             |  | persister: SingleTableEntityPersister(com.dev.cinema.model.MovieSession)
             |  | referencedTables: null
             |  | originalText: generatedAlias0
             |  \-IdentNode
             |    persister: null
             |    referencedTables: null
             |    originalText: showTime
             \-ParameterNode

2020-05-21 17:49:20 DEBUG JoinProcessor:279 - Using FROM fragment [movie_session moviesessi0_]
2020-05-21 17:49:20 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-21 17:49:20 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (movie_session)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id as id1_2_' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
    |  \-[SQL_TOKEN] SqlFragment: 'moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[moviesessi0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'movie_session moviesessi0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=movie_session,tableAlias=moviesessi0_,origin=null,columns={,className=com.dev.cinema.model.MovieSession}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'moviesessi0_.movie_id' {propertyName=movie,dereferenceType=UNKNOWN,getPropertyPath=movie,path=generatedAlias0.movie,tableAlias=moviesessi0_,className=com.dev.cinema.model.MovieSession,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
          |  |  \-[IDENT] IdentNode: 'movie' {originalText=movie}
          |  \-[NUM_LONG] LiteralNode: '1'
          \-[GT] BinaryLogicOperatorNode: '>'
             +-[DOT] DotNode: 'moviesessi0_.showTime' {propertyName=showTime,dereferenceType=PRIMITIVE,getPropertyPath=showTime,path=generatedAlias0.showTime,tableAlias=moviesessi0_,className=com.dev.cinema.model.MovieSession,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'moviesessi0_.id' {alias=generatedAlias0, className=com.dev.cinema.model.MovieSession, tableAlias=moviesessi0_}
             |  \-[IDENT] IdentNode: 'showTime' {originalText=showTime}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.LocalDateTimeType@576f63f6}

2020-05-21 17:49:20 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:49:20 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from com.dev.cinema.model.MovieSession as generatedAlias0 where ( generatedAlias0.movie=1L ) and ( generatedAlias0.showTime>:param0 )
2020-05-21 17:49:20 DEBUG QueryTranslatorImpl:255 - SQL: select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.showTime>?
2020-05-21 17:49:20 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-21 17:49:20 DEBUG SQL:127 - select moviesessi0_.id as id1_2_, moviesessi0_.cinemaHall_id as cinemaHa3_2_, moviesessi0_.movie_id as movie_id4_2_, moviesessi0_.showTime as showTime2_2_ from movie_session moviesessi0_ where moviesessi0_.movie_id=1 and moviesessi0_.showTime>?
2020-05-21 17:49:20 DEBUG Loader:384 - Result set row: 0
2020-05-21 17:49:20 DEBUG Loader:1586 - Result row: EntityKey[com.dev.cinema.model.MovieSession#1]
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.MovieSession#1]
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:190 - Processing attribute `cinemaHall` : value = 1
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:221 - Attribute (`cinemaHall`)  - enhanced for lazy-loading? - false
2020-05-21 17:49:20 DEBUG SQL:127 - select cinemahall0_.id as id1_0_0_, cinemahall0_.capacity as capacity2_0_0_, cinemahall0_.description as descript3_0_0_ from cinema_hall cinemahall0_ where cinemahall0_.id=?
2020-05-21 17:49:20 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:190 - Processing attribute `capacity` : value = 50
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:221 - Attribute (`capacity`)  - enhanced for lazy-loading? - false
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = Cinema hall - A
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.CinemaHall#1]
2020-05-21 17:49:20 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.dev.cinema.model.CinemaHall#1
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:190 - Processing attribute `movie` : value = 1
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:221 - Attribute (`movie`)  - enhanced for lazy-loading? - false
2020-05-21 17:49:20 DEBUG SQL:127 - select movie0_.id as id1_1_0_, movie0_.description as descript2_1_0_, movie0_.tittle as tittle3_1_0_ from movie movie0_ where movie0_.id=?
2020-05-21 17:49:20 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:178 - Resolving attributes for [com.dev.cinema.model.Movie#1]
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:190 - Processing attribute `description` : value = null
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:221 - Attribute (`description`)  - enhanced for lazy-loading? - false
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:190 - Processing attribute `tittle` : value = Fast and furious
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:221 - Attribute (`tittle`)  - enhanced for lazy-loading? - false
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.Movie#1]
2020-05-21 17:49:20 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : com.dev.cinema.model.Movie#1
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:190 - Processing attribute `showTime` : value = 2020-05-22T17:49:21
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:221 - Attribute (`showTime`)  - enhanced for lazy-loading? - false
2020-05-21 17:49:20 DEBUG TwoPhaseLoad:342 - Done materializing entity [com.dev.cinema.model.MovieSession#1]
2020-05-21 17:49:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
